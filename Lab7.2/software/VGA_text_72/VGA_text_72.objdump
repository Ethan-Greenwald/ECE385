
VGA_text_72.elf:     file format elf32-littlenios2
VGA_text_72.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04000230

Program Header:
    LOAD off    0x00001000 vaddr 0x04000000 paddr 0x04000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04000020 paddr 0x04000020 align 2**12
         filesz 0x0000e49c memsz 0x0000e49c flags r-x
    LOAD off    0x0000f4bc vaddr 0x0400e4bc paddr 0x0401028c align 2**12
         filesz 0x00001dd0 memsz 0x00001dd0 flags rw-
    LOAD off    0x0001205c vaddr 0x0401205c paddr 0x0401205c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04000000  04000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  04000020  04000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000df3c  04000230  04000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000350  0400e16c  0400e16c  0000f16c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001dd0  0400e4bc  0401028c  0000f4bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  0401205c  0401205c  0001205c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  040121bc  040121bc  0001128c  2**0
                  CONTENTS
  7 .onchip_memory2_0 00000000  080051c0  080051c0  0001128c  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0001128c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000ba0  00000000  00000000  000112b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00016714  00000000  00000000  00011e50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00006412  00000000  00000000  00028564  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000841c  00000000  00000000  0002e976  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000188c  00000000  00000000  00036d94  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000032ad  00000000  00000000  00038620  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00015095  00000000  00000000  0003b8cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00050964  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001408  00000000  00000000  000509a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00054872  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00054875  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00054881  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00054882  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00054883  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00054887  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0005488b  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0005488f  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0005489a  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  000548a5  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000007  00000000  00000000  000548b0  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000011  00000000  00000000  000548b7  2**0
                  CONTENTS, READONLY
 30 .jdi          00004e1f  00000000  00000000  000548c8  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     00089a30  00000000  00000000  000596e7  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04000000 l    d  .entry	00000000 .entry
04000020 l    d  .exceptions	00000000 .exceptions
04000230 l    d  .text	00000000 .text
0400e16c l    d  .rodata	00000000 .rodata
0400e4bc l    d  .rwdata	00000000 .rwdata
0401205c l    d  .bss	00000000 .bss
040121bc l    d  .sdram	00000000 .sdram
080051c0 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../VGA_text_72_bsp//obj/HAL/src/crt0.o
04000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 palette_test.c
04010248 l     O .rwdata	00000004 vga_ctrl
0400e4bc l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 text_mode_vga_color.c
0401024c l     O .rwdata	00000004 vga_ctrl
0400e62c l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0400e202 l     O .rodata	00000010 zeroes.4389
0400e212 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 dtoa.c
04002fb4 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 impure.c
0400e79c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0400ebe0 l     O .rwdata	00000020 lc_ctype_charset
0400ebc0 l     O .rwdata	00000020 lc_message_charset
0400ec00 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 mprec.c
0400e244 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0400e368 l     O .rodata	00000010 zeroes.4333
0400e378 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_load.c
0400bdac l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
04010264 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
0400c03c l     F .text	00000034 alt_dev_reg
0400f040 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0400c334 l     F .text	0000020c altera_avalon_jtag_uart_irq
0400c540 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0400cb78 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_close.c
0400cef0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0400d024 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0400d050 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0400d4b0 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0400d610 l     F .text	0000003c alt_get_errno
0400d64c l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
04012090 g     O .bss	00000004 alt_instruction_exception_handler
040062b8 g     F .text	00000074 _mprec_log10
040063a4 g     F .text	0000008c __any_on
0400e250 g     O .rodata	00000028 __mprec_tinytens
0400be98 g     F .text	0000007c alt_main
040120bc g     O .bss	00000100 alt_irq
0401028c g       *ABS*	00000000 __flash_rwdata_start
0400a784 g     F .text	00000088 .hidden __eqdf2
040121bc g       *ABS*	00000000 __alt_heap_start
04004864 g     F .text	0000007c _setlocale_r
0400bf38 g     F .text	00000024 __malloc_unlock
040006d8 g     F .text	0000026c textVGAColorScreenSaver
04008054 g     F .text	0000015c memmove
04005378 g     F .text	000000a8 _Balloc
0400a80c g     F .text	000000dc .hidden __gtdf2
0400dabc g     F .text	00000024 altera_nios2_gen2_irq_init
04000000 g     F .entry	0000000c __reset
04000020 g       *ABS*	00000000 __flash_exceptions_start
04012074 g     O .bss	00000004 errno
040067a4 g     F .text	000013a0 ___svfiprintf_internal_r
0401207c g     O .bss	00000004 alt_argv
04018248 g       *ABS*	00000000 _gp
0400c00c g     F .text	00000030 usleep
0400043c g     F .text	00000050 textVGAColorClr
040100c8 g     O .rwdata	00000180 alt_fd_list
0400dae0 g     F .text	00000090 alt_find_dev
04005230 g     F .text	00000148 memcpy
0400bbc4 g     F .text	000000dc .hidden __floatsidf
0400d594 g     F .text	0000007c alt_io_redirect
0400a8e8 g     F .text	000000f4 .hidden __ltdf2
0400e16c g       *ABS*	00000000 __DTOR_END__
0400dd3c g     F .text	0000009c alt_exception_cause_generated_bad_addr
04006430 g     F .text	00000074 __fpclassifyd
04006214 g     F .text	000000a4 __ratio
0400c738 g     F .text	0000021c altera_avalon_jtag_uart_read
080051c0 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
04000a3c g     F .text	00000064 .hidden __udivsi3
0400e2a0 g     O .rodata	000000c8 __mprec_tens
040048e0 g     F .text	0000000c __locale_charset
04012070 g     O .bss	00000004 __malloc_top_pad
04010258 g     O .rwdata	00000004 __mb_cur_max
04004910 g     F .text	0000000c _localeconv_r
040057ac g     F .text	0000003c __i2b
040064a4 g     F .text	00000054 _sbrk_r
04010278 g     O .rwdata	00000004 alt_max_fd
0401206c g     O .bss	00000004 __malloc_max_sbrked_mem
04009508 g     F .text	000008ac .hidden __adddf3
04005fbc g     F .text	0000010c __b2d
04008f44 g     F .text	000005c4 .hidden __umoddi3
04010250 g     O .rwdata	00000004 _global_impure_ptr
040082d8 g     F .text	00000564 _realloc_r
040121bc g       *ABS*	00000000 __bss_end
0400d3c0 g     F .text	000000f0 alt_iic_isr_register
0400d9b4 g     F .text	00000108 alt_tick
04008948 g     F .text	000005fc .hidden __udivdi3
0400e278 g     O .rodata	00000028 __mprec_bigtens
04005590 g     F .text	00000104 __s2b
0400bca0 g     F .text	000000a8 .hidden __floatunsidf
04005cfc g     F .text	00000060 __mcmp
0400d374 g     F .text	0000004c alt_ic_irq_enabled
0400d918 g     F .text	0000009c alt_alarm_stop
04012084 g     O .bss	00000004 alt_irq_active
040000fc g     F .exceptions	000000d4 alt_irq_handler
040100a0 g     O .rwdata	00000028 alt_dev_null
0400d004 g     F .text	00000020 alt_dcache_flush_all
04005694 g     F .text	00000068 __hi0bits
0400bb44 g     F .text	00000080 .hidden __fixdfsi
0401028c g       *ABS*	00000000 __ram_rwdata_end
04010270 g     O .rwdata	00000008 alt_dev_list
0400e4bc g       *ABS*	00000000 __ram_rodata_end
0400a8e8 g     F .text	000000f4 .hidden __ledf2
04005a74 g     F .text	00000140 __pow5mult
04012064 g     O .bss	00000004 __nlocale_changed
04000aa0 g     F .text	00000058 .hidden __umodsi3
040121bc g       *ABS*	00000000 end
0400c274 g     F .text	000000c0 altera_avalon_jtag_uart_init
040001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0400e16c g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
0400cbf0 g     F .text	0000007c alt_avalon_timer_sc_init
0400bd48 g     F .text	00000064 .hidden __clzsi2
0400c954 g     F .text	00000224 altera_avalon_jtag_uart_write
0400514c g     F .text	000000e4 memchr
04000b9c g     F .text	00000058 _sprintf_r
04007d44 g     F .text	00000310 _free_r
040048ec g     F .text	00000010 __locale_mb_cur_max
0400dfb8 g     F .text	00000180 __call_exitprocs
04012060 g     O .bss	00000004 __mlocale_changed
0401025c g     O .rwdata	00000004 __malloc_sbrk_base
04000230 g     F .text	0000003c _start
04012088 g     O .bss	00000004 _alt_tick_rate
04000b38 g     F .text	00000064 rand
04005bb4 g     F .text	00000148 __lshift
0401208c g     O .bss	00000004 _alt_nticks
0400c0a8 g     F .text	00000068 alt_sys_init
040065d4 g     F .text	000001d0 __ssprint_r
0400dea0 g     F .text	00000118 __register_exitproc
040057e8 g     F .text	0000028c __multiply
0400c5e0 g     F .text	00000068 altera_avalon_jtag_uart_close
04000af8 g     F .text	00000028 .hidden __mulsi3
0400e4bc g       *ABS*	00000000 __ram_rwdata_start
0400e16c g       *ABS*	00000000 __ram_rodata_start
04012094 g     O .bss	00000028 __malloc_current_mallinfo
040060c8 g     F .text	0000014c __d2b
0400c110 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0400dc78 g     F .text	000000c4 alt_get_fd
0400cd98 g     F .text	00000158 alt_busy_sleep
0400de24 g     F .text	0000007c memcmp
0400c1d0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
040121bc g       *ABS*	00000000 __alt_stack_base
0400c220 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04009db4 g     F .text	000009d0 .hidden __divdf3
0400632c g     F .text	00000078 __copybits
0400ec38 g     O .rwdata	00000408 __malloc_av_
0400a9dc g     F .text	0000086c .hidden __muldf3
0400db70 g     F .text	00000108 alt_find_file
0400d08c g     F .text	000000a4 alt_dev_llist_insert
0400bf14 g     F .text	00000024 __malloc_lock
0400bf5c g     F .text	000000b0 sbrk
04000cf8 g     F .text	000022bc ___svfprintf_internal_r
04007b44 g     F .text	000000dc _calloc_r
0401205c g       *ABS*	00000000 __bss_start
040081b0 g     F .text	00000128 memset
0400026c g     F .text	0000001c main
04012080 g     O .bss	00000004 alt_envp
04012068 g     O .bss	00000004 __malloc_max_total_mem
0400c170 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
04000b20 g     F .text	00000018 srand
08000000 g       *ABS*	00000000 __alt_heap_limit
040031dc g     F .text	00001688 _dtoa_r
04004940 g     F .text	0000080c _malloc_r
0401027c g     O .rwdata	00000004 alt_errno
04000944 g     F .text	00000084 .hidden __divsi3
0400059c g     F .text	0000013c setColorPalette
04007c20 g     F .text	00000124 _malloc_trim_r
0400e16c g       *ABS*	00000000 __CTOR_END__
040064f8 g     F .text	000000dc strcmp
0400e16c g       *ABS*	00000000 __flash_rodata_start
0400e16c g       *ABS*	00000000 __DTOR_LIST__
0400a784 g     F .text	00000088 .hidden __nedf2
0400c070 g     F .text	00000038 alt_irq_init
0400d894 g     F .text	00000084 alt_release_fd
04000bf4 g     F .text	0000006c sprintf
0400e388 g     O .rodata	00000100 .hidden __clz_tab
0401205c g     O .bss	00000004 _PathLocale
0400ddd8 g     F .text	00000014 atexit
0400491c g     F .text	00000018 setlocale
04010254 g     O .rwdata	00000004 _impure_ptr
04012078 g     O .bss	00000004 alt_argc
0400d190 g     F .text	00000060 _do_dtors
04004908 g     F .text	00000008 __locale_cjk_lang
04000020 g       .exceptions	00000000 alt_irq_entry
04005f58 g     F .text	00000064 __ulp
04010268 g     O .rwdata	00000008 alt_fs_list
04000020 g       *ABS*	00000000 __ram_exceptions_start
04004934 g     F .text	0000000c localeconv
0400d210 g     F .text	00000050 alt_ic_isr_register
0401028c g       *ABS*	00000000 _edata
040121bc g       *ABS*	00000000 _end
04000230 g       *ABS*	00000000 __ram_exceptions_end
0400c648 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0400048c g     F .text	00000110 textVGADrawColorText
0400d2e8 g     F .text	0000008c alt_ic_irq_disable
04010260 g     O .rwdata	00000004 __malloc_trim_threshold
040048fc g     F .text	0000000c __locale_msgcharset
0400ddec g     F .text	00000038 exit
04005d5c g     F .text	000001fc __mdiff
040009c8 g     F .text	00000074 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
04000020 g     F .exceptions	00000000 alt_exception
04000000 g       *ABS*	00000000 __alt_mem_sdram
0400e138 g     F .text	00000034 _exit
0400cc6c g     F .text	0000012c alt_alarm_start
0400883c g     F .text	0000010c .hidden __muldi3
04000c60 g     F .text	00000098 strlen
0400d738 g     F .text	0000015c open
0400a80c g     F .text	000000dc .hidden __gedf2
0400d1f0 g     F .text	00000020 alt_icache_flush_all
04010280 g     O .rwdata	00000004 alt_priority_mask
0400d260 g     F .text	00000088 alt_ic_irq_enable
0400b248 g     F .text	000008fc .hidden __subdf3
040056fc g     F .text	000000b0 __lo0bits
04010284 g     O .rwdata	00000008 alt_alarm_list
0400d130 g     F .text	00000060 _do_ctors
0400cf2c g     F .text	000000d8 close
04000288 g     F .text	000001b4 paletteTest
0400be14 g     F .text	00000084 alt_load
04005448 g     F .text	00000148 __multadd
04005420 g     F .text	00000028 _Bfree



Disassembly of section .entry:

04000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4000000:	00410034 	movhi	at,1024
    ori r1, r1, %lo(_start)
 4000004:	08408c14 	ori	at,at,560
    jmp r1
 4000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

04000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 400002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 400003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 400004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 400005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 400006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 400007c:	10000326 	beq	r2,zero,400008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4000080:	20000226 	beq	r4,zero,400008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4000084:	40000fc0 	call	40000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4000088:	00000706 	br	40000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 400008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4000098:	40001d00 	call	40001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 400009c:	1000021e 	bne	r2,zero,40000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 40000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 40000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 40000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 40000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40000f8:	ef80083a 	eret

040000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40000fc:	defff904 	addi	sp,sp,-28
 4000100:	dfc00615 	stw	ra,24(sp)
 4000104:	df000515 	stw	fp,20(sp)
 4000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 400010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4000110:	0005313a 	rdctl	r2,ipending
 4000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 400011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4000124:	00800044 	movi	r2,1
 4000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 400012c:	e0fffb17 	ldw	r3,-20(fp)
 4000130:	e0bffc17 	ldw	r2,-16(fp)
 4000134:	1884703a 	and	r2,r3,r2
 4000138:	10001426 	beq	r2,zero,400018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 400013c:	00810074 	movhi	r2,1025
 4000140:	10882f04 	addi	r2,r2,8380
 4000144:	e0fffd17 	ldw	r3,-12(fp)
 4000148:	180690fa 	slli	r3,r3,3
 400014c:	10c5883a 	add	r2,r2,r3
 4000150:	10c00017 	ldw	r3,0(r2)
 4000154:	00810074 	movhi	r2,1025
 4000158:	10882f04 	addi	r2,r2,8380
 400015c:	e13ffd17 	ldw	r4,-12(fp)
 4000160:	200890fa 	slli	r4,r4,3
 4000164:	1105883a 	add	r2,r2,r4
 4000168:	10800104 	addi	r2,r2,4
 400016c:	10800017 	ldw	r2,0(r2)
 4000170:	1009883a 	mov	r4,r2
 4000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 400017c:	0005313a 	rdctl	r2,ipending
 4000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4000184:	e0bfff17 	ldw	r2,-4(fp)
 4000188:	00000706 	br	40001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 400018c:	e0bffc17 	ldw	r2,-16(fp)
 4000190:	1085883a 	add	r2,r2,r2
 4000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4000198:	e0bffd17 	ldw	r2,-12(fp)
 400019c:	10800044 	addi	r2,r2,1
 40001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 40001a4:	003fe106 	br	400012c <__alt_mem_onchip_memory2_0+0xfbffaf6c>

    active = alt_irq_pending ();
 40001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 40001ac:	e0bffb17 	ldw	r2,-20(fp)
 40001b0:	103fdb1e 	bne	r2,zero,4000120 <__alt_mem_onchip_memory2_0+0xfbffaf60>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40001b4:	0001883a 	nop
}
 40001b8:	0001883a 	nop
 40001bc:	e037883a 	mov	sp,fp
 40001c0:	dfc00117 	ldw	ra,4(sp)
 40001c4:	df000017 	ldw	fp,0(sp)
 40001c8:	dec00204 	addi	sp,sp,8
 40001cc:	f800283a 	ret

040001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 40001d0:	defffb04 	addi	sp,sp,-20
 40001d4:	dfc00415 	stw	ra,16(sp)
 40001d8:	df000315 	stw	fp,12(sp)
 40001dc:	df000304 	addi	fp,sp,12
 40001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 40001e4:	00bfffc4 	movi	r2,-1
 40001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 40001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 40001f0:	d0a79217 	ldw	r2,-25016(gp)
 40001f4:	10000726 	beq	r2,zero,4000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 40001f8:	d0a79217 	ldw	r2,-25016(gp)
 40001fc:	e0fffd17 	ldw	r3,-12(fp)
 4000200:	e1bffe17 	ldw	r6,-8(fp)
 4000204:	e17fff17 	ldw	r5,-4(fp)
 4000208:	1809883a 	mov	r4,r3
 400020c:	103ee83a 	callr	r2
 4000210:	00000206 	br	400021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 4000218:	0005883a 	mov	r2,zero
}
 400021c:	e037883a 	mov	sp,fp
 4000220:	dfc00117 	ldw	ra,4(sp)
 4000224:	df000017 	ldw	fp,0(sp)
 4000228:	dec00204 	addi	sp,sp,8
 400022c:	f800283a 	ret

Disassembly of section .text:

04000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4000230:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
 4000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 4000238:	06810074 	movhi	gp,1025
    ori gp, gp, %lo(_gp)
 400023c:	d6a09214 	ori	gp,gp,33352
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4000240:	00810074 	movhi	r2,1025
    ori r2, r2, %lo(__bss_start)
 4000244:	10881714 	ori	r2,r2,8284

    movhi r3, %hi(__bss_end)
 4000248:	00c10074 	movhi	r3,1025
    ori r3, r3, %lo(__bss_end)
 400024c:	18c86f14 	ori	r3,r3,8636

    beq r2, r3, 1f
 4000250:	10c00326 	beq	r2,r3,4000260 <_start+0x30>

0:
    stw zero, (r2)
 4000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 4000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 400025c:	10fffd36 	bltu	r2,r3,4000254 <__alt_mem_onchip_memory2_0+0xfbffb094>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4000260:	400be140 	call	400be14 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4000264:	400be980 	call	400be98 <alt_main>

04000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 4000268:	003fff06 	br	4000268 <__alt_mem_onchip_memory2_0+0xfbffb0a8>

0400026c <main>:
/*
 * main.c
 */

int main(){
 400026c:	defffe04 	addi	sp,sp,-8
 4000270:	dfc00115 	stw	ra,4(sp)
 4000274:	df000015 	stw	fp,0(sp)
 4000278:	d839883a 	mov	fp,sp
	while(1){
		paletteTest();
 400027c:	40002880 	call	4000288 <paletteTest>
		textVGAColorScreenSaver();
 4000280:	40006d80 	call	40006d8 <textVGAColorScreenSaver>
	}
 4000284:	003ffd06 	br	400027c <__alt_mem_onchip_memory2_0+0xfbffb0bc>

04000288 <paletteTest>:

#include "text_mode_vga_color.h"


void paletteTest()
{
 4000288:	defffa04 	addi	sp,sp,-24
 400028c:	dfc00515 	stw	ra,20(sp)
 4000290:	df000415 	stw	fp,16(sp)
 4000294:	dc400315 	stw	r17,12(sp)
 4000298:	dc000215 	stw	r16,8(sp)
 400029c:	df000404 	addi	fp,sp,16
	textVGAColorClr();
 40002a0:	400043c0 	call	400043c <textVGAColorClr>
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);
 40002a4:	00800044 	movi	r2,1
 40002a8:	d8800015 	stw	r2,0(sp)
 40002ac:	000f883a 	mov	r7,zero
 40002b0:	000d883a 	mov	r6,zero
 40002b4:	000b883a 	mov	r5,zero
 40002b8:	01010074 	movhi	r4,1025
 40002bc:	21385b04 	addi	r4,r4,-7828
 40002c0:	400048c0 	call	400048c <textVGADrawColorText>

	for (int i = 0; i < 100; i ++)
 40002c4:	e03ffd15 	stw	zero,-12(fp)
 40002c8:	00005106 	br	4000410 <paletteTest+0x188>
	{
		usleep (20000);
 40002cc:	01138804 	movi	r4,20000
 40002d0:	400c00c0 	call	400c00c <usleep>
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
 40002d4:	4000b380 	call	4000b38 <rand>
 40002d8:	1007883a 	mov	r3,r2
 40002dc:	00a00034 	movhi	r2,32768
 40002e0:	108003c4 	addi	r2,r2,15
 40002e4:	1884703a 	and	r2,r3,r2
 40002e8:	1000040e 	bge	r2,zero,40002fc <paletteTest+0x74>
 40002ec:	10bfffc4 	addi	r2,r2,-1
 40002f0:	00fffc04 	movi	r3,-16
 40002f4:	10c4b03a 	or	r2,r2,r3
 40002f8:	10800044 	addi	r2,r2,1
 40002fc:	14003fcc 	andi	r16,r2,255
 4000300:	4000b380 	call	4000b38 <rand>
 4000304:	1007883a 	mov	r3,r2
 4000308:	00a00034 	movhi	r2,32768
 400030c:	108003c4 	addi	r2,r2,15
 4000310:	1884703a 	and	r2,r3,r2
 4000314:	1000040e 	bge	r2,zero,4000328 <paletteTest+0xa0>
 4000318:	10bfffc4 	addi	r2,r2,-1
 400031c:	00fffc04 	movi	r3,-16
 4000320:	10c4b03a 	or	r2,r2,r3
 4000324:	10800044 	addi	r2,r2,1
 4000328:	14403fcc 	andi	r17,r2,255
 400032c:	4000b380 	call	4000b38 <rand>
 4000330:	1007883a 	mov	r3,r2
 4000334:	00a00034 	movhi	r2,32768
 4000338:	108003c4 	addi	r2,r2,15
 400033c:	1884703a 	and	r2,r3,r2
 4000340:	1000040e 	bge	r2,zero,4000354 <paletteTest+0xcc>
 4000344:	10bfffc4 	addi	r2,r2,-1
 4000348:	00fffc04 	movi	r3,-16
 400034c:	10c4b03a 	or	r2,r2,r3
 4000350:	10800044 	addi	r2,r2,1
 4000354:	10803fcc 	andi	r2,r2,255
 4000358:	100f883a 	mov	r7,r2
 400035c:	880d883a 	mov	r6,r17
 4000360:	800b883a 	mov	r5,r16
 4000364:	0009883a 	mov	r4,zero
 4000368:	400059c0 	call	400059c <setColorPalette>
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
 400036c:	4000b380 	call	4000b38 <rand>
 4000370:	1007883a 	mov	r3,r2
 4000374:	00a00034 	movhi	r2,32768
 4000378:	108003c4 	addi	r2,r2,15
 400037c:	1884703a 	and	r2,r3,r2
 4000380:	1000040e 	bge	r2,zero,4000394 <paletteTest+0x10c>
 4000384:	10bfffc4 	addi	r2,r2,-1
 4000388:	00fffc04 	movi	r3,-16
 400038c:	10c4b03a 	or	r2,r2,r3
 4000390:	10800044 	addi	r2,r2,1
 4000394:	14003fcc 	andi	r16,r2,255
 4000398:	4000b380 	call	4000b38 <rand>
 400039c:	1007883a 	mov	r3,r2
 40003a0:	00a00034 	movhi	r2,32768
 40003a4:	108003c4 	addi	r2,r2,15
 40003a8:	1884703a 	and	r2,r3,r2
 40003ac:	1000040e 	bge	r2,zero,40003c0 <paletteTest+0x138>
 40003b0:	10bfffc4 	addi	r2,r2,-1
 40003b4:	00fffc04 	movi	r3,-16
 40003b8:	10c4b03a 	or	r2,r2,r3
 40003bc:	10800044 	addi	r2,r2,1
 40003c0:	14403fcc 	andi	r17,r2,255
 40003c4:	4000b380 	call	4000b38 <rand>
 40003c8:	1007883a 	mov	r3,r2
 40003cc:	00a00034 	movhi	r2,32768
 40003d0:	108003c4 	addi	r2,r2,15
 40003d4:	1884703a 	and	r2,r3,r2
 40003d8:	1000040e 	bge	r2,zero,40003ec <paletteTest+0x164>
 40003dc:	10bfffc4 	addi	r2,r2,-1
 40003e0:	00fffc04 	movi	r3,-16
 40003e4:	10c4b03a 	or	r2,r2,r3
 40003e8:	10800044 	addi	r2,r2,1
 40003ec:	10803fcc 	andi	r2,r2,255
 40003f0:	100f883a 	mov	r7,r2
 40003f4:	880d883a 	mov	r6,r17
 40003f8:	800b883a 	mov	r5,r16
 40003fc:	01000044 	movi	r4,1
 4000400:	400059c0 	call	400059c <setColorPalette>
void paletteTest()
{
	textVGAColorClr();
	textVGADrawColorText ("This text should cycle through random colors", 0, 0, 0, 1);

	for (int i = 0; i < 100; i ++)
 4000404:	e0bffd17 	ldw	r2,-12(fp)
 4000408:	10800044 	addi	r2,r2,1
 400040c:	e0bffd15 	stw	r2,-12(fp)
 4000410:	e0bffd17 	ldw	r2,-12(fp)
 4000414:	10801910 	cmplti	r2,r2,100
 4000418:	103fac1e 	bne	r2,zero,40002cc <__alt_mem_onchip_memory2_0+0xfbffb10c>
		usleep (20000);
		setColorPalette(0, 	rand() % 16, rand() % 16,rand() % 16); //set color 0 to random color;
		setColorPalette(1, 	rand() % 16, rand() % 16,rand() % 16); //set color 1 to random color;
	}

}
 400041c:	0001883a 	nop
 4000420:	e6fffe04 	addi	sp,fp,-8
 4000424:	dfc00317 	ldw	ra,12(sp)
 4000428:	df000217 	ldw	fp,8(sp)
 400042c:	dc400117 	ldw	r17,4(sp)
 4000430:	dc000017 	ldw	r16,0(sp)
 4000434:	dec00404 	addi	sp,sp,16
 4000438:	f800283a 	ret

0400043c <textVGAColorClr>:
#include <string.h>
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
 400043c:	defffe04 	addi	sp,sp,-8
 4000440:	df000115 	stw	fp,4(sp)
 4000444:	df000104 	addi	fp,sp,4
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
 4000448:	e03fff15 	stw	zero,-4(fp)
 400044c:	00000706 	br	400046c <textVGAColorClr+0x30>
	{
		vga_ctrl->VRAM[i] = 0x00;
 4000450:	d0e00117 	ldw	r3,-32764(gp)
 4000454:	e0bfff17 	ldw	r2,-4(fp)
 4000458:	1885883a 	add	r2,r3,r2
 400045c:	10000005 	stb	zero,0(r2)
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
 4000460:	e0bfff17 	ldw	r2,-4(fp)
 4000464:	10800044 	addi	r2,r2,1
 4000468:	e0bfff15 	stw	r2,-4(fp)
 400046c:	e0bfff17 	ldw	r2,-4(fp)
 4000470:	1084b010 	cmplti	r2,r2,4800
 4000474:	103ff61e 	bne	r2,zero,4000450 <__alt_mem_onchip_memory2_0+0xfbffb290>
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
}
 4000478:	0001883a 	nop
 400047c:	e037883a 	mov	sp,fp
 4000480:	df000017 	ldw	fp,0(sp)
 4000484:	dec00104 	addi	sp,sp,4
 4000488:	f800283a 	ret

0400048c <textVGADrawColorText>:

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
 400048c:	defff704 	addi	sp,sp,-36
 4000490:	dfc00815 	stw	ra,32(sp)
 4000494:	df000715 	stw	fp,28(sp)
 4000498:	dc000615 	stw	r16,24(sp)
 400049c:	df000704 	addi	fp,sp,28
 40004a0:	e13ffa15 	stw	r4,-24(fp)
 40004a4:	e17ffb15 	stw	r5,-20(fp)
 40004a8:	e1bffc15 	stw	r6,-16(fp)
 40004ac:	3807883a 	mov	r3,r7
 40004b0:	e0800217 	ldw	r2,8(fp)
 40004b4:	e0fffd05 	stb	r3,-12(fp)
 40004b8:	e0bffe05 	stb	r2,-8(fp)
	int i = 0;
 40004bc:	e03ff915 	stw	zero,-28(fp)
	while (str[i]!=0)
 40004c0:	00002706 	br	4000560 <textVGADrawColorText+0xd4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
 40004c4:	d4200117 	ldw	r16,-32764(gp)
 40004c8:	01401404 	movi	r5,80
 40004cc:	e13ffc17 	ldw	r4,-16(fp)
 40004d0:	4000af80 	call	4000af8 <__mulsi3>
 40004d4:	1007883a 	mov	r3,r2
 40004d8:	e0bffb17 	ldw	r2,-20(fp)
 40004dc:	1887883a 	add	r3,r3,r2
 40004e0:	e0bff917 	ldw	r2,-28(fp)
 40004e4:	1885883a 	add	r2,r3,r2
 40004e8:	1085883a 	add	r2,r2,r2
 40004ec:	1009883a 	mov	r4,r2
 40004f0:	e0bffe03 	ldbu	r2,-8(fp)
 40004f4:	1004913a 	slli	r2,r2,4
 40004f8:	1007883a 	mov	r3,r2
 40004fc:	e0bffd03 	ldbu	r2,-12(fp)
 4000500:	1884b03a 	or	r2,r3,r2
 4000504:	1007883a 	mov	r3,r2
 4000508:	8105883a 	add	r2,r16,r4
 400050c:	10c00005 	stb	r3,0(r2)
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
 4000510:	d4200117 	ldw	r16,-32764(gp)
 4000514:	01401404 	movi	r5,80
 4000518:	e13ffc17 	ldw	r4,-16(fp)
 400051c:	4000af80 	call	4000af8 <__mulsi3>
 4000520:	1007883a 	mov	r3,r2
 4000524:	e0bffb17 	ldw	r2,-20(fp)
 4000528:	1887883a 	add	r3,r3,r2
 400052c:	e0bff917 	ldw	r2,-28(fp)
 4000530:	1885883a 	add	r2,r3,r2
 4000534:	1085883a 	add	r2,r2,r2
 4000538:	10800044 	addi	r2,r2,1
 400053c:	e0fff917 	ldw	r3,-28(fp)
 4000540:	e13ffa17 	ldw	r4,-24(fp)
 4000544:	20c7883a 	add	r3,r4,r3
 4000548:	18c00003 	ldbu	r3,0(r3)
 400054c:	8085883a 	add	r2,r16,r2
 4000550:	10c00005 	stb	r3,0(r2)
		i++;
 4000554:	e0bff917 	ldw	r2,-28(fp)
 4000558:	10800044 	addi	r2,r2,1
 400055c:	e0bff915 	stw	r2,-28(fp)
}

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
	int i = 0;
	while (str[i]!=0)
 4000560:	e0bff917 	ldw	r2,-28(fp)
 4000564:	e0fffa17 	ldw	r3,-24(fp)
 4000568:	1885883a 	add	r2,r3,r2
 400056c:	10800003 	ldbu	r2,0(r2)
 4000570:	10803fcc 	andi	r2,r2,255
 4000574:	1080201c 	xori	r2,r2,128
 4000578:	10bfe004 	addi	r2,r2,-128
 400057c:	103fd11e 	bne	r2,zero,40004c4 <__alt_mem_onchip_memory2_0+0xfbffb304>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
		i++;
	}
}
 4000580:	0001883a 	nop
 4000584:	e6ffff04 	addi	sp,fp,-4
 4000588:	dfc00217 	ldw	ra,8(sp)
 400058c:	df000117 	ldw	fp,4(sp)
 4000590:	dc000017 	ldw	r16,0(sp)
 4000594:	dec00304 	addi	sp,sp,12
 4000598:	f800283a 	ret

0400059c <setColorPalette>:

void setColorPalette (alt_u8 color, alt_u8 red, alt_u8 green, alt_u8 blue)
{
 400059c:	defffa04 	addi	sp,sp,-24
 40005a0:	df000515 	stw	fp,20(sp)
 40005a4:	df000504 	addi	fp,sp,20
 40005a8:	2011883a 	mov	r8,r4
 40005ac:	2809883a 	mov	r4,r5
 40005b0:	3007883a 	mov	r3,r6
 40005b4:	3805883a 	mov	r2,r7
 40005b8:	e23ffc05 	stb	r8,-16(fp)
 40005bc:	e13ffd05 	stb	r4,-12(fp)
 40005c0:	e0fffe05 	stb	r3,-8(fp)
 40005c4:	e0bfff05 	stb	r2,-4(fp)
	//fill in this function to set the color palette starting at offset 0x0000 2000 (from base)

	alt_32 data = vga_ctrl->color_palette[color/2];
 40005c8:	d0e00117 	ldw	r3,-32764(gp)
 40005cc:	e0bffc03 	ldbu	r2,-16(fp)
 40005d0:	1004d07a 	srli	r2,r2,1
 40005d4:	10803fcc 	andi	r2,r2,255
 40005d8:	10820004 	addi	r2,r2,2048
 40005dc:	1085883a 	add	r2,r2,r2
 40005e0:	1085883a 	add	r2,r2,r2
 40005e4:	1885883a 	add	r2,r3,r2
 40005e8:	10800017 	ldw	r2,0(r2)
 40005ec:	e0bffb15 	stw	r2,-20(fp)

	if((color%2) == 0){
 40005f0:	e0bffc03 	ldbu	r2,-16(fp)
 40005f4:	1080004c 	andi	r2,r2,1
 40005f8:	10803fcc 	andi	r2,r2,255
 40005fc:	1000151e 	bne	r2,zero,4000654 <setColorPalette+0xb8>
		data = data & 0xFFFFE000;
 4000600:	e0fffb17 	ldw	r3,-20(fp)
 4000604:	00b80004 	movi	r2,-8192
 4000608:	1884703a 	and	r2,r3,r2
 400060c:	e0bffb15 	stw	r2,-20(fp)
		data |= (red << 9);
 4000610:	e0bffd03 	ldbu	r2,-12(fp)
 4000614:	1004927a 	slli	r2,r2,9
 4000618:	e0fffb17 	ldw	r3,-20(fp)
 400061c:	1884b03a 	or	r2,r3,r2
 4000620:	e0bffb15 	stw	r2,-20(fp)
		data |= (green << 5);
 4000624:	e0bffe03 	ldbu	r2,-8(fp)
 4000628:	1004917a 	slli	r2,r2,5
 400062c:	e0fffb17 	ldw	r3,-20(fp)
 4000630:	1884b03a 	or	r2,r3,r2
 4000634:	e0bffb15 	stw	r2,-20(fp)
		data |= (blue << 1);
 4000638:	e0bfff03 	ldbu	r2,-4(fp)
 400063c:	1085883a 	add	r2,r2,r2
 4000640:	1007883a 	mov	r3,r2
 4000644:	e0bffb17 	ldw	r2,-20(fp)
 4000648:	10c4b03a 	or	r2,r2,r3
 400064c:	e0bffb15 	stw	r2,-20(fp)
 4000650:	00001206 	br	400069c <setColorPalette+0x100>
	}
	else{
		data = data & 0x00001FFF;
 4000654:	e0bffb17 	ldw	r2,-20(fp)
 4000658:	1087ffcc 	andi	r2,r2,8191
 400065c:	e0bffb15 	stw	r2,-20(fp)
		data |= (red << 21);
 4000660:	e0bffd03 	ldbu	r2,-12(fp)
 4000664:	1004957a 	slli	r2,r2,21
 4000668:	e0fffb17 	ldw	r3,-20(fp)
 400066c:	1884b03a 	or	r2,r3,r2
 4000670:	e0bffb15 	stw	r2,-20(fp)
		data |= (green << 17);
 4000674:	e0bffe03 	ldbu	r2,-8(fp)
 4000678:	1004947a 	slli	r2,r2,17
 400067c:	e0fffb17 	ldw	r3,-20(fp)
 4000680:	1884b03a 	or	r2,r3,r2
 4000684:	e0bffb15 	stw	r2,-20(fp)
		data |= (blue << 13);
 4000688:	e0bfff03 	ldbu	r2,-4(fp)
 400068c:	1004937a 	slli	r2,r2,13
 4000690:	e0fffb17 	ldw	r3,-20(fp)
 4000694:	1884b03a 	or	r2,r3,r2
 4000698:	e0bffb15 	stw	r2,-20(fp)
	}

	vga_ctrl->color_palette[color/2] = data;
 400069c:	d1200117 	ldw	r4,-32764(gp)
 40006a0:	e0bffc03 	ldbu	r2,-16(fp)
 40006a4:	1004d07a 	srli	r2,r2,1
 40006a8:	10803fcc 	andi	r2,r2,255
 40006ac:	e0fffb17 	ldw	r3,-20(fp)
 40006b0:	10820004 	addi	r2,r2,2048
 40006b4:	1085883a 	add	r2,r2,r2
 40006b8:	1085883a 	add	r2,r2,r2
 40006bc:	2085883a 	add	r2,r4,r2
 40006c0:	10c00015 	stw	r3,0(r2)
}
 40006c4:	0001883a 	nop
 40006c8:	e037883a 	mov	sp,fp
 40006cc:	df000017 	ldw	fp,0(sp)
 40006d0:	dec00104 	addi	sp,sp,4
 40006d4:	f800283a 	ret

040006d8 <textVGAColorScreenSaver>:


void textVGAColorScreenSaver()
{
 40006d8:	deffe004 	addi	sp,sp,-128
 40006dc:	dfc01f15 	stw	ra,124(sp)
 40006e0:	df001e15 	stw	fp,120(sp)
 40006e4:	dcc01d15 	stw	r19,116(sp)
 40006e8:	dc801c15 	stw	r18,112(sp)
 40006ec:	dc401b15 	stw	r17,108(sp)
 40006f0:	dc001a15 	stw	r16,104(sp)
 40006f4:	df001e04 	addi	fp,sp,120
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
 40006f8:	400043c0 	call	400043c <textVGAColorClr>
	//initialize palette
	for (int i = 0; i < 16; i++)
 40006fc:	e03fe515 	stw	zero,-108(fp)
 4000700:	00002806 	br	40007a4 <textVGAColorScreenSaver+0xcc>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
 4000704:	e0bfe517 	ldw	r2,-108(fp)
 4000708:	14403fcc 	andi	r17,r2,255
 400070c:	04010074 	movhi	r16,1025
 4000710:	84398b04 	addi	r16,r16,-6612
 4000714:	e0bfe517 	ldw	r2,-108(fp)
 4000718:	014005c4 	movi	r5,23
 400071c:	1009883a 	mov	r4,r2
 4000720:	4000af80 	call	4000af8 <__mulsi3>
 4000724:	8085883a 	add	r2,r16,r2
 4000728:	10800504 	addi	r2,r2,20
 400072c:	10800003 	ldbu	r2,0(r2)
 4000730:	14803fcc 	andi	r18,r2,255
 4000734:	04010074 	movhi	r16,1025
 4000738:	84398b04 	addi	r16,r16,-6612
 400073c:	e0bfe517 	ldw	r2,-108(fp)
 4000740:	014005c4 	movi	r5,23
 4000744:	1009883a 	mov	r4,r2
 4000748:	4000af80 	call	4000af8 <__mulsi3>
 400074c:	8085883a 	add	r2,r16,r2
 4000750:	10800544 	addi	r2,r2,21
 4000754:	10800003 	ldbu	r2,0(r2)
 4000758:	14c03fcc 	andi	r19,r2,255
 400075c:	04010074 	movhi	r16,1025
 4000760:	84398b04 	addi	r16,r16,-6612
 4000764:	e0bfe517 	ldw	r2,-108(fp)
 4000768:	014005c4 	movi	r5,23
 400076c:	1009883a 	mov	r4,r2
 4000770:	4000af80 	call	4000af8 <__mulsi3>
 4000774:	8085883a 	add	r2,r16,r2
 4000778:	10800584 	addi	r2,r2,22
 400077c:	10800003 	ldbu	r2,0(r2)
 4000780:	10803fcc 	andi	r2,r2,255
 4000784:	100f883a 	mov	r7,r2
 4000788:	980d883a 	mov	r6,r19
 400078c:	900b883a 	mov	r5,r18
 4000790:	8809883a 	mov	r4,r17
 4000794:	400059c0 	call	400059c <setColorPalette>
	//This is the function you call for your week 2 demo
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
	//initialize palette
	for (int i = 0; i < 16; i++)
 4000798:	e0bfe517 	ldw	r2,-108(fp)
 400079c:	10800044 	addi	r2,r2,1
 40007a0:	e0bfe515 	stw	r2,-108(fp)
 40007a4:	e0bfe517 	ldw	r2,-108(fp)
 40007a8:	10800410 	cmplti	r2,r2,16
 40007ac:	103fd51e 	bne	r2,zero,4000704 <__alt_mem_onchip_memory2_0+0xfbffb544>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
	}
	while (1)
	{
		fg = rand() % 16;
 40007b0:	4000b380 	call	4000b38 <rand>
 40007b4:	1007883a 	mov	r3,r2
 40007b8:	00a00034 	movhi	r2,32768
 40007bc:	108003c4 	addi	r2,r2,15
 40007c0:	1884703a 	and	r2,r3,r2
 40007c4:	1000040e 	bge	r2,zero,40007d8 <textVGAColorScreenSaver+0x100>
 40007c8:	10bfffc4 	addi	r2,r2,-1
 40007cc:	00fffc04 	movi	r3,-16
 40007d0:	10c4b03a 	or	r2,r2,r3
 40007d4:	10800044 	addi	r2,r2,1
 40007d8:	e0bfe315 	stw	r2,-116(fp)
		bg = rand() % 16;
 40007dc:	4000b380 	call	4000b38 <rand>
 40007e0:	1007883a 	mov	r3,r2
 40007e4:	00a00034 	movhi	r2,32768
 40007e8:	108003c4 	addi	r2,r2,15
 40007ec:	1884703a 	and	r2,r3,r2
 40007f0:	1000040e 	bge	r2,zero,4000804 <textVGAColorScreenSaver+0x12c>
 40007f4:	10bfffc4 	addi	r2,r2,-1
 40007f8:	00fffc04 	movi	r3,-16
 40007fc:	10c4b03a 	or	r2,r2,r3
 4000800:	10800044 	addi	r2,r2,1
 4000804:	e0bfe415 	stw	r2,-112(fp)
		while (fg == bg)
 4000808:	00001606 	br	4000864 <textVGAColorScreenSaver+0x18c>
		{
			fg = rand() % 16;
 400080c:	4000b380 	call	4000b38 <rand>
 4000810:	1007883a 	mov	r3,r2
 4000814:	00a00034 	movhi	r2,32768
 4000818:	108003c4 	addi	r2,r2,15
 400081c:	1884703a 	and	r2,r3,r2
 4000820:	1000040e 	bge	r2,zero,4000834 <textVGAColorScreenSaver+0x15c>
 4000824:	10bfffc4 	addi	r2,r2,-1
 4000828:	00fffc04 	movi	r3,-16
 400082c:	10c4b03a 	or	r2,r2,r3
 4000830:	10800044 	addi	r2,r2,1
 4000834:	e0bfe315 	stw	r2,-116(fp)
			bg = rand() % 16;
 4000838:	4000b380 	call	4000b38 <rand>
 400083c:	1007883a 	mov	r3,r2
 4000840:	00a00034 	movhi	r2,32768
 4000844:	108003c4 	addi	r2,r2,15
 4000848:	1884703a 	and	r2,r3,r2
 400084c:	1000040e 	bge	r2,zero,4000860 <textVGAColorScreenSaver+0x188>
 4000850:	10bfffc4 	addi	r2,r2,-1
 4000854:	00fffc04 	movi	r3,-16
 4000858:	10c4b03a 	or	r2,r2,r3
 400085c:	10800044 	addi	r2,r2,1
 4000860:	e0bfe415 	stw	r2,-112(fp)
	}
	while (1)
	{
		fg = rand() % 16;
		bg = rand() % 16;
		while (fg == bg)
 4000864:	e0ffe317 	ldw	r3,-116(fp)
 4000868:	e0bfe417 	ldw	r2,-112(fp)
 400086c:	18bfe726 	beq	r3,r2,400080c <__alt_mem_onchip_memory2_0+0xfbffb64c>
		{
			fg = rand() % 16;
			bg = rand() % 16;
		}
		sprintf(color_string, "Drawing %s text with %s background", colors[fg].name, colors[bg].name);
 4000870:	014005c4 	movi	r5,23
 4000874:	e13fe317 	ldw	r4,-116(fp)
 4000878:	4000af80 	call	4000af8 <__mulsi3>
 400087c:	1007883a 	mov	r3,r2
 4000880:	00810074 	movhi	r2,1025
 4000884:	10b98b04 	addi	r2,r2,-6612
 4000888:	18a1883a 	add	r16,r3,r2
 400088c:	014005c4 	movi	r5,23
 4000890:	e13fe417 	ldw	r4,-112(fp)
 4000894:	4000af80 	call	4000af8 <__mulsi3>
 4000898:	1007883a 	mov	r3,r2
 400089c:	00810074 	movhi	r2,1025
 40008a0:	10b98b04 	addi	r2,r2,-6612
 40008a4:	1887883a 	add	r3,r3,r2
 40008a8:	e0bfe804 	addi	r2,fp,-96
 40008ac:	180f883a 	mov	r7,r3
 40008b0:	800d883a 	mov	r6,r16
 40008b4:	01410074 	movhi	r5,1025
 40008b8:	29786704 	addi	r5,r5,-7780
 40008bc:	1009883a 	mov	r4,r2
 40008c0:	4000bf40 	call	4000bf4 <sprintf>
		x = rand() % (80-strlen(color_string));
 40008c4:	4000b380 	call	4000b38 <rand>
 40008c8:	1021883a 	mov	r16,r2
 40008cc:	e0bfe804 	addi	r2,fp,-96
 40008d0:	1009883a 	mov	r4,r2
 40008d4:	4000c600 	call	4000c60 <strlen>
 40008d8:	1007883a 	mov	r3,r2
 40008dc:	00801404 	movi	r2,80
 40008e0:	10c5c83a 	sub	r2,r2,r3
 40008e4:	100b883a 	mov	r5,r2
 40008e8:	8009883a 	mov	r4,r16
 40008ec:	4000aa00 	call	4000aa0 <__umodsi3>
 40008f0:	e0bfe615 	stw	r2,-104(fp)
		y = rand() % 30;
 40008f4:	4000b380 	call	4000b38 <rand>
 40008f8:	01400784 	movi	r5,30
 40008fc:	1009883a 	mov	r4,r2
 4000900:	40009c80 	call	40009c8 <__modsi3>
 4000904:	e0bfe715 	stw	r2,-100(fp)
		textVGADrawColorText (color_string, x, y, bg, fg);
 4000908:	e0bfe417 	ldw	r2,-112(fp)
 400090c:	11003fcc 	andi	r4,r2,255
 4000910:	e0bfe317 	ldw	r2,-116(fp)
 4000914:	10803fcc 	andi	r2,r2,255
 4000918:	e0ffe804 	addi	r3,fp,-96
 400091c:	d8800015 	stw	r2,0(sp)
 4000920:	200f883a 	mov	r7,r4
 4000924:	e1bfe717 	ldw	r6,-100(fp)
 4000928:	e17fe617 	ldw	r5,-104(fp)
 400092c:	1809883a 	mov	r4,r3
 4000930:	400048c0 	call	400048c <textVGADrawColorText>
		usleep (100000);
 4000934:	010000b4 	movhi	r4,2
 4000938:	2121a804 	addi	r4,r4,-31072
 400093c:	400c00c0 	call	400c00c <usleep>
	}
 4000940:	003f9b06 	br	40007b0 <__alt_mem_onchip_memory2_0+0xfbffb5f0>

04000944 <__divsi3>:
 4000944:	20001b16 	blt	r4,zero,40009b4 <__divsi3+0x70>
 4000948:	000f883a 	mov	r7,zero
 400094c:	28001616 	blt	r5,zero,40009a8 <__divsi3+0x64>
 4000950:	200d883a 	mov	r6,r4
 4000954:	29001a2e 	bgeu	r5,r4,40009c0 <__divsi3+0x7c>
 4000958:	00800804 	movi	r2,32
 400095c:	00c00044 	movi	r3,1
 4000960:	00000106 	br	4000968 <__divsi3+0x24>
 4000964:	10000d26 	beq	r2,zero,400099c <__divsi3+0x58>
 4000968:	294b883a 	add	r5,r5,r5
 400096c:	10bfffc4 	addi	r2,r2,-1
 4000970:	18c7883a 	add	r3,r3,r3
 4000974:	293ffb36 	bltu	r5,r4,4000964 <__alt_mem_onchip_memory2_0+0xfbffb7a4>
 4000978:	0005883a 	mov	r2,zero
 400097c:	18000726 	beq	r3,zero,400099c <__divsi3+0x58>
 4000980:	0005883a 	mov	r2,zero
 4000984:	31400236 	bltu	r6,r5,4000990 <__divsi3+0x4c>
 4000988:	314dc83a 	sub	r6,r6,r5
 400098c:	10c4b03a 	or	r2,r2,r3
 4000990:	1806d07a 	srli	r3,r3,1
 4000994:	280ad07a 	srli	r5,r5,1
 4000998:	183ffa1e 	bne	r3,zero,4000984 <__alt_mem_onchip_memory2_0+0xfbffb7c4>
 400099c:	38000126 	beq	r7,zero,40009a4 <__divsi3+0x60>
 40009a0:	0085c83a 	sub	r2,zero,r2
 40009a4:	f800283a 	ret
 40009a8:	014bc83a 	sub	r5,zero,r5
 40009ac:	39c0005c 	xori	r7,r7,1
 40009b0:	003fe706 	br	4000950 <__alt_mem_onchip_memory2_0+0xfbffb790>
 40009b4:	0109c83a 	sub	r4,zero,r4
 40009b8:	01c00044 	movi	r7,1
 40009bc:	003fe306 	br	400094c <__alt_mem_onchip_memory2_0+0xfbffb78c>
 40009c0:	00c00044 	movi	r3,1
 40009c4:	003fee06 	br	4000980 <__alt_mem_onchip_memory2_0+0xfbffb7c0>

040009c8 <__modsi3>:
 40009c8:	20001716 	blt	r4,zero,4000a28 <__modsi3+0x60>
 40009cc:	000f883a 	mov	r7,zero
 40009d0:	2005883a 	mov	r2,r4
 40009d4:	28001216 	blt	r5,zero,4000a20 <__modsi3+0x58>
 40009d8:	2900162e 	bgeu	r5,r4,4000a34 <__modsi3+0x6c>
 40009dc:	01800804 	movi	r6,32
 40009e0:	00c00044 	movi	r3,1
 40009e4:	00000106 	br	40009ec <__modsi3+0x24>
 40009e8:	30000a26 	beq	r6,zero,4000a14 <__modsi3+0x4c>
 40009ec:	294b883a 	add	r5,r5,r5
 40009f0:	31bfffc4 	addi	r6,r6,-1
 40009f4:	18c7883a 	add	r3,r3,r3
 40009f8:	293ffb36 	bltu	r5,r4,40009e8 <__alt_mem_onchip_memory2_0+0xfbffb828>
 40009fc:	18000526 	beq	r3,zero,4000a14 <__modsi3+0x4c>
 4000a00:	1806d07a 	srli	r3,r3,1
 4000a04:	11400136 	bltu	r2,r5,4000a0c <__modsi3+0x44>
 4000a08:	1145c83a 	sub	r2,r2,r5
 4000a0c:	280ad07a 	srli	r5,r5,1
 4000a10:	183ffb1e 	bne	r3,zero,4000a00 <__alt_mem_onchip_memory2_0+0xfbffb840>
 4000a14:	38000126 	beq	r7,zero,4000a1c <__modsi3+0x54>
 4000a18:	0085c83a 	sub	r2,zero,r2
 4000a1c:	f800283a 	ret
 4000a20:	014bc83a 	sub	r5,zero,r5
 4000a24:	003fec06 	br	40009d8 <__alt_mem_onchip_memory2_0+0xfbffb818>
 4000a28:	0109c83a 	sub	r4,zero,r4
 4000a2c:	01c00044 	movi	r7,1
 4000a30:	003fe706 	br	40009d0 <__alt_mem_onchip_memory2_0+0xfbffb810>
 4000a34:	00c00044 	movi	r3,1
 4000a38:	003ff106 	br	4000a00 <__alt_mem_onchip_memory2_0+0xfbffb840>

04000a3c <__udivsi3>:
 4000a3c:	200d883a 	mov	r6,r4
 4000a40:	2900152e 	bgeu	r5,r4,4000a98 <__udivsi3+0x5c>
 4000a44:	28001416 	blt	r5,zero,4000a98 <__udivsi3+0x5c>
 4000a48:	00800804 	movi	r2,32
 4000a4c:	00c00044 	movi	r3,1
 4000a50:	00000206 	br	4000a5c <__udivsi3+0x20>
 4000a54:	10000e26 	beq	r2,zero,4000a90 <__udivsi3+0x54>
 4000a58:	28000516 	blt	r5,zero,4000a70 <__udivsi3+0x34>
 4000a5c:	294b883a 	add	r5,r5,r5
 4000a60:	10bfffc4 	addi	r2,r2,-1
 4000a64:	18c7883a 	add	r3,r3,r3
 4000a68:	293ffa36 	bltu	r5,r4,4000a54 <__alt_mem_onchip_memory2_0+0xfbffb894>
 4000a6c:	18000826 	beq	r3,zero,4000a90 <__udivsi3+0x54>
 4000a70:	0005883a 	mov	r2,zero
 4000a74:	31400236 	bltu	r6,r5,4000a80 <__udivsi3+0x44>
 4000a78:	314dc83a 	sub	r6,r6,r5
 4000a7c:	10c4b03a 	or	r2,r2,r3
 4000a80:	1806d07a 	srli	r3,r3,1
 4000a84:	280ad07a 	srli	r5,r5,1
 4000a88:	183ffa1e 	bne	r3,zero,4000a74 <__alt_mem_onchip_memory2_0+0xfbffb8b4>
 4000a8c:	f800283a 	ret
 4000a90:	0005883a 	mov	r2,zero
 4000a94:	f800283a 	ret
 4000a98:	00c00044 	movi	r3,1
 4000a9c:	003ff406 	br	4000a70 <__alt_mem_onchip_memory2_0+0xfbffb8b0>

04000aa0 <__umodsi3>:
 4000aa0:	2005883a 	mov	r2,r4
 4000aa4:	2900122e 	bgeu	r5,r4,4000af0 <__umodsi3+0x50>
 4000aa8:	28001116 	blt	r5,zero,4000af0 <__umodsi3+0x50>
 4000aac:	01800804 	movi	r6,32
 4000ab0:	00c00044 	movi	r3,1
 4000ab4:	00000206 	br	4000ac0 <__umodsi3+0x20>
 4000ab8:	30000c26 	beq	r6,zero,4000aec <__umodsi3+0x4c>
 4000abc:	28000516 	blt	r5,zero,4000ad4 <__umodsi3+0x34>
 4000ac0:	294b883a 	add	r5,r5,r5
 4000ac4:	31bfffc4 	addi	r6,r6,-1
 4000ac8:	18c7883a 	add	r3,r3,r3
 4000acc:	293ffa36 	bltu	r5,r4,4000ab8 <__alt_mem_onchip_memory2_0+0xfbffb8f8>
 4000ad0:	18000626 	beq	r3,zero,4000aec <__umodsi3+0x4c>
 4000ad4:	1806d07a 	srli	r3,r3,1
 4000ad8:	11400136 	bltu	r2,r5,4000ae0 <__umodsi3+0x40>
 4000adc:	1145c83a 	sub	r2,r2,r5
 4000ae0:	280ad07a 	srli	r5,r5,1
 4000ae4:	183ffb1e 	bne	r3,zero,4000ad4 <__alt_mem_onchip_memory2_0+0xfbffb914>
 4000ae8:	f800283a 	ret
 4000aec:	f800283a 	ret
 4000af0:	00c00044 	movi	r3,1
 4000af4:	003ff706 	br	4000ad4 <__alt_mem_onchip_memory2_0+0xfbffb914>

04000af8 <__mulsi3>:
 4000af8:	0005883a 	mov	r2,zero
 4000afc:	20000726 	beq	r4,zero,4000b1c <__mulsi3+0x24>
 4000b00:	20c0004c 	andi	r3,r4,1
 4000b04:	2008d07a 	srli	r4,r4,1
 4000b08:	18000126 	beq	r3,zero,4000b10 <__mulsi3+0x18>
 4000b0c:	1145883a 	add	r2,r2,r5
 4000b10:	294b883a 	add	r5,r5,r5
 4000b14:	203ffa1e 	bne	r4,zero,4000b00 <__alt_mem_onchip_memory2_0+0xfbffb940>
 4000b18:	f800283a 	ret
 4000b1c:	f800283a 	ret

04000b20 <srand>:
 4000b20:	00810074 	movhi	r2,1025
 4000b24:	10809504 	addi	r2,r2,596
 4000b28:	10800017 	ldw	r2,0(r2)
 4000b2c:	11002915 	stw	r4,164(r2)
 4000b30:	10002a15 	stw	zero,168(r2)
 4000b34:	f800283a 	ret

04000b38 <rand>:
 4000b38:	00810074 	movhi	r2,1025
 4000b3c:	defffe04 	addi	sp,sp,-8
 4000b40:	10809504 	addi	r2,r2,596
 4000b44:	dc000015 	stw	r16,0(sp)
 4000b48:	14000017 	ldw	r16,0(r2)
 4000b4c:	dfc00115 	stw	ra,4(sp)
 4000b50:	01932574 	movhi	r6,19605
 4000b54:	81002917 	ldw	r4,164(r16)
 4000b58:	81402a17 	ldw	r5,168(r16)
 4000b5c:	01d614b4 	movhi	r7,22610
 4000b60:	319fcb44 	addi	r6,r6,32557
 4000b64:	39fd0b44 	addi	r7,r7,-3027
 4000b68:	400883c0 	call	400883c <__muldi3>
 4000b6c:	11000044 	addi	r4,r2,1
 4000b70:	2085803a 	cmpltu	r2,r4,r2
 4000b74:	10c7883a 	add	r3,r2,r3
 4000b78:	00a00034 	movhi	r2,32768
 4000b7c:	10bfffc4 	addi	r2,r2,-1
 4000b80:	1884703a 	and	r2,r3,r2
 4000b84:	81002915 	stw	r4,164(r16)
 4000b88:	80c02a15 	stw	r3,168(r16)
 4000b8c:	dfc00117 	ldw	ra,4(sp)
 4000b90:	dc000017 	ldw	r16,0(sp)
 4000b94:	dec00204 	addi	sp,sp,8
 4000b98:	f800283a 	ret

04000b9c <_sprintf_r>:
 4000b9c:	deffe404 	addi	sp,sp,-112
 4000ba0:	2807883a 	mov	r3,r5
 4000ba4:	dfc01a15 	stw	ra,104(sp)
 4000ba8:	d9c01b15 	stw	r7,108(sp)
 4000bac:	00a00034 	movhi	r2,32768
 4000bb0:	10bfffc4 	addi	r2,r2,-1
 4000bb4:	02008204 	movi	r8,520
 4000bb8:	d8800215 	stw	r2,8(sp)
 4000bbc:	d8800515 	stw	r2,20(sp)
 4000bc0:	d9c01b04 	addi	r7,sp,108
 4000bc4:	d80b883a 	mov	r5,sp
 4000bc8:	00bfffc4 	movi	r2,-1
 4000bcc:	d8c00015 	stw	r3,0(sp)
 4000bd0:	d8c00415 	stw	r3,16(sp)
 4000bd4:	da00030d 	sth	r8,12(sp)
 4000bd8:	d880038d 	sth	r2,14(sp)
 4000bdc:	4000cf80 	call	4000cf8 <___svfprintf_internal_r>
 4000be0:	d8c00017 	ldw	r3,0(sp)
 4000be4:	18000005 	stb	zero,0(r3)
 4000be8:	dfc01a17 	ldw	ra,104(sp)
 4000bec:	dec01c04 	addi	sp,sp,112
 4000bf0:	f800283a 	ret

04000bf4 <sprintf>:
 4000bf4:	deffe304 	addi	sp,sp,-116
 4000bf8:	2007883a 	mov	r3,r4
 4000bfc:	dfc01a15 	stw	ra,104(sp)
 4000c00:	d9801b15 	stw	r6,108(sp)
 4000c04:	d9c01c15 	stw	r7,112(sp)
 4000c08:	01010074 	movhi	r4,1025
 4000c0c:	21009504 	addi	r4,r4,596
 4000c10:	21000017 	ldw	r4,0(r4)
 4000c14:	00a00034 	movhi	r2,32768
 4000c18:	10bfffc4 	addi	r2,r2,-1
 4000c1c:	280d883a 	mov	r6,r5
 4000c20:	02008204 	movi	r8,520
 4000c24:	d8800215 	stw	r2,8(sp)
 4000c28:	d8800515 	stw	r2,20(sp)
 4000c2c:	d9c01b04 	addi	r7,sp,108
 4000c30:	d80b883a 	mov	r5,sp
 4000c34:	00bfffc4 	movi	r2,-1
 4000c38:	d8c00015 	stw	r3,0(sp)
 4000c3c:	d8c00415 	stw	r3,16(sp)
 4000c40:	da00030d 	sth	r8,12(sp)
 4000c44:	d880038d 	sth	r2,14(sp)
 4000c48:	4000cf80 	call	4000cf8 <___svfprintf_internal_r>
 4000c4c:	d8c00017 	ldw	r3,0(sp)
 4000c50:	18000005 	stb	zero,0(r3)
 4000c54:	dfc01a17 	ldw	ra,104(sp)
 4000c58:	dec01d04 	addi	sp,sp,116
 4000c5c:	f800283a 	ret

04000c60 <strlen>:
 4000c60:	208000cc 	andi	r2,r4,3
 4000c64:	10002026 	beq	r2,zero,4000ce8 <strlen+0x88>
 4000c68:	20800007 	ldb	r2,0(r4)
 4000c6c:	10002026 	beq	r2,zero,4000cf0 <strlen+0x90>
 4000c70:	2005883a 	mov	r2,r4
 4000c74:	00000206 	br	4000c80 <strlen+0x20>
 4000c78:	10c00007 	ldb	r3,0(r2)
 4000c7c:	18001826 	beq	r3,zero,4000ce0 <strlen+0x80>
 4000c80:	10800044 	addi	r2,r2,1
 4000c84:	10c000cc 	andi	r3,r2,3
 4000c88:	183ffb1e 	bne	r3,zero,4000c78 <__alt_mem_onchip_memory2_0+0xfbffbab8>
 4000c8c:	10c00017 	ldw	r3,0(r2)
 4000c90:	01ffbff4 	movhi	r7,65279
 4000c94:	39ffbfc4 	addi	r7,r7,-257
 4000c98:	00ca303a 	nor	r5,zero,r3
 4000c9c:	01a02074 	movhi	r6,32897
 4000ca0:	19c7883a 	add	r3,r3,r7
 4000ca4:	31a02004 	addi	r6,r6,-32640
 4000ca8:	1946703a 	and	r3,r3,r5
 4000cac:	1986703a 	and	r3,r3,r6
 4000cb0:	1800091e 	bne	r3,zero,4000cd8 <strlen+0x78>
 4000cb4:	10800104 	addi	r2,r2,4
 4000cb8:	10c00017 	ldw	r3,0(r2)
 4000cbc:	19cb883a 	add	r5,r3,r7
 4000cc0:	00c6303a 	nor	r3,zero,r3
 4000cc4:	28c6703a 	and	r3,r5,r3
 4000cc8:	1986703a 	and	r3,r3,r6
 4000ccc:	183ff926 	beq	r3,zero,4000cb4 <__alt_mem_onchip_memory2_0+0xfbffbaf4>
 4000cd0:	00000106 	br	4000cd8 <strlen+0x78>
 4000cd4:	10800044 	addi	r2,r2,1
 4000cd8:	10c00007 	ldb	r3,0(r2)
 4000cdc:	183ffd1e 	bne	r3,zero,4000cd4 <__alt_mem_onchip_memory2_0+0xfbffbb14>
 4000ce0:	1105c83a 	sub	r2,r2,r4
 4000ce4:	f800283a 	ret
 4000ce8:	2005883a 	mov	r2,r4
 4000cec:	003fe706 	br	4000c8c <__alt_mem_onchip_memory2_0+0xfbffbacc>
 4000cf0:	0005883a 	mov	r2,zero
 4000cf4:	f800283a 	ret

04000cf8 <___svfprintf_internal_r>:
 4000cf8:	deffb704 	addi	sp,sp,-292
 4000cfc:	dfc04815 	stw	ra,288(sp)
 4000d00:	ddc04615 	stw	r23,280(sp)
 4000d04:	d9402d15 	stw	r5,180(sp)
 4000d08:	d9003915 	stw	r4,228(sp)
 4000d0c:	302f883a 	mov	r23,r6
 4000d10:	d9c02e15 	stw	r7,184(sp)
 4000d14:	df004715 	stw	fp,284(sp)
 4000d18:	dd804515 	stw	r22,276(sp)
 4000d1c:	dd404415 	stw	r21,272(sp)
 4000d20:	dd004315 	stw	r20,268(sp)
 4000d24:	dcc04215 	stw	r19,264(sp)
 4000d28:	dc804115 	stw	r18,260(sp)
 4000d2c:	dc404015 	stw	r17,256(sp)
 4000d30:	dc003f15 	stw	r16,252(sp)
 4000d34:	40049100 	call	4004910 <_localeconv_r>
 4000d38:	10800017 	ldw	r2,0(r2)
 4000d3c:	1009883a 	mov	r4,r2
 4000d40:	d8803415 	stw	r2,208(sp)
 4000d44:	4000c600 	call	4000c60 <strlen>
 4000d48:	d8c02d17 	ldw	r3,180(sp)
 4000d4c:	d8803815 	stw	r2,224(sp)
 4000d50:	1880030b 	ldhu	r2,12(r3)
 4000d54:	1080200c 	andi	r2,r2,128
 4000d58:	10000226 	beq	r2,zero,4000d64 <___svfprintf_internal_r+0x6c>
 4000d5c:	18800417 	ldw	r2,16(r3)
 4000d60:	1006b126 	beq	r2,zero,4002828 <___svfprintf_internal_r+0x1b30>
 4000d64:	dcc03917 	ldw	r19,228(sp)
 4000d68:	d8c00404 	addi	r3,sp,16
 4000d6c:	05410074 	movhi	r21,1025
 4000d70:	d9001e04 	addi	r4,sp,120
 4000d74:	ad788084 	addi	r21,r21,-7678
 4000d78:	d8c01e15 	stw	r3,120(sp)
 4000d7c:	d8002015 	stw	zero,128(sp)
 4000d80:	d8001f15 	stw	zero,124(sp)
 4000d84:	d8003315 	stw	zero,204(sp)
 4000d88:	d8003615 	stw	zero,216(sp)
 4000d8c:	d8003715 	stw	zero,220(sp)
 4000d90:	1811883a 	mov	r8,r3
 4000d94:	d8003a15 	stw	zero,232(sp)
 4000d98:	d8003b15 	stw	zero,236(sp)
 4000d9c:	d8002f15 	stw	zero,188(sp)
 4000da0:	d9002815 	stw	r4,160(sp)
 4000da4:	b8800007 	ldb	r2,0(r23)
 4000da8:	10027726 	beq	r2,zero,4001788 <___svfprintf_internal_r+0xa90>
 4000dac:	00c00944 	movi	r3,37
 4000db0:	b823883a 	mov	r17,r23
 4000db4:	10c0021e 	bne	r2,r3,4000dc0 <___svfprintf_internal_r+0xc8>
 4000db8:	00001406 	br	4000e0c <___svfprintf_internal_r+0x114>
 4000dbc:	10c00326 	beq	r2,r3,4000dcc <___svfprintf_internal_r+0xd4>
 4000dc0:	8c400044 	addi	r17,r17,1
 4000dc4:	88800007 	ldb	r2,0(r17)
 4000dc8:	103ffc1e 	bne	r2,zero,4000dbc <__alt_mem_onchip_memory2_0+0xfbffbbfc>
 4000dcc:	8de1c83a 	sub	r16,r17,r23
 4000dd0:	80000e26 	beq	r16,zero,4000e0c <___svfprintf_internal_r+0x114>
 4000dd4:	d8c02017 	ldw	r3,128(sp)
 4000dd8:	d8801f17 	ldw	r2,124(sp)
 4000ddc:	45c00015 	stw	r23,0(r8)
 4000de0:	1c07883a 	add	r3,r3,r16
 4000de4:	10800044 	addi	r2,r2,1
 4000de8:	d8c02015 	stw	r3,128(sp)
 4000dec:	44000115 	stw	r16,4(r8)
 4000df0:	d8801f15 	stw	r2,124(sp)
 4000df4:	00c001c4 	movi	r3,7
 4000df8:	18809916 	blt	r3,r2,4001060 <___svfprintf_internal_r+0x368>
 4000dfc:	42000204 	addi	r8,r8,8
 4000e00:	d9402f17 	ldw	r5,188(sp)
 4000e04:	2c0b883a 	add	r5,r5,r16
 4000e08:	d9402f15 	stw	r5,188(sp)
 4000e0c:	88800007 	ldb	r2,0(r17)
 4000e10:	10009a26 	beq	r2,zero,400107c <___svfprintf_internal_r+0x384>
 4000e14:	8dc00044 	addi	r23,r17,1
 4000e18:	8c400047 	ldb	r17,1(r17)
 4000e1c:	0021883a 	mov	r16,zero
 4000e20:	00bfffc4 	movi	r2,-1
 4000e24:	0025883a 	mov	r18,zero
 4000e28:	dc002905 	stb	r16,164(sp)
 4000e2c:	d8002785 	stb	zero,158(sp)
 4000e30:	d8002b05 	stb	zero,172(sp)
 4000e34:	d8802a15 	stw	r2,168(sp)
 4000e38:	d8003115 	stw	zero,196(sp)
 4000e3c:	05001604 	movi	r20,88
 4000e40:	05800244 	movi	r22,9
 4000e44:	4039883a 	mov	fp,r8
 4000e48:	9021883a 	mov	r16,r18
 4000e4c:	bdc00044 	addi	r23,r23,1
 4000e50:	88bff804 	addi	r2,r17,-32
 4000e54:	a0831e36 	bltu	r20,r2,4001ad0 <___svfprintf_internal_r+0xdd8>
 4000e58:	100490ba 	slli	r2,r2,2
 4000e5c:	00c10034 	movhi	r3,1024
 4000e60:	18c39c04 	addi	r3,r3,3696
 4000e64:	10c5883a 	add	r2,r2,r3
 4000e68:	10800017 	ldw	r2,0(r2)
 4000e6c:	1000683a 	jmp	r2
 4000e70:	04001a18 	cmpnei	r16,zero,104
 4000e74:	04001ad0 	cmplti	r16,zero,107
 4000e78:	04001ad0 	cmplti	r16,zero,107
 4000e7c:	04001a0c 	andi	r16,zero,104
 4000e80:	04001ad0 	cmplti	r16,zero,107
 4000e84:	04001ad0 	cmplti	r16,zero,107
 4000e88:	04001ad0 	cmplti	r16,zero,107
 4000e8c:	04001ad0 	cmplti	r16,zero,107
 4000e90:	04001ad0 	cmplti	r16,zero,107
 4000e94:	04001ad0 	cmplti	r16,zero,107
 4000e98:	040010d8 	cmpnei	r16,zero,67
 4000e9c:	0400191c 	xori	r16,zero,100
 4000ea0:	04001ad0 	cmplti	r16,zero,107
 4000ea4:	04000fe4 	muli	r16,zero,63
 4000ea8:	040010fc 	xorhi	r16,zero,67
 4000eac:	04001ad0 	cmplti	r16,zero,107
 4000eb0:	04001188 	cmpgei	r16,zero,70
 4000eb4:	0400114c 	andi	r16,zero,69
 4000eb8:	0400114c 	andi	r16,zero,69
 4000ebc:	0400114c 	andi	r16,zero,69
 4000ec0:	0400114c 	andi	r16,zero,69
 4000ec4:	0400114c 	andi	r16,zero,69
 4000ec8:	0400114c 	andi	r16,zero,69
 4000ecc:	0400114c 	andi	r16,zero,69
 4000ed0:	0400114c 	andi	r16,zero,69
 4000ed4:	0400114c 	andi	r16,zero,69
 4000ed8:	04001ad0 	cmplti	r16,zero,107
 4000edc:	04001ad0 	cmplti	r16,zero,107
 4000ee0:	04001ad0 	cmplti	r16,zero,107
 4000ee4:	04001ad0 	cmplti	r16,zero,107
 4000ee8:	04001ad0 	cmplti	r16,zero,107
 4000eec:	04001ad0 	cmplti	r16,zero,107
 4000ef0:	04001ad0 	cmplti	r16,zero,107
 4000ef4:	04001ad0 	cmplti	r16,zero,107
 4000ef8:	04001ad0 	cmplti	r16,zero,107
 4000efc:	04001ad0 	cmplti	r16,zero,107
 4000f00:	0400124c 	andi	r16,zero,73
 4000f04:	04001194 	movui	r16,70
 4000f08:	04001ad0 	cmplti	r16,zero,107
 4000f0c:	04001194 	movui	r16,70
 4000f10:	04001ad0 	cmplti	r16,zero,107
 4000f14:	04001ad0 	cmplti	r16,zero,107
 4000f18:	04001ad0 	cmplti	r16,zero,107
 4000f1c:	04001ad0 	cmplti	r16,zero,107
 4000f20:	04001240 	call	400124 <__reset-0x3bffedc>
 4000f24:	04001ad0 	cmplti	r16,zero,107
 4000f28:	04001ad0 	cmplti	r16,zero,107
 4000f2c:	04001314 	movui	r16,76
 4000f30:	04001ad0 	cmplti	r16,zero,107
 4000f34:	04001ad0 	cmplti	r16,zero,107
 4000f38:	04001ad0 	cmplti	r16,zero,107
 4000f3c:	04001ad0 	cmplti	r16,zero,107
 4000f40:	04001ad0 	cmplti	r16,zero,107
 4000f44:	04001790 	cmplti	r16,zero,94
 4000f48:	04001ad0 	cmplti	r16,zero,107
 4000f4c:	04001ad0 	cmplti	r16,zero,107
 4000f50:	040017fc 	xorhi	r16,zero,95
 4000f54:	04001ad0 	cmplti	r16,zero,107
 4000f58:	04001ad0 	cmplti	r16,zero,107
 4000f5c:	04001ad0 	cmplti	r16,zero,107
 4000f60:	04001ad0 	cmplti	r16,zero,107
 4000f64:	04001ad0 	cmplti	r16,zero,107
 4000f68:	04001ad0 	cmplti	r16,zero,107
 4000f6c:	04001ad0 	cmplti	r16,zero,107
 4000f70:	04001ad0 	cmplti	r16,zero,107
 4000f74:	04001ad0 	cmplti	r16,zero,107
 4000f78:	04001ad0 	cmplti	r16,zero,107
 4000f7c:	040018b8 	rdprs	r16,zero,98
 4000f80:	04001a38 	rdprs	r16,zero,104
 4000f84:	04001194 	movui	r16,70
 4000f88:	04001194 	movui	r16,70
 4000f8c:	04001194 	movui	r16,70
 4000f90:	04001aac 	andhi	r16,zero,106
 4000f94:	04001a38 	rdprs	r16,zero,104
 4000f98:	04001ad0 	cmplti	r16,zero,107
 4000f9c:	04001ad0 	cmplti	r16,zero,107
 4000fa0:	04001a58 	cmpnei	r16,zero,105
 4000fa4:	04001ad0 	cmplti	r16,zero,107
 4000fa8:	04001a6c 	andhi	r16,zero,105
 4000fac:	040018fc 	xorhi	r16,zero,99
 4000fb0:	04000ff0 	cmpltui	r16,zero,63
 4000fb4:	04001934 	movhi	r16,100
 4000fb8:	04001ad0 	cmplti	r16,zero,107
 4000fbc:	04001940 	call	400194 <__reset-0x3bffe6c>
 4000fc0:	04001ad0 	cmplti	r16,zero,107
 4000fc4:	040019a4 	muli	r16,zero,102
 4000fc8:	04001ad0 	cmplti	r16,zero,107
 4000fcc:	04001ad0 	cmplti	r16,zero,107
 4000fd0:	040019c4 	movi	r16,103
 4000fd4:	d8c03117 	ldw	r3,196(sp)
 4000fd8:	d8802e15 	stw	r2,184(sp)
 4000fdc:	00c7c83a 	sub	r3,zero,r3
 4000fe0:	d8c03115 	stw	r3,196(sp)
 4000fe4:	84000114 	ori	r16,r16,4
 4000fe8:	bc400007 	ldb	r17,0(r23)
 4000fec:	003f9706 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 4000ff0:	00800c04 	movi	r2,48
 4000ff4:	d8802705 	stb	r2,156(sp)
 4000ff8:	00801e04 	movi	r2,120
 4000ffc:	d8802745 	stb	r2,157(sp)
 4001000:	d9002a17 	ldw	r4,168(sp)
 4001004:	d8802e17 	ldw	r2,184(sp)
 4001008:	d8002785 	stb	zero,158(sp)
 400100c:	e011883a 	mov	r8,fp
 4001010:	10c00104 	addi	r3,r2,4
 4001014:	15000017 	ldw	r20,0(r2)
 4001018:	002d883a 	mov	r22,zero
 400101c:	80800094 	ori	r2,r16,2
 4001020:	2002b616 	blt	r4,zero,4001afc <___svfprintf_internal_r+0xe04>
 4001024:	00bfdfc4 	movi	r2,-129
 4001028:	80a4703a 	and	r18,r16,r2
 400102c:	d8c02e15 	stw	r3,184(sp)
 4001030:	94800094 	ori	r18,r18,2
 4001034:	a002a01e 	bne	r20,zero,4001ab8 <___svfprintf_internal_r+0xdc0>
 4001038:	01410074 	movhi	r5,1025
 400103c:	29787904 	addi	r5,r5,-7708
 4001040:	d9403a15 	stw	r5,232(sp)
 4001044:	04401e04 	movi	r17,120
 4001048:	d8c02a17 	ldw	r3,168(sp)
 400104c:	0039883a 	mov	fp,zero
 4001050:	1801e626 	beq	r3,zero,40017ec <___svfprintf_internal_r+0xaf4>
 4001054:	0029883a 	mov	r20,zero
 4001058:	002d883a 	mov	r22,zero
 400105c:	00020506 	br	4001874 <___svfprintf_internal_r+0xb7c>
 4001060:	d9402d17 	ldw	r5,180(sp)
 4001064:	d9801e04 	addi	r6,sp,120
 4001068:	9809883a 	mov	r4,r19
 400106c:	40065d40 	call	40065d4 <__ssprint_r>
 4001070:	1000081e 	bne	r2,zero,4001094 <___svfprintf_internal_r+0x39c>
 4001074:	da000404 	addi	r8,sp,16
 4001078:	003f6106 	br	4000e00 <__alt_mem_onchip_memory2_0+0xfbffbc40>
 400107c:	d8802017 	ldw	r2,128(sp)
 4001080:	10000426 	beq	r2,zero,4001094 <___svfprintf_internal_r+0x39c>
 4001084:	d9402d17 	ldw	r5,180(sp)
 4001088:	d9003917 	ldw	r4,228(sp)
 400108c:	d9801e04 	addi	r6,sp,120
 4001090:	40065d40 	call	40065d4 <__ssprint_r>
 4001094:	d8802d17 	ldw	r2,180(sp)
 4001098:	10c0030b 	ldhu	r3,12(r2)
 400109c:	d8802f17 	ldw	r2,188(sp)
 40010a0:	18c0100c 	andi	r3,r3,64
 40010a4:	1806251e 	bne	r3,zero,400293c <___svfprintf_internal_r+0x1c44>
 40010a8:	dfc04817 	ldw	ra,288(sp)
 40010ac:	df004717 	ldw	fp,284(sp)
 40010b0:	ddc04617 	ldw	r23,280(sp)
 40010b4:	dd804517 	ldw	r22,276(sp)
 40010b8:	dd404417 	ldw	r21,272(sp)
 40010bc:	dd004317 	ldw	r20,268(sp)
 40010c0:	dcc04217 	ldw	r19,264(sp)
 40010c4:	dc804117 	ldw	r18,260(sp)
 40010c8:	dc404017 	ldw	r17,256(sp)
 40010cc:	dc003f17 	ldw	r16,252(sp)
 40010d0:	dec04904 	addi	sp,sp,292
 40010d4:	f800283a 	ret
 40010d8:	d9002e17 	ldw	r4,184(sp)
 40010dc:	d9402e17 	ldw	r5,184(sp)
 40010e0:	21000017 	ldw	r4,0(r4)
 40010e4:	28800104 	addi	r2,r5,4
 40010e8:	d9003115 	stw	r4,196(sp)
 40010ec:	203fb916 	blt	r4,zero,4000fd4 <__alt_mem_onchip_memory2_0+0xfbffbe14>
 40010f0:	d8802e15 	stw	r2,184(sp)
 40010f4:	bc400007 	ldb	r17,0(r23)
 40010f8:	003f5406 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 40010fc:	bc400007 	ldb	r17,0(r23)
 4001100:	01000a84 	movi	r4,42
 4001104:	b8c00044 	addi	r3,r23,1
 4001108:	89076926 	beq	r17,r4,4002eb0 <___svfprintf_internal_r+0x21b8>
 400110c:	8cbff404 	addi	r18,r17,-48
 4001110:	b486b936 	bltu	r22,r18,4002bf8 <___svfprintf_internal_r+0x1f00>
 4001114:	0009883a 	mov	r4,zero
 4001118:	1823883a 	mov	r17,r3
 400111c:	01400284 	movi	r5,10
 4001120:	4000af80 	call	4000af8 <__mulsi3>
 4001124:	88c00007 	ldb	r3,0(r17)
 4001128:	1489883a 	add	r4,r2,r18
 400112c:	8dc00044 	addi	r23,r17,1
 4001130:	1cbff404 	addi	r18,r3,-48
 4001134:	b823883a 	mov	r17,r23
 4001138:	b4bff82e 	bgeu	r22,r18,400111c <__alt_mem_onchip_memory2_0+0xfbffbf5c>
 400113c:	1823883a 	mov	r17,r3
 4001140:	20060416 	blt	r4,zero,4002954 <___svfprintf_internal_r+0x1c5c>
 4001144:	d9002a15 	stw	r4,168(sp)
 4001148:	003f4106 	br	4000e50 <__alt_mem_onchip_memory2_0+0xfbffbc90>
 400114c:	8cbff404 	addi	r18,r17,-48
 4001150:	d8003115 	stw	zero,196(sp)
 4001154:	0009883a 	mov	r4,zero
 4001158:	b823883a 	mov	r17,r23
 400115c:	01400284 	movi	r5,10
 4001160:	4000af80 	call	4000af8 <__mulsi3>
 4001164:	88c00007 	ldb	r3,0(r17)
 4001168:	9089883a 	add	r4,r18,r2
 400116c:	bdc00044 	addi	r23,r23,1
 4001170:	1cbff404 	addi	r18,r3,-48
 4001174:	b823883a 	mov	r17,r23
 4001178:	b4bff82e 	bgeu	r22,r18,400115c <__alt_mem_onchip_memory2_0+0xfbffbf9c>
 400117c:	1823883a 	mov	r17,r3
 4001180:	d9003115 	stw	r4,196(sp)
 4001184:	003f3206 	br	4000e50 <__alt_mem_onchip_memory2_0+0xfbffbc90>
 4001188:	84002014 	ori	r16,r16,128
 400118c:	bc400007 	ldb	r17,0(r23)
 4001190:	003f2e06 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 4001194:	8025883a 	mov	r18,r16
 4001198:	dc002903 	ldbu	r16,164(sp)
 400119c:	e011883a 	mov	r8,fp
 40011a0:	84003fcc 	andi	r16,r16,255
 40011a4:	8007721e 	bne	r16,zero,4002f70 <___svfprintf_internal_r+0x2278>
 40011a8:	9080020c 	andi	r2,r18,8
 40011ac:	1004a526 	beq	r2,zero,4002444 <___svfprintf_internal_r+0x174c>
 40011b0:	d9002e17 	ldw	r4,184(sp)
 40011b4:	d9402e17 	ldw	r5,184(sp)
 40011b8:	d8802e17 	ldw	r2,184(sp)
 40011bc:	21000017 	ldw	r4,0(r4)
 40011c0:	29400117 	ldw	r5,4(r5)
 40011c4:	10800204 	addi	r2,r2,8
 40011c8:	d9003615 	stw	r4,216(sp)
 40011cc:	d9403715 	stw	r5,220(sp)
 40011d0:	d8802e15 	stw	r2,184(sp)
 40011d4:	d9003617 	ldw	r4,216(sp)
 40011d8:	d9403717 	ldw	r5,220(sp)
 40011dc:	da003e15 	stw	r8,248(sp)
 40011e0:	04000044 	movi	r16,1
 40011e4:	40064300 	call	4006430 <__fpclassifyd>
 40011e8:	da003e17 	ldw	r8,248(sp)
 40011ec:	1404731e 	bne	r2,r16,40023bc <___svfprintf_internal_r+0x16c4>
 40011f0:	d9003617 	ldw	r4,216(sp)
 40011f4:	d9403717 	ldw	r5,220(sp)
 40011f8:	000d883a 	mov	r6,zero
 40011fc:	000f883a 	mov	r7,zero
 4001200:	400a8e80 	call	400a8e8 <__ledf2>
 4001204:	da003e17 	ldw	r8,248(sp)
 4001208:	10061b16 	blt	r2,zero,4002a78 <___svfprintf_internal_r+0x1d80>
 400120c:	df002783 	ldbu	fp,158(sp)
 4001210:	008011c4 	movi	r2,71
 4001214:	1445810e 	bge	r2,r17,400281c <___svfprintf_internal_r+0x1b24>
 4001218:	04010074 	movhi	r16,1025
 400121c:	84387104 	addi	r16,r16,-7740
 4001220:	00c000c4 	movi	r3,3
 4001224:	00bfdfc4 	movi	r2,-129
 4001228:	d8c02915 	stw	r3,164(sp)
 400122c:	90a4703a 	and	r18,r18,r2
 4001230:	d8c02b15 	stw	r3,172(sp)
 4001234:	d8002a15 	stw	zero,168(sp)
 4001238:	d8003215 	stw	zero,200(sp)
 400123c:	00006c06 	br	40013f0 <___svfprintf_internal_r+0x6f8>
 4001240:	84000214 	ori	r16,r16,8
 4001244:	bc400007 	ldb	r17,0(r23)
 4001248:	003f0006 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 400124c:	8025883a 	mov	r18,r16
 4001250:	dc002903 	ldbu	r16,164(sp)
 4001254:	e011883a 	mov	r8,fp
 4001258:	84003fcc 	andi	r16,r16,255
 400125c:	80073f1e 	bne	r16,zero,4002f5c <___svfprintf_internal_r+0x2264>
 4001260:	94800414 	ori	r18,r18,16
 4001264:	9080080c 	andi	r2,r18,32
 4001268:	1003bb26 	beq	r2,zero,4002158 <___svfprintf_internal_r+0x1460>
 400126c:	d9002e17 	ldw	r4,184(sp)
 4001270:	20800117 	ldw	r2,4(r4)
 4001274:	25000017 	ldw	r20,0(r4)
 4001278:	21000204 	addi	r4,r4,8
 400127c:	d9002e15 	stw	r4,184(sp)
 4001280:	102d883a 	mov	r22,r2
 4001284:	1003bd16 	blt	r2,zero,400217c <___svfprintf_internal_r+0x1484>
 4001288:	d9002a17 	ldw	r4,168(sp)
 400128c:	df002783 	ldbu	fp,158(sp)
 4001290:	2003d016 	blt	r4,zero,40021d4 <___svfprintf_internal_r+0x14dc>
 4001294:	00ffdfc4 	movi	r3,-129
 4001298:	a584b03a 	or	r2,r20,r22
 400129c:	90e4703a 	and	r18,r18,r3
 40012a0:	10015026 	beq	r2,zero,40017e4 <___svfprintf_internal_r+0xaec>
 40012a4:	b0037026 	beq	r22,zero,4002068 <___svfprintf_internal_r+0x1370>
 40012a8:	dc402915 	stw	r17,164(sp)
 40012ac:	dc001e04 	addi	r16,sp,120
 40012b0:	b023883a 	mov	r17,r22
 40012b4:	402d883a 	mov	r22,r8
 40012b8:	a009883a 	mov	r4,r20
 40012bc:	880b883a 	mov	r5,r17
 40012c0:	01800284 	movi	r6,10
 40012c4:	000f883a 	mov	r7,zero
 40012c8:	4008f440 	call	4008f44 <__umoddi3>
 40012cc:	10800c04 	addi	r2,r2,48
 40012d0:	843fffc4 	addi	r16,r16,-1
 40012d4:	a009883a 	mov	r4,r20
 40012d8:	880b883a 	mov	r5,r17
 40012dc:	80800005 	stb	r2,0(r16)
 40012e0:	01800284 	movi	r6,10
 40012e4:	000f883a 	mov	r7,zero
 40012e8:	40089480 	call	4008948 <__udivdi3>
 40012ec:	1029883a 	mov	r20,r2
 40012f0:	10c4b03a 	or	r2,r2,r3
 40012f4:	1823883a 	mov	r17,r3
 40012f8:	103fef1e 	bne	r2,zero,40012b8 <__alt_mem_onchip_memory2_0+0xfbffc0f8>
 40012fc:	d8c02817 	ldw	r3,160(sp)
 4001300:	dc402917 	ldw	r17,164(sp)
 4001304:	b011883a 	mov	r8,r22
 4001308:	1c07c83a 	sub	r3,r3,r16
 400130c:	d8c02b15 	stw	r3,172(sp)
 4001310:	00003106 	br	40013d8 <___svfprintf_internal_r+0x6e0>
 4001314:	8025883a 	mov	r18,r16
 4001318:	dc002903 	ldbu	r16,164(sp)
 400131c:	e011883a 	mov	r8,fp
 4001320:	84003fcc 	andi	r16,r16,255
 4001324:	80070a1e 	bne	r16,zero,4002f50 <___svfprintf_internal_r+0x2258>
 4001328:	94800414 	ori	r18,r18,16
 400132c:	9080080c 	andi	r2,r18,32
 4001330:	1002f626 	beq	r2,zero,4001f0c <___svfprintf_internal_r+0x1214>
 4001334:	d9002e17 	ldw	r4,184(sp)
 4001338:	d9402a17 	ldw	r5,168(sp)
 400133c:	d8002785 	stb	zero,158(sp)
 4001340:	20800204 	addi	r2,r4,8
 4001344:	25000017 	ldw	r20,0(r4)
 4001348:	25800117 	ldw	r22,4(r4)
 400134c:	28043716 	blt	r5,zero,400242c <___svfprintf_internal_r+0x1734>
 4001350:	013fdfc4 	movi	r4,-129
 4001354:	a586b03a 	or	r3,r20,r22
 4001358:	d8802e15 	stw	r2,184(sp)
 400135c:	9124703a 	and	r18,r18,r4
 4001360:	1802f71e 	bne	r3,zero,4001f40 <___svfprintf_internal_r+0x1248>
 4001364:	d9402a17 	ldw	r5,168(sp)
 4001368:	0039883a 	mov	fp,zero
 400136c:	2806df26 	beq	r5,zero,4002eec <___svfprintf_internal_r+0x21f4>
 4001370:	0029883a 	mov	r20,zero
 4001374:	002d883a 	mov	r22,zero
 4001378:	dc001e04 	addi	r16,sp,120
 400137c:	a006d0fa 	srli	r3,r20,3
 4001380:	b008977a 	slli	r4,r22,29
 4001384:	b02cd0fa 	srli	r22,r22,3
 4001388:	a50001cc 	andi	r20,r20,7
 400138c:	a0800c04 	addi	r2,r20,48
 4001390:	843fffc4 	addi	r16,r16,-1
 4001394:	20e8b03a 	or	r20,r4,r3
 4001398:	80800005 	stb	r2,0(r16)
 400139c:	a586b03a 	or	r3,r20,r22
 40013a0:	183ff61e 	bne	r3,zero,400137c <__alt_mem_onchip_memory2_0+0xfbffc1bc>
 40013a4:	90c0004c 	andi	r3,r18,1
 40013a8:	18013f26 	beq	r3,zero,40018a8 <___svfprintf_internal_r+0xbb0>
 40013ac:	10803fcc 	andi	r2,r2,255
 40013b0:	1080201c 	xori	r2,r2,128
 40013b4:	10bfe004 	addi	r2,r2,-128
 40013b8:	00c00c04 	movi	r3,48
 40013bc:	10c13a26 	beq	r2,r3,40018a8 <___svfprintf_internal_r+0xbb0>
 40013c0:	80ffffc5 	stb	r3,-1(r16)
 40013c4:	d8c02817 	ldw	r3,160(sp)
 40013c8:	80bfffc4 	addi	r2,r16,-1
 40013cc:	1021883a 	mov	r16,r2
 40013d0:	1887c83a 	sub	r3,r3,r2
 40013d4:	d8c02b15 	stw	r3,172(sp)
 40013d8:	d8802b17 	ldw	r2,172(sp)
 40013dc:	d9002a17 	ldw	r4,168(sp)
 40013e0:	1100010e 	bge	r2,r4,40013e8 <___svfprintf_internal_r+0x6f0>
 40013e4:	2005883a 	mov	r2,r4
 40013e8:	d8802915 	stw	r2,164(sp)
 40013ec:	d8003215 	stw	zero,200(sp)
 40013f0:	e7003fcc 	andi	fp,fp,255
 40013f4:	e700201c 	xori	fp,fp,128
 40013f8:	e73fe004 	addi	fp,fp,-128
 40013fc:	e0000326 	beq	fp,zero,400140c <___svfprintf_internal_r+0x714>
 4001400:	d8c02917 	ldw	r3,164(sp)
 4001404:	18c00044 	addi	r3,r3,1
 4001408:	d8c02915 	stw	r3,164(sp)
 400140c:	90c0008c 	andi	r3,r18,2
 4001410:	d8c02c15 	stw	r3,176(sp)
 4001414:	18000326 	beq	r3,zero,4001424 <___svfprintf_internal_r+0x72c>
 4001418:	d8c02917 	ldw	r3,164(sp)
 400141c:	18c00084 	addi	r3,r3,2
 4001420:	d8c02915 	stw	r3,164(sp)
 4001424:	90c0210c 	andi	r3,r18,132
 4001428:	d8c03015 	stw	r3,192(sp)
 400142c:	1801c31e 	bne	r3,zero,4001b3c <___svfprintf_internal_r+0xe44>
 4001430:	d9003117 	ldw	r4,196(sp)
 4001434:	d8c02917 	ldw	r3,164(sp)
 4001438:	20e9c83a 	sub	r20,r4,r3
 400143c:	0501bf0e 	bge	zero,r20,4001b3c <___svfprintf_internal_r+0xe44>
 4001440:	02400404 	movi	r9,16
 4001444:	d8c02017 	ldw	r3,128(sp)
 4001448:	d8801f17 	ldw	r2,124(sp)
 400144c:	4d053d0e 	bge	r9,r20,4002944 <___svfprintf_internal_r+0x1c4c>
 4001450:	01410074 	movhi	r5,1025
 4001454:	29788484 	addi	r5,r5,-7662
 4001458:	dc403c15 	stw	r17,240(sp)
 400145c:	d9403515 	stw	r5,212(sp)
 4001460:	a023883a 	mov	r17,r20
 4001464:	482d883a 	mov	r22,r9
 4001468:	9029883a 	mov	r20,r18
 400146c:	070001c4 	movi	fp,7
 4001470:	8025883a 	mov	r18,r16
 4001474:	dc002d17 	ldw	r16,180(sp)
 4001478:	00000306 	br	4001488 <___svfprintf_internal_r+0x790>
 400147c:	8c7ffc04 	addi	r17,r17,-16
 4001480:	42000204 	addi	r8,r8,8
 4001484:	b440130e 	bge	r22,r17,40014d4 <___svfprintf_internal_r+0x7dc>
 4001488:	01010074 	movhi	r4,1025
 400148c:	18c00404 	addi	r3,r3,16
 4001490:	10800044 	addi	r2,r2,1
 4001494:	21388484 	addi	r4,r4,-7662
 4001498:	41000015 	stw	r4,0(r8)
 400149c:	45800115 	stw	r22,4(r8)
 40014a0:	d8c02015 	stw	r3,128(sp)
 40014a4:	d8801f15 	stw	r2,124(sp)
 40014a8:	e0bff40e 	bge	fp,r2,400147c <__alt_mem_onchip_memory2_0+0xfbffc2bc>
 40014ac:	d9801e04 	addi	r6,sp,120
 40014b0:	800b883a 	mov	r5,r16
 40014b4:	9809883a 	mov	r4,r19
 40014b8:	40065d40 	call	40065d4 <__ssprint_r>
 40014bc:	103ef51e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 40014c0:	8c7ffc04 	addi	r17,r17,-16
 40014c4:	d8c02017 	ldw	r3,128(sp)
 40014c8:	d8801f17 	ldw	r2,124(sp)
 40014cc:	da000404 	addi	r8,sp,16
 40014d0:	b47fed16 	blt	r22,r17,4001488 <__alt_mem_onchip_memory2_0+0xfbffc2c8>
 40014d4:	9021883a 	mov	r16,r18
 40014d8:	a025883a 	mov	r18,r20
 40014dc:	8829883a 	mov	r20,r17
 40014e0:	dc403c17 	ldw	r17,240(sp)
 40014e4:	d9403517 	ldw	r5,212(sp)
 40014e8:	a0c7883a 	add	r3,r20,r3
 40014ec:	10800044 	addi	r2,r2,1
 40014f0:	41400015 	stw	r5,0(r8)
 40014f4:	45000115 	stw	r20,4(r8)
 40014f8:	d8c02015 	stw	r3,128(sp)
 40014fc:	d8801f15 	stw	r2,124(sp)
 4001500:	010001c4 	movi	r4,7
 4001504:	2082c116 	blt	r4,r2,400200c <___svfprintf_internal_r+0x1314>
 4001508:	df002787 	ldb	fp,158(sp)
 400150c:	42000204 	addi	r8,r8,8
 4001510:	e0000c26 	beq	fp,zero,4001544 <___svfprintf_internal_r+0x84c>
 4001514:	d8801f17 	ldw	r2,124(sp)
 4001518:	d9002784 	addi	r4,sp,158
 400151c:	18c00044 	addi	r3,r3,1
 4001520:	10800044 	addi	r2,r2,1
 4001524:	41000015 	stw	r4,0(r8)
 4001528:	01000044 	movi	r4,1
 400152c:	41000115 	stw	r4,4(r8)
 4001530:	d8c02015 	stw	r3,128(sp)
 4001534:	d8801f15 	stw	r2,124(sp)
 4001538:	010001c4 	movi	r4,7
 400153c:	20825a16 	blt	r4,r2,4001ea8 <___svfprintf_internal_r+0x11b0>
 4001540:	42000204 	addi	r8,r8,8
 4001544:	d8802c17 	ldw	r2,176(sp)
 4001548:	10000c26 	beq	r2,zero,400157c <___svfprintf_internal_r+0x884>
 400154c:	d8801f17 	ldw	r2,124(sp)
 4001550:	d9002704 	addi	r4,sp,156
 4001554:	18c00084 	addi	r3,r3,2
 4001558:	10800044 	addi	r2,r2,1
 400155c:	41000015 	stw	r4,0(r8)
 4001560:	01000084 	movi	r4,2
 4001564:	41000115 	stw	r4,4(r8)
 4001568:	d8c02015 	stw	r3,128(sp)
 400156c:	d8801f15 	stw	r2,124(sp)
 4001570:	010001c4 	movi	r4,7
 4001574:	20825416 	blt	r4,r2,4001ec8 <___svfprintf_internal_r+0x11d0>
 4001578:	42000204 	addi	r8,r8,8
 400157c:	d9003017 	ldw	r4,192(sp)
 4001580:	00802004 	movi	r2,128
 4001584:	2081b926 	beq	r4,r2,4001c6c <___svfprintf_internal_r+0xf74>
 4001588:	d9402a17 	ldw	r5,168(sp)
 400158c:	d8802b17 	ldw	r2,172(sp)
 4001590:	28adc83a 	sub	r22,r5,r2
 4001594:	05802f0e 	bge	zero,r22,4001654 <___svfprintf_internal_r+0x95c>
 4001598:	07000404 	movi	fp,16
 400159c:	d8801f17 	ldw	r2,124(sp)
 40015a0:	e583e20e 	bge	fp,r22,400252c <___svfprintf_internal_r+0x1834>
 40015a4:	01410074 	movhi	r5,1025
 40015a8:	29788084 	addi	r5,r5,-7678
 40015ac:	dc402a15 	stw	r17,168(sp)
 40015b0:	d9402c15 	stw	r5,176(sp)
 40015b4:	b023883a 	mov	r17,r22
 40015b8:	050001c4 	movi	r20,7
 40015bc:	902d883a 	mov	r22,r18
 40015c0:	8025883a 	mov	r18,r16
 40015c4:	dc002d17 	ldw	r16,180(sp)
 40015c8:	00000306 	br	40015d8 <___svfprintf_internal_r+0x8e0>
 40015cc:	8c7ffc04 	addi	r17,r17,-16
 40015d0:	42000204 	addi	r8,r8,8
 40015d4:	e440110e 	bge	fp,r17,400161c <___svfprintf_internal_r+0x924>
 40015d8:	18c00404 	addi	r3,r3,16
 40015dc:	10800044 	addi	r2,r2,1
 40015e0:	45400015 	stw	r21,0(r8)
 40015e4:	47000115 	stw	fp,4(r8)
 40015e8:	d8c02015 	stw	r3,128(sp)
 40015ec:	d8801f15 	stw	r2,124(sp)
 40015f0:	a0bff60e 	bge	r20,r2,40015cc <__alt_mem_onchip_memory2_0+0xfbffc40c>
 40015f4:	d9801e04 	addi	r6,sp,120
 40015f8:	800b883a 	mov	r5,r16
 40015fc:	9809883a 	mov	r4,r19
 4001600:	40065d40 	call	40065d4 <__ssprint_r>
 4001604:	103ea31e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001608:	8c7ffc04 	addi	r17,r17,-16
 400160c:	d8c02017 	ldw	r3,128(sp)
 4001610:	d8801f17 	ldw	r2,124(sp)
 4001614:	da000404 	addi	r8,sp,16
 4001618:	e47fef16 	blt	fp,r17,40015d8 <__alt_mem_onchip_memory2_0+0xfbffc418>
 400161c:	9021883a 	mov	r16,r18
 4001620:	b025883a 	mov	r18,r22
 4001624:	882d883a 	mov	r22,r17
 4001628:	dc402a17 	ldw	r17,168(sp)
 400162c:	d9002c17 	ldw	r4,176(sp)
 4001630:	1d87883a 	add	r3,r3,r22
 4001634:	10800044 	addi	r2,r2,1
 4001638:	41000015 	stw	r4,0(r8)
 400163c:	45800115 	stw	r22,4(r8)
 4001640:	d8c02015 	stw	r3,128(sp)
 4001644:	d8801f15 	stw	r2,124(sp)
 4001648:	010001c4 	movi	r4,7
 400164c:	20820e16 	blt	r4,r2,4001e88 <___svfprintf_internal_r+0x1190>
 4001650:	42000204 	addi	r8,r8,8
 4001654:	9080400c 	andi	r2,r18,256
 4001658:	10013a1e 	bne	r2,zero,4001b44 <___svfprintf_internal_r+0xe4c>
 400165c:	d9402b17 	ldw	r5,172(sp)
 4001660:	d8801f17 	ldw	r2,124(sp)
 4001664:	44000015 	stw	r16,0(r8)
 4001668:	1947883a 	add	r3,r3,r5
 400166c:	10800044 	addi	r2,r2,1
 4001670:	41400115 	stw	r5,4(r8)
 4001674:	d8c02015 	stw	r3,128(sp)
 4001678:	d8801f15 	stw	r2,124(sp)
 400167c:	010001c4 	movi	r4,7
 4001680:	2081f316 	blt	r4,r2,4001e50 <___svfprintf_internal_r+0x1158>
 4001684:	42000204 	addi	r8,r8,8
 4001688:	9480010c 	andi	r18,r18,4
 400168c:	90003226 	beq	r18,zero,4001758 <___svfprintf_internal_r+0xa60>
 4001690:	d9403117 	ldw	r5,196(sp)
 4001694:	d8802917 	ldw	r2,164(sp)
 4001698:	28a1c83a 	sub	r16,r5,r2
 400169c:	04002e0e 	bge	zero,r16,4001758 <___svfprintf_internal_r+0xa60>
 40016a0:	04400404 	movi	r17,16
 40016a4:	d8801f17 	ldw	r2,124(sp)
 40016a8:	8c04db0e 	bge	r17,r16,4002a18 <___svfprintf_internal_r+0x1d20>
 40016ac:	01410074 	movhi	r5,1025
 40016b0:	29788484 	addi	r5,r5,-7662
 40016b4:	d9403515 	stw	r5,212(sp)
 40016b8:	048001c4 	movi	r18,7
 40016bc:	dd002d17 	ldw	r20,180(sp)
 40016c0:	00000306 	br	40016d0 <___svfprintf_internal_r+0x9d8>
 40016c4:	843ffc04 	addi	r16,r16,-16
 40016c8:	42000204 	addi	r8,r8,8
 40016cc:	8c00130e 	bge	r17,r16,400171c <___svfprintf_internal_r+0xa24>
 40016d0:	01010074 	movhi	r4,1025
 40016d4:	18c00404 	addi	r3,r3,16
 40016d8:	10800044 	addi	r2,r2,1
 40016dc:	21388484 	addi	r4,r4,-7662
 40016e0:	41000015 	stw	r4,0(r8)
 40016e4:	44400115 	stw	r17,4(r8)
 40016e8:	d8c02015 	stw	r3,128(sp)
 40016ec:	d8801f15 	stw	r2,124(sp)
 40016f0:	90bff40e 	bge	r18,r2,40016c4 <__alt_mem_onchip_memory2_0+0xfbffc504>
 40016f4:	d9801e04 	addi	r6,sp,120
 40016f8:	a00b883a 	mov	r5,r20
 40016fc:	9809883a 	mov	r4,r19
 4001700:	40065d40 	call	40065d4 <__ssprint_r>
 4001704:	103e631e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001708:	843ffc04 	addi	r16,r16,-16
 400170c:	d8c02017 	ldw	r3,128(sp)
 4001710:	d8801f17 	ldw	r2,124(sp)
 4001714:	da000404 	addi	r8,sp,16
 4001718:	8c3fed16 	blt	r17,r16,40016d0 <__alt_mem_onchip_memory2_0+0xfbffc510>
 400171c:	d9403517 	ldw	r5,212(sp)
 4001720:	1c07883a 	add	r3,r3,r16
 4001724:	10800044 	addi	r2,r2,1
 4001728:	41400015 	stw	r5,0(r8)
 400172c:	44000115 	stw	r16,4(r8)
 4001730:	d8c02015 	stw	r3,128(sp)
 4001734:	d8801f15 	stw	r2,124(sp)
 4001738:	010001c4 	movi	r4,7
 400173c:	2080060e 	bge	r4,r2,4001758 <___svfprintf_internal_r+0xa60>
 4001740:	d9402d17 	ldw	r5,180(sp)
 4001744:	d9801e04 	addi	r6,sp,120
 4001748:	9809883a 	mov	r4,r19
 400174c:	40065d40 	call	40065d4 <__ssprint_r>
 4001750:	103e501e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001754:	d8c02017 	ldw	r3,128(sp)
 4001758:	d8803117 	ldw	r2,196(sp)
 400175c:	d9002917 	ldw	r4,164(sp)
 4001760:	1100010e 	bge	r2,r4,4001768 <___svfprintf_internal_r+0xa70>
 4001764:	2005883a 	mov	r2,r4
 4001768:	d9402f17 	ldw	r5,188(sp)
 400176c:	288b883a 	add	r5,r5,r2
 4001770:	d9402f15 	stw	r5,188(sp)
 4001774:	1801be1e 	bne	r3,zero,4001e70 <___svfprintf_internal_r+0x1178>
 4001778:	b8800007 	ldb	r2,0(r23)
 400177c:	d8001f15 	stw	zero,124(sp)
 4001780:	da000404 	addi	r8,sp,16
 4001784:	103d891e 	bne	r2,zero,4000dac <__alt_mem_onchip_memory2_0+0xfbffbbec>
 4001788:	b823883a 	mov	r17,r23
 400178c:	003d9f06 	br	4000e0c <__alt_mem_onchip_memory2_0+0xfbffbc4c>
 4001790:	8025883a 	mov	r18,r16
 4001794:	dc002903 	ldbu	r16,164(sp)
 4001798:	e011883a 	mov	r8,fp
 400179c:	84003fcc 	andi	r16,r16,255
 40017a0:	8005e61e 	bne	r16,zero,4002f3c <___svfprintf_internal_r+0x2244>
 40017a4:	94800414 	ori	r18,r18,16
 40017a8:	9080080c 	andi	r2,r18,32
 40017ac:	10022026 	beq	r2,zero,4002030 <___svfprintf_internal_r+0x1338>
 40017b0:	d9002e17 	ldw	r4,184(sp)
 40017b4:	d9402a17 	ldw	r5,168(sp)
 40017b8:	d8002785 	stb	zero,158(sp)
 40017bc:	20c00204 	addi	r3,r4,8
 40017c0:	25000017 	ldw	r20,0(r4)
 40017c4:	25800117 	ldw	r22,4(r4)
 40017c8:	2803ad16 	blt	r5,zero,4002680 <___svfprintf_internal_r+0x1988>
 40017cc:	013fdfc4 	movi	r4,-129
 40017d0:	a584b03a 	or	r2,r20,r22
 40017d4:	d8c02e15 	stw	r3,184(sp)
 40017d8:	9124703a 	and	r18,r18,r4
 40017dc:	0039883a 	mov	fp,zero
 40017e0:	103eb01e 	bne	r2,zero,40012a4 <__alt_mem_onchip_memory2_0+0xfbffc0e4>
 40017e4:	d8802a17 	ldw	r2,168(sp)
 40017e8:	1002e71e 	bne	r2,zero,4002388 <___svfprintf_internal_r+0x1690>
 40017ec:	d8002a15 	stw	zero,168(sp)
 40017f0:	d8002b15 	stw	zero,172(sp)
 40017f4:	dc001e04 	addi	r16,sp,120
 40017f8:	003ef706 	br	40013d8 <__alt_mem_onchip_memory2_0+0xfbffc218>
 40017fc:	8025883a 	mov	r18,r16
 4001800:	dc002903 	ldbu	r16,164(sp)
 4001804:	e011883a 	mov	r8,fp
 4001808:	84003fcc 	andi	r16,r16,255
 400180c:	8005c81e 	bne	r16,zero,4002f30 <___svfprintf_internal_r+0x2238>
 4001810:	01010074 	movhi	r4,1025
 4001814:	21387404 	addi	r4,r4,-7728
 4001818:	d9003a15 	stw	r4,232(sp)
 400181c:	9080080c 	andi	r2,r18,32
 4001820:	10007226 	beq	r2,zero,40019ec <___svfprintf_internal_r+0xcf4>
 4001824:	d9402e17 	ldw	r5,184(sp)
 4001828:	2d000017 	ldw	r20,0(r5)
 400182c:	2d800117 	ldw	r22,4(r5)
 4001830:	29400204 	addi	r5,r5,8
 4001834:	d9402e15 	stw	r5,184(sp)
 4001838:	9080004c 	andi	r2,r18,1
 400183c:	1001aa26 	beq	r2,zero,4001ee8 <___svfprintf_internal_r+0x11f0>
 4001840:	a584b03a 	or	r2,r20,r22
 4001844:	10032526 	beq	r2,zero,40024dc <___svfprintf_internal_r+0x17e4>
 4001848:	d8c02a17 	ldw	r3,168(sp)
 400184c:	00800c04 	movi	r2,48
 4001850:	d8802705 	stb	r2,156(sp)
 4001854:	dc402745 	stb	r17,157(sp)
 4001858:	d8002785 	stb	zero,158(sp)
 400185c:	90800094 	ori	r2,r18,2
 4001860:	1804a316 	blt	r3,zero,4002af0 <___svfprintf_internal_r+0x1df8>
 4001864:	00bfdfc4 	movi	r2,-129
 4001868:	90a4703a 	and	r18,r18,r2
 400186c:	94800094 	ori	r18,r18,2
 4001870:	0039883a 	mov	fp,zero
 4001874:	d9003a17 	ldw	r4,232(sp)
 4001878:	dc001e04 	addi	r16,sp,120
 400187c:	a08003cc 	andi	r2,r20,15
 4001880:	b006973a 	slli	r3,r22,28
 4001884:	2085883a 	add	r2,r4,r2
 4001888:	a028d13a 	srli	r20,r20,4
 400188c:	10800003 	ldbu	r2,0(r2)
 4001890:	b02cd13a 	srli	r22,r22,4
 4001894:	843fffc4 	addi	r16,r16,-1
 4001898:	1d28b03a 	or	r20,r3,r20
 400189c:	80800005 	stb	r2,0(r16)
 40018a0:	a584b03a 	or	r2,r20,r22
 40018a4:	103ff51e 	bne	r2,zero,400187c <__alt_mem_onchip_memory2_0+0xfbffc6bc>
 40018a8:	d8c02817 	ldw	r3,160(sp)
 40018ac:	1c07c83a 	sub	r3,r3,r16
 40018b0:	d8c02b15 	stw	r3,172(sp)
 40018b4:	003ec806 	br	40013d8 <__alt_mem_onchip_memory2_0+0xfbffc218>
 40018b8:	d8c02e17 	ldw	r3,184(sp)
 40018bc:	d9002e17 	ldw	r4,184(sp)
 40018c0:	8025883a 	mov	r18,r16
 40018c4:	18800017 	ldw	r2,0(r3)
 40018c8:	21000104 	addi	r4,r4,4
 40018cc:	00c00044 	movi	r3,1
 40018d0:	e011883a 	mov	r8,fp
 40018d4:	d8c02915 	stw	r3,164(sp)
 40018d8:	d8002785 	stb	zero,158(sp)
 40018dc:	d8801405 	stb	r2,80(sp)
 40018e0:	d9002e15 	stw	r4,184(sp)
 40018e4:	d8c02b15 	stw	r3,172(sp)
 40018e8:	d8002a15 	stw	zero,168(sp)
 40018ec:	d8003215 	stw	zero,200(sp)
 40018f0:	dc001404 	addi	r16,sp,80
 40018f4:	0039883a 	mov	fp,zero
 40018f8:	003ec406 	br	400140c <__alt_mem_onchip_memory2_0+0xfbffc24c>
 40018fc:	8025883a 	mov	r18,r16
 4001900:	dc002903 	ldbu	r16,164(sp)
 4001904:	e011883a 	mov	r8,fp
 4001908:	84003fcc 	andi	r16,r16,255
 400190c:	803e8726 	beq	r16,zero,400132c <__alt_mem_onchip_memory2_0+0xfbffc16c>
 4001910:	d8c02b03 	ldbu	r3,172(sp)
 4001914:	d8c02785 	stb	r3,158(sp)
 4001918:	003e8406 	br	400132c <__alt_mem_onchip_memory2_0+0xfbffc16c>
 400191c:	00c00044 	movi	r3,1
 4001920:	d8c02905 	stb	r3,164(sp)
 4001924:	00c00ac4 	movi	r3,43
 4001928:	d8c02b05 	stb	r3,172(sp)
 400192c:	bc400007 	ldb	r17,0(r23)
 4001930:	003d4606 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 4001934:	84000814 	ori	r16,r16,32
 4001938:	bc400007 	ldb	r17,0(r23)
 400193c:	003d4306 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 4001940:	d8802e17 	ldw	r2,184(sp)
 4001944:	8025883a 	mov	r18,r16
 4001948:	d8002785 	stb	zero,158(sp)
 400194c:	14000017 	ldw	r16,0(r2)
 4001950:	e011883a 	mov	r8,fp
 4001954:	15000104 	addi	r20,r2,4
 4001958:	80042126 	beq	r16,zero,40029e0 <___svfprintf_internal_r+0x1ce8>
 400195c:	d8c02a17 	ldw	r3,168(sp)
 4001960:	1803ee16 	blt	r3,zero,400291c <___svfprintf_internal_r+0x1c24>
 4001964:	180d883a 	mov	r6,r3
 4001968:	000b883a 	mov	r5,zero
 400196c:	8009883a 	mov	r4,r16
 4001970:	df003e15 	stw	fp,248(sp)
 4001974:	400514c0 	call	400514c <memchr>
 4001978:	da003e17 	ldw	r8,248(sp)
 400197c:	10046a26 	beq	r2,zero,4002b28 <___svfprintf_internal_r+0x1e30>
 4001980:	1405c83a 	sub	r2,r2,r16
 4001984:	d8802b15 	stw	r2,172(sp)
 4001988:	1003ea16 	blt	r2,zero,4002934 <___svfprintf_internal_r+0x1c3c>
 400198c:	df002783 	ldbu	fp,158(sp)
 4001990:	d8802915 	stw	r2,164(sp)
 4001994:	dd002e15 	stw	r20,184(sp)
 4001998:	d8002a15 	stw	zero,168(sp)
 400199c:	d8003215 	stw	zero,200(sp)
 40019a0:	003e9306 	br	40013f0 <__alt_mem_onchip_memory2_0+0xfbffc230>
 40019a4:	8025883a 	mov	r18,r16
 40019a8:	dc002903 	ldbu	r16,164(sp)
 40019ac:	e011883a 	mov	r8,fp
 40019b0:	84003fcc 	andi	r16,r16,255
 40019b4:	803f7c26 	beq	r16,zero,40017a8 <__alt_mem_onchip_memory2_0+0xfbffc5e8>
 40019b8:	d8c02b03 	ldbu	r3,172(sp)
 40019bc:	d8c02785 	stb	r3,158(sp)
 40019c0:	003f7906 	br	40017a8 <__alt_mem_onchip_memory2_0+0xfbffc5e8>
 40019c4:	8025883a 	mov	r18,r16
 40019c8:	dc002903 	ldbu	r16,164(sp)
 40019cc:	e011883a 	mov	r8,fp
 40019d0:	84003fcc 	andi	r16,r16,255
 40019d4:	8005741e 	bne	r16,zero,4002fa8 <___svfprintf_internal_r+0x22b0>
 40019d8:	01010074 	movhi	r4,1025
 40019dc:	21387904 	addi	r4,r4,-7708
 40019e0:	d9003a15 	stw	r4,232(sp)
 40019e4:	9080080c 	andi	r2,r18,32
 40019e8:	103f8e1e 	bne	r2,zero,4001824 <__alt_mem_onchip_memory2_0+0xfbffc664>
 40019ec:	9080040c 	andi	r2,r18,16
 40019f0:	1002a726 	beq	r2,zero,4002490 <___svfprintf_internal_r+0x1798>
 40019f4:	d8802e17 	ldw	r2,184(sp)
 40019f8:	002d883a 	mov	r22,zero
 40019fc:	15000017 	ldw	r20,0(r2)
 4001a00:	10800104 	addi	r2,r2,4
 4001a04:	d8802e15 	stw	r2,184(sp)
 4001a08:	003f8b06 	br	4001838 <__alt_mem_onchip_memory2_0+0xfbffc678>
 4001a0c:	84000054 	ori	r16,r16,1
 4001a10:	bc400007 	ldb	r17,0(r23)
 4001a14:	003d0d06 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 4001a18:	d8802b07 	ldb	r2,172(sp)
 4001a1c:	1002a41e 	bne	r2,zero,40024b0 <___svfprintf_internal_r+0x17b8>
 4001a20:	00c00044 	movi	r3,1
 4001a24:	d8c02905 	stb	r3,164(sp)
 4001a28:	00c00804 	movi	r3,32
 4001a2c:	d8c02b05 	stb	r3,172(sp)
 4001a30:	bc400007 	ldb	r17,0(r23)
 4001a34:	003d0506 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 4001a38:	8025883a 	mov	r18,r16
 4001a3c:	dc002903 	ldbu	r16,164(sp)
 4001a40:	e011883a 	mov	r8,fp
 4001a44:	84003fcc 	andi	r16,r16,255
 4001a48:	803e0626 	beq	r16,zero,4001264 <__alt_mem_onchip_memory2_0+0xfbffc0a4>
 4001a4c:	d8c02b03 	ldbu	r3,172(sp)
 4001a50:	d8c02785 	stb	r3,158(sp)
 4001a54:	003e0306 	br	4001264 <__alt_mem_onchip_memory2_0+0xfbffc0a4>
 4001a58:	bc400007 	ldb	r17,0(r23)
 4001a5c:	00801b04 	movi	r2,108
 4001a60:	88830a26 	beq	r17,r2,400268c <___svfprintf_internal_r+0x1994>
 4001a64:	84000414 	ori	r16,r16,16
 4001a68:	003cf806 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 4001a6c:	8025883a 	mov	r18,r16
 4001a70:	dc002903 	ldbu	r16,164(sp)
 4001a74:	e011883a 	mov	r8,fp
 4001a78:	84003fcc 	andi	r16,r16,255
 4001a7c:	8005471e 	bne	r16,zero,4002f9c <___svfprintf_internal_r+0x22a4>
 4001a80:	9080080c 	andi	r2,r18,32
 4001a84:	10028c26 	beq	r2,zero,40024b8 <___svfprintf_internal_r+0x17c0>
 4001a88:	d9002e17 	ldw	r4,184(sp)
 4001a8c:	d9402f17 	ldw	r5,188(sp)
 4001a90:	20800017 	ldw	r2,0(r4)
 4001a94:	2807d7fa 	srai	r3,r5,31
 4001a98:	21000104 	addi	r4,r4,4
 4001a9c:	d9002e15 	stw	r4,184(sp)
 4001aa0:	11400015 	stw	r5,0(r2)
 4001aa4:	10c00115 	stw	r3,4(r2)
 4001aa8:	003cbe06 	br	4000da4 <__alt_mem_onchip_memory2_0+0xfbffbbe4>
 4001aac:	84001014 	ori	r16,r16,64
 4001ab0:	bc400007 	ldb	r17,0(r23)
 4001ab4:	003ce506 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 4001ab8:	01010074 	movhi	r4,1025
 4001abc:	21387904 	addi	r4,r4,-7708
 4001ac0:	0039883a 	mov	fp,zero
 4001ac4:	d9003a15 	stw	r4,232(sp)
 4001ac8:	04401e04 	movi	r17,120
 4001acc:	003f6906 	br	4001874 <__alt_mem_onchip_memory2_0+0xfbffc6b4>
 4001ad0:	8025883a 	mov	r18,r16
 4001ad4:	dc002903 	ldbu	r16,164(sp)
 4001ad8:	e011883a 	mov	r8,fp
 4001adc:	84003fcc 	andi	r16,r16,255
 4001ae0:	8005261e 	bne	r16,zero,4002f7c <___svfprintf_internal_r+0x2284>
 4001ae4:	883d6526 	beq	r17,zero,400107c <__alt_mem_onchip_memory2_0+0xfbffbebc>
 4001ae8:	00c00044 	movi	r3,1
 4001aec:	d8c02915 	stw	r3,164(sp)
 4001af0:	dc401405 	stb	r17,80(sp)
 4001af4:	d8002785 	stb	zero,158(sp)
 4001af8:	003f7a06 	br	40018e4 <__alt_mem_onchip_memory2_0+0xfbffc724>
 4001afc:	01010074 	movhi	r4,1025
 4001b00:	21387904 	addi	r4,r4,-7708
 4001b04:	d9003a15 	stw	r4,232(sp)
 4001b08:	d8c02e15 	stw	r3,184(sp)
 4001b0c:	1025883a 	mov	r18,r2
 4001b10:	04401e04 	movi	r17,120
 4001b14:	a584b03a 	or	r2,r20,r22
 4001b18:	1000fa1e 	bne	r2,zero,4001f04 <___svfprintf_internal_r+0x120c>
 4001b1c:	0039883a 	mov	fp,zero
 4001b20:	00800084 	movi	r2,2
 4001b24:	10803fcc 	andi	r2,r2,255
 4001b28:	00c00044 	movi	r3,1
 4001b2c:	10c21626 	beq	r2,r3,4002388 <___svfprintf_internal_r+0x1690>
 4001b30:	00c00084 	movi	r3,2
 4001b34:	10fe0e1e 	bne	r2,r3,4001370 <__alt_mem_onchip_memory2_0+0xfbffc1b0>
 4001b38:	003d4606 	br	4001054 <__alt_mem_onchip_memory2_0+0xfbffbe94>
 4001b3c:	d8c02017 	ldw	r3,128(sp)
 4001b40:	003e7306 	br	4001510 <__alt_mem_onchip_memory2_0+0xfbffc350>
 4001b44:	00801944 	movi	r2,101
 4001b48:	14407c0e 	bge	r2,r17,4001d3c <___svfprintf_internal_r+0x1044>
 4001b4c:	d9003617 	ldw	r4,216(sp)
 4001b50:	d9403717 	ldw	r5,220(sp)
 4001b54:	000d883a 	mov	r6,zero
 4001b58:	000f883a 	mov	r7,zero
 4001b5c:	d8c03d15 	stw	r3,244(sp)
 4001b60:	da003e15 	stw	r8,248(sp)
 4001b64:	400a7840 	call	400a784 <__eqdf2>
 4001b68:	d8c03d17 	ldw	r3,244(sp)
 4001b6c:	da003e17 	ldw	r8,248(sp)
 4001b70:	1000f51e 	bne	r2,zero,4001f48 <___svfprintf_internal_r+0x1250>
 4001b74:	d8801f17 	ldw	r2,124(sp)
 4001b78:	01010074 	movhi	r4,1025
 4001b7c:	21388004 	addi	r4,r4,-7680
 4001b80:	18c00044 	addi	r3,r3,1
 4001b84:	10800044 	addi	r2,r2,1
 4001b88:	41000015 	stw	r4,0(r8)
 4001b8c:	01000044 	movi	r4,1
 4001b90:	41000115 	stw	r4,4(r8)
 4001b94:	d8c02015 	stw	r3,128(sp)
 4001b98:	d8801f15 	stw	r2,124(sp)
 4001b9c:	010001c4 	movi	r4,7
 4001ba0:	20826616 	blt	r4,r2,400253c <___svfprintf_internal_r+0x1844>
 4001ba4:	42000204 	addi	r8,r8,8
 4001ba8:	d8802617 	ldw	r2,152(sp)
 4001bac:	d9403317 	ldw	r5,204(sp)
 4001bb0:	11400216 	blt	r2,r5,4001bbc <___svfprintf_internal_r+0xec4>
 4001bb4:	9080004c 	andi	r2,r18,1
 4001bb8:	103eb326 	beq	r2,zero,4001688 <__alt_mem_onchip_memory2_0+0xfbffc4c8>
 4001bbc:	d8803817 	ldw	r2,224(sp)
 4001bc0:	d9003417 	ldw	r4,208(sp)
 4001bc4:	d9403817 	ldw	r5,224(sp)
 4001bc8:	1887883a 	add	r3,r3,r2
 4001bcc:	d8801f17 	ldw	r2,124(sp)
 4001bd0:	41000015 	stw	r4,0(r8)
 4001bd4:	41400115 	stw	r5,4(r8)
 4001bd8:	10800044 	addi	r2,r2,1
 4001bdc:	d8c02015 	stw	r3,128(sp)
 4001be0:	d8801f15 	stw	r2,124(sp)
 4001be4:	010001c4 	movi	r4,7
 4001be8:	2082af16 	blt	r4,r2,40026a8 <___svfprintf_internal_r+0x19b0>
 4001bec:	42000204 	addi	r8,r8,8
 4001bf0:	d8803317 	ldw	r2,204(sp)
 4001bf4:	143fffc4 	addi	r16,r2,-1
 4001bf8:	043ea30e 	bge	zero,r16,4001688 <__alt_mem_onchip_memory2_0+0xfbffc4c8>
 4001bfc:	04400404 	movi	r17,16
 4001c00:	d8801f17 	ldw	r2,124(sp)
 4001c04:	8c00860e 	bge	r17,r16,4001e20 <___svfprintf_internal_r+0x1128>
 4001c08:	01410074 	movhi	r5,1025
 4001c0c:	29788084 	addi	r5,r5,-7678
 4001c10:	d9402c15 	stw	r5,176(sp)
 4001c14:	058001c4 	movi	r22,7
 4001c18:	dd002d17 	ldw	r20,180(sp)
 4001c1c:	00000306 	br	4001c2c <___svfprintf_internal_r+0xf34>
 4001c20:	42000204 	addi	r8,r8,8
 4001c24:	843ffc04 	addi	r16,r16,-16
 4001c28:	8c00800e 	bge	r17,r16,4001e2c <___svfprintf_internal_r+0x1134>
 4001c2c:	18c00404 	addi	r3,r3,16
 4001c30:	10800044 	addi	r2,r2,1
 4001c34:	45400015 	stw	r21,0(r8)
 4001c38:	44400115 	stw	r17,4(r8)
 4001c3c:	d8c02015 	stw	r3,128(sp)
 4001c40:	d8801f15 	stw	r2,124(sp)
 4001c44:	b0bff60e 	bge	r22,r2,4001c20 <__alt_mem_onchip_memory2_0+0xfbffca60>
 4001c48:	d9801e04 	addi	r6,sp,120
 4001c4c:	a00b883a 	mov	r5,r20
 4001c50:	9809883a 	mov	r4,r19
 4001c54:	40065d40 	call	40065d4 <__ssprint_r>
 4001c58:	103d0e1e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001c5c:	d8c02017 	ldw	r3,128(sp)
 4001c60:	d8801f17 	ldw	r2,124(sp)
 4001c64:	da000404 	addi	r8,sp,16
 4001c68:	003fee06 	br	4001c24 <__alt_mem_onchip_memory2_0+0xfbffca64>
 4001c6c:	d9403117 	ldw	r5,196(sp)
 4001c70:	d8802917 	ldw	r2,164(sp)
 4001c74:	28adc83a 	sub	r22,r5,r2
 4001c78:	05be430e 	bge	zero,r22,4001588 <__alt_mem_onchip_memory2_0+0xfbffc3c8>
 4001c7c:	07000404 	movi	fp,16
 4001c80:	d8801f17 	ldw	r2,124(sp)
 4001c84:	e583a20e 	bge	fp,r22,4002b10 <___svfprintf_internal_r+0x1e18>
 4001c88:	01410074 	movhi	r5,1025
 4001c8c:	29788084 	addi	r5,r5,-7678
 4001c90:	dc403015 	stw	r17,192(sp)
 4001c94:	d9402c15 	stw	r5,176(sp)
 4001c98:	b023883a 	mov	r17,r22
 4001c9c:	050001c4 	movi	r20,7
 4001ca0:	902d883a 	mov	r22,r18
 4001ca4:	8025883a 	mov	r18,r16
 4001ca8:	dc002d17 	ldw	r16,180(sp)
 4001cac:	00000306 	br	4001cbc <___svfprintf_internal_r+0xfc4>
 4001cb0:	8c7ffc04 	addi	r17,r17,-16
 4001cb4:	42000204 	addi	r8,r8,8
 4001cb8:	e440110e 	bge	fp,r17,4001d00 <___svfprintf_internal_r+0x1008>
 4001cbc:	18c00404 	addi	r3,r3,16
 4001cc0:	10800044 	addi	r2,r2,1
 4001cc4:	45400015 	stw	r21,0(r8)
 4001cc8:	47000115 	stw	fp,4(r8)
 4001ccc:	d8c02015 	stw	r3,128(sp)
 4001cd0:	d8801f15 	stw	r2,124(sp)
 4001cd4:	a0bff60e 	bge	r20,r2,4001cb0 <__alt_mem_onchip_memory2_0+0xfbffcaf0>
 4001cd8:	d9801e04 	addi	r6,sp,120
 4001cdc:	800b883a 	mov	r5,r16
 4001ce0:	9809883a 	mov	r4,r19
 4001ce4:	40065d40 	call	40065d4 <__ssprint_r>
 4001ce8:	103cea1e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001cec:	8c7ffc04 	addi	r17,r17,-16
 4001cf0:	d8c02017 	ldw	r3,128(sp)
 4001cf4:	d8801f17 	ldw	r2,124(sp)
 4001cf8:	da000404 	addi	r8,sp,16
 4001cfc:	e47fef16 	blt	fp,r17,4001cbc <__alt_mem_onchip_memory2_0+0xfbffcafc>
 4001d00:	9021883a 	mov	r16,r18
 4001d04:	b025883a 	mov	r18,r22
 4001d08:	882d883a 	mov	r22,r17
 4001d0c:	dc403017 	ldw	r17,192(sp)
 4001d10:	d9002c17 	ldw	r4,176(sp)
 4001d14:	1d87883a 	add	r3,r3,r22
 4001d18:	10800044 	addi	r2,r2,1
 4001d1c:	41000015 	stw	r4,0(r8)
 4001d20:	45800115 	stw	r22,4(r8)
 4001d24:	d8c02015 	stw	r3,128(sp)
 4001d28:	d8801f15 	stw	r2,124(sp)
 4001d2c:	010001c4 	movi	r4,7
 4001d30:	20819a16 	blt	r4,r2,400239c <___svfprintf_internal_r+0x16a4>
 4001d34:	42000204 	addi	r8,r8,8
 4001d38:	003e1306 	br	4001588 <__alt_mem_onchip_memory2_0+0xfbffc3c8>
 4001d3c:	d9403317 	ldw	r5,204(sp)
 4001d40:	00800044 	movi	r2,1
 4001d44:	18c00044 	addi	r3,r3,1
 4001d48:	1141710e 	bge	r2,r5,4002310 <___svfprintf_internal_r+0x1618>
 4001d4c:	dc401f17 	ldw	r17,124(sp)
 4001d50:	00800044 	movi	r2,1
 4001d54:	40800115 	stw	r2,4(r8)
 4001d58:	8c400044 	addi	r17,r17,1
 4001d5c:	44000015 	stw	r16,0(r8)
 4001d60:	d8c02015 	stw	r3,128(sp)
 4001d64:	dc401f15 	stw	r17,124(sp)
 4001d68:	008001c4 	movi	r2,7
 4001d6c:	14417416 	blt	r2,r17,4002340 <___svfprintf_internal_r+0x1648>
 4001d70:	42000204 	addi	r8,r8,8
 4001d74:	d8803817 	ldw	r2,224(sp)
 4001d78:	d9003417 	ldw	r4,208(sp)
 4001d7c:	8c400044 	addi	r17,r17,1
 4001d80:	10c7883a 	add	r3,r2,r3
 4001d84:	40800115 	stw	r2,4(r8)
 4001d88:	41000015 	stw	r4,0(r8)
 4001d8c:	d8c02015 	stw	r3,128(sp)
 4001d90:	dc401f15 	stw	r17,124(sp)
 4001d94:	008001c4 	movi	r2,7
 4001d98:	14417216 	blt	r2,r17,4002364 <___svfprintf_internal_r+0x166c>
 4001d9c:	45800204 	addi	r22,r8,8
 4001da0:	d9003617 	ldw	r4,216(sp)
 4001da4:	d9403717 	ldw	r5,220(sp)
 4001da8:	000d883a 	mov	r6,zero
 4001dac:	000f883a 	mov	r7,zero
 4001db0:	d8c03d15 	stw	r3,244(sp)
 4001db4:	400a7840 	call	400a784 <__eqdf2>
 4001db8:	d8c03d17 	ldw	r3,244(sp)
 4001dbc:	1000b326 	beq	r2,zero,400208c <___svfprintf_internal_r+0x1394>
 4001dc0:	d9403317 	ldw	r5,204(sp)
 4001dc4:	84000044 	addi	r16,r16,1
 4001dc8:	8c400044 	addi	r17,r17,1
 4001dcc:	28bfffc4 	addi	r2,r5,-1
 4001dd0:	1887883a 	add	r3,r3,r2
 4001dd4:	b0800115 	stw	r2,4(r22)
 4001dd8:	b4000015 	stw	r16,0(r22)
 4001ddc:	d8c02015 	stw	r3,128(sp)
 4001de0:	dc401f15 	stw	r17,124(sp)
 4001de4:	008001c4 	movi	r2,7
 4001de8:	1440d216 	blt	r2,r17,4002134 <___svfprintf_internal_r+0x143c>
 4001dec:	b5800204 	addi	r22,r22,8
 4001df0:	d9003b17 	ldw	r4,236(sp)
 4001df4:	df0022c4 	addi	fp,sp,139
 4001df8:	8c400044 	addi	r17,r17,1
 4001dfc:	20c7883a 	add	r3,r4,r3
 4001e00:	b7000015 	stw	fp,0(r22)
 4001e04:	b1000115 	stw	r4,4(r22)
 4001e08:	d8c02015 	stw	r3,128(sp)
 4001e0c:	dc401f15 	stw	r17,124(sp)
 4001e10:	008001c4 	movi	r2,7
 4001e14:	14400e16 	blt	r2,r17,4001e50 <___svfprintf_internal_r+0x1158>
 4001e18:	b2000204 	addi	r8,r22,8
 4001e1c:	003e1a06 	br	4001688 <__alt_mem_onchip_memory2_0+0xfbffc4c8>
 4001e20:	01010074 	movhi	r4,1025
 4001e24:	21388084 	addi	r4,r4,-7678
 4001e28:	d9002c15 	stw	r4,176(sp)
 4001e2c:	d9002c17 	ldw	r4,176(sp)
 4001e30:	1c07883a 	add	r3,r3,r16
 4001e34:	44000115 	stw	r16,4(r8)
 4001e38:	41000015 	stw	r4,0(r8)
 4001e3c:	10800044 	addi	r2,r2,1
 4001e40:	d8c02015 	stw	r3,128(sp)
 4001e44:	d8801f15 	stw	r2,124(sp)
 4001e48:	010001c4 	movi	r4,7
 4001e4c:	20be0d0e 	bge	r4,r2,4001684 <__alt_mem_onchip_memory2_0+0xfbffc4c4>
 4001e50:	d9402d17 	ldw	r5,180(sp)
 4001e54:	d9801e04 	addi	r6,sp,120
 4001e58:	9809883a 	mov	r4,r19
 4001e5c:	40065d40 	call	40065d4 <__ssprint_r>
 4001e60:	103c8c1e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001e64:	d8c02017 	ldw	r3,128(sp)
 4001e68:	da000404 	addi	r8,sp,16
 4001e6c:	003e0606 	br	4001688 <__alt_mem_onchip_memory2_0+0xfbffc4c8>
 4001e70:	d9402d17 	ldw	r5,180(sp)
 4001e74:	d9801e04 	addi	r6,sp,120
 4001e78:	9809883a 	mov	r4,r19
 4001e7c:	40065d40 	call	40065d4 <__ssprint_r>
 4001e80:	103e3d26 	beq	r2,zero,4001778 <__alt_mem_onchip_memory2_0+0xfbffc5b8>
 4001e84:	003c8306 	br	4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001e88:	d9402d17 	ldw	r5,180(sp)
 4001e8c:	d9801e04 	addi	r6,sp,120
 4001e90:	9809883a 	mov	r4,r19
 4001e94:	40065d40 	call	40065d4 <__ssprint_r>
 4001e98:	103c7e1e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001e9c:	d8c02017 	ldw	r3,128(sp)
 4001ea0:	da000404 	addi	r8,sp,16
 4001ea4:	003deb06 	br	4001654 <__alt_mem_onchip_memory2_0+0xfbffc494>
 4001ea8:	d9402d17 	ldw	r5,180(sp)
 4001eac:	d9801e04 	addi	r6,sp,120
 4001eb0:	9809883a 	mov	r4,r19
 4001eb4:	40065d40 	call	40065d4 <__ssprint_r>
 4001eb8:	103c761e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001ebc:	d8c02017 	ldw	r3,128(sp)
 4001ec0:	da000404 	addi	r8,sp,16
 4001ec4:	003d9f06 	br	4001544 <__alt_mem_onchip_memory2_0+0xfbffc384>
 4001ec8:	d9402d17 	ldw	r5,180(sp)
 4001ecc:	d9801e04 	addi	r6,sp,120
 4001ed0:	9809883a 	mov	r4,r19
 4001ed4:	40065d40 	call	40065d4 <__ssprint_r>
 4001ed8:	103c6e1e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001edc:	d8c02017 	ldw	r3,128(sp)
 4001ee0:	da000404 	addi	r8,sp,16
 4001ee4:	003da506 	br	400157c <__alt_mem_onchip_memory2_0+0xfbffc3bc>
 4001ee8:	d9402a17 	ldw	r5,168(sp)
 4001eec:	d8002785 	stb	zero,158(sp)
 4001ef0:	283f0816 	blt	r5,zero,4001b14 <__alt_mem_onchip_memory2_0+0xfbffc954>
 4001ef4:	00ffdfc4 	movi	r3,-129
 4001ef8:	a584b03a 	or	r2,r20,r22
 4001efc:	90e4703a 	and	r18,r18,r3
 4001f00:	103c5126 	beq	r2,zero,4001048 <__alt_mem_onchip_memory2_0+0xfbffbe88>
 4001f04:	0039883a 	mov	fp,zero
 4001f08:	003e5a06 	br	4001874 <__alt_mem_onchip_memory2_0+0xfbffc6b4>
 4001f0c:	9080040c 	andi	r2,r18,16
 4001f10:	10013d26 	beq	r2,zero,4002408 <___svfprintf_internal_r+0x1710>
 4001f14:	d8c02e17 	ldw	r3,184(sp)
 4001f18:	d9002a17 	ldw	r4,168(sp)
 4001f1c:	d8002785 	stb	zero,158(sp)
 4001f20:	18800104 	addi	r2,r3,4
 4001f24:	1d000017 	ldw	r20,0(r3)
 4001f28:	002d883a 	mov	r22,zero
 4001f2c:	20013f16 	blt	r4,zero,400242c <___svfprintf_internal_r+0x1734>
 4001f30:	00ffdfc4 	movi	r3,-129
 4001f34:	d8802e15 	stw	r2,184(sp)
 4001f38:	90e4703a 	and	r18,r18,r3
 4001f3c:	a03d0926 	beq	r20,zero,4001364 <__alt_mem_onchip_memory2_0+0xfbffc1a4>
 4001f40:	0039883a 	mov	fp,zero
 4001f44:	003d0c06 	br	4001378 <__alt_mem_onchip_memory2_0+0xfbffc1b8>
 4001f48:	dc402617 	ldw	r17,152(sp)
 4001f4c:	0441830e 	bge	zero,r17,400255c <___svfprintf_internal_r+0x1864>
 4001f50:	dc403217 	ldw	r17,200(sp)
 4001f54:	d8803317 	ldw	r2,204(sp)
 4001f58:	1440010e 	bge	r2,r17,4001f60 <___svfprintf_internal_r+0x1268>
 4001f5c:	1023883a 	mov	r17,r2
 4001f60:	04400a0e 	bge	zero,r17,4001f8c <___svfprintf_internal_r+0x1294>
 4001f64:	d8801f17 	ldw	r2,124(sp)
 4001f68:	1c47883a 	add	r3,r3,r17
 4001f6c:	44000015 	stw	r16,0(r8)
 4001f70:	10800044 	addi	r2,r2,1
 4001f74:	44400115 	stw	r17,4(r8)
 4001f78:	d8c02015 	stw	r3,128(sp)
 4001f7c:	d8801f15 	stw	r2,124(sp)
 4001f80:	010001c4 	movi	r4,7
 4001f84:	20827516 	blt	r4,r2,400295c <___svfprintf_internal_r+0x1c64>
 4001f88:	42000204 	addi	r8,r8,8
 4001f8c:	88027b16 	blt	r17,zero,400297c <___svfprintf_internal_r+0x1c84>
 4001f90:	d9003217 	ldw	r4,200(sp)
 4001f94:	2463c83a 	sub	r17,r4,r17
 4001f98:	0440990e 	bge	zero,r17,4002200 <___svfprintf_internal_r+0x1508>
 4001f9c:	05800404 	movi	r22,16
 4001fa0:	d8801f17 	ldw	r2,124(sp)
 4001fa4:	b441530e 	bge	r22,r17,40024f4 <___svfprintf_internal_r+0x17fc>
 4001fa8:	01010074 	movhi	r4,1025
 4001fac:	21388084 	addi	r4,r4,-7678
 4001fb0:	d9002c15 	stw	r4,176(sp)
 4001fb4:	070001c4 	movi	fp,7
 4001fb8:	dd002d17 	ldw	r20,180(sp)
 4001fbc:	00000306 	br	4001fcc <___svfprintf_internal_r+0x12d4>
 4001fc0:	42000204 	addi	r8,r8,8
 4001fc4:	8c7ffc04 	addi	r17,r17,-16
 4001fc8:	b4414d0e 	bge	r22,r17,4002500 <___svfprintf_internal_r+0x1808>
 4001fcc:	18c00404 	addi	r3,r3,16
 4001fd0:	10800044 	addi	r2,r2,1
 4001fd4:	45400015 	stw	r21,0(r8)
 4001fd8:	45800115 	stw	r22,4(r8)
 4001fdc:	d8c02015 	stw	r3,128(sp)
 4001fe0:	d8801f15 	stw	r2,124(sp)
 4001fe4:	e0bff60e 	bge	fp,r2,4001fc0 <__alt_mem_onchip_memory2_0+0xfbffce00>
 4001fe8:	d9801e04 	addi	r6,sp,120
 4001fec:	a00b883a 	mov	r5,r20
 4001ff0:	9809883a 	mov	r4,r19
 4001ff4:	40065d40 	call	40065d4 <__ssprint_r>
 4001ff8:	103c261e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4001ffc:	d8c02017 	ldw	r3,128(sp)
 4002000:	d8801f17 	ldw	r2,124(sp)
 4002004:	da000404 	addi	r8,sp,16
 4002008:	003fee06 	br	4001fc4 <__alt_mem_onchip_memory2_0+0xfbffce04>
 400200c:	d9402d17 	ldw	r5,180(sp)
 4002010:	d9801e04 	addi	r6,sp,120
 4002014:	9809883a 	mov	r4,r19
 4002018:	40065d40 	call	40065d4 <__ssprint_r>
 400201c:	103c1d1e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002020:	d8c02017 	ldw	r3,128(sp)
 4002024:	df002787 	ldb	fp,158(sp)
 4002028:	da000404 	addi	r8,sp,16
 400202c:	003d3806 	br	4001510 <__alt_mem_onchip_memory2_0+0xfbffc350>
 4002030:	9080040c 	andi	r2,r18,16
 4002034:	10005c26 	beq	r2,zero,40021a8 <___svfprintf_internal_r+0x14b0>
 4002038:	d8c02e17 	ldw	r3,184(sp)
 400203c:	d9002a17 	ldw	r4,168(sp)
 4002040:	d8002785 	stb	zero,158(sp)
 4002044:	18800104 	addi	r2,r3,4
 4002048:	1d000017 	ldw	r20,0(r3)
 400204c:	002d883a 	mov	r22,zero
 4002050:	20005e16 	blt	r4,zero,40021cc <___svfprintf_internal_r+0x14d4>
 4002054:	00ffdfc4 	movi	r3,-129
 4002058:	d8802e15 	stw	r2,184(sp)
 400205c:	90e4703a 	and	r18,r18,r3
 4002060:	0039883a 	mov	fp,zero
 4002064:	a03ddf26 	beq	r20,zero,40017e4 <__alt_mem_onchip_memory2_0+0xfbffc624>
 4002068:	00800244 	movi	r2,9
 400206c:	153c8e36 	bltu	r2,r20,40012a8 <__alt_mem_onchip_memory2_0+0xfbffc0e8>
 4002070:	a5000c04 	addi	r20,r20,48
 4002074:	dc001dc4 	addi	r16,sp,119
 4002078:	dd001dc5 	stb	r20,119(sp)
 400207c:	d8c02817 	ldw	r3,160(sp)
 4002080:	1c07c83a 	sub	r3,r3,r16
 4002084:	d8c02b15 	stw	r3,172(sp)
 4002088:	003cd306 	br	40013d8 <__alt_mem_onchip_memory2_0+0xfbffc218>
 400208c:	d8803317 	ldw	r2,204(sp)
 4002090:	143fffc4 	addi	r16,r2,-1
 4002094:	043f560e 	bge	zero,r16,4001df0 <__alt_mem_onchip_memory2_0+0xfbffcc30>
 4002098:	07000404 	movi	fp,16
 400209c:	e403530e 	bge	fp,r16,4002dec <___svfprintf_internal_r+0x20f4>
 40020a0:	01410074 	movhi	r5,1025
 40020a4:	29788084 	addi	r5,r5,-7678
 40020a8:	d9402c15 	stw	r5,176(sp)
 40020ac:	01c001c4 	movi	r7,7
 40020b0:	dd002d17 	ldw	r20,180(sp)
 40020b4:	00000306 	br	40020c4 <___svfprintf_internal_r+0x13cc>
 40020b8:	843ffc04 	addi	r16,r16,-16
 40020bc:	b5800204 	addi	r22,r22,8
 40020c0:	e400130e 	bge	fp,r16,4002110 <___svfprintf_internal_r+0x1418>
 40020c4:	18c00404 	addi	r3,r3,16
 40020c8:	8c400044 	addi	r17,r17,1
 40020cc:	b5400015 	stw	r21,0(r22)
 40020d0:	b7000115 	stw	fp,4(r22)
 40020d4:	d8c02015 	stw	r3,128(sp)
 40020d8:	dc401f15 	stw	r17,124(sp)
 40020dc:	3c7ff60e 	bge	r7,r17,40020b8 <__alt_mem_onchip_memory2_0+0xfbffcef8>
 40020e0:	d9801e04 	addi	r6,sp,120
 40020e4:	a00b883a 	mov	r5,r20
 40020e8:	9809883a 	mov	r4,r19
 40020ec:	d9c03d15 	stw	r7,244(sp)
 40020f0:	40065d40 	call	40065d4 <__ssprint_r>
 40020f4:	d9c03d17 	ldw	r7,244(sp)
 40020f8:	103be61e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 40020fc:	843ffc04 	addi	r16,r16,-16
 4002100:	d8c02017 	ldw	r3,128(sp)
 4002104:	dc401f17 	ldw	r17,124(sp)
 4002108:	dd800404 	addi	r22,sp,16
 400210c:	e43fed16 	blt	fp,r16,40020c4 <__alt_mem_onchip_memory2_0+0xfbffcf04>
 4002110:	d8802c17 	ldw	r2,176(sp)
 4002114:	1c07883a 	add	r3,r3,r16
 4002118:	8c400044 	addi	r17,r17,1
 400211c:	b0800015 	stw	r2,0(r22)
 4002120:	b4000115 	stw	r16,4(r22)
 4002124:	d8c02015 	stw	r3,128(sp)
 4002128:	dc401f15 	stw	r17,124(sp)
 400212c:	008001c4 	movi	r2,7
 4002130:	147f2e0e 	bge	r2,r17,4001dec <__alt_mem_onchip_memory2_0+0xfbffcc2c>
 4002134:	d9402d17 	ldw	r5,180(sp)
 4002138:	d9801e04 	addi	r6,sp,120
 400213c:	9809883a 	mov	r4,r19
 4002140:	40065d40 	call	40065d4 <__ssprint_r>
 4002144:	103bd31e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002148:	d8c02017 	ldw	r3,128(sp)
 400214c:	dc401f17 	ldw	r17,124(sp)
 4002150:	dd800404 	addi	r22,sp,16
 4002154:	003f2606 	br	4001df0 <__alt_mem_onchip_memory2_0+0xfbffcc30>
 4002158:	9080040c 	andi	r2,r18,16
 400215c:	1000c326 	beq	r2,zero,400246c <___svfprintf_internal_r+0x1774>
 4002160:	d9402e17 	ldw	r5,184(sp)
 4002164:	2d000017 	ldw	r20,0(r5)
 4002168:	29400104 	addi	r5,r5,4
 400216c:	d9402e15 	stw	r5,184(sp)
 4002170:	a02dd7fa 	srai	r22,r20,31
 4002174:	b005883a 	mov	r2,r22
 4002178:	103c430e 	bge	r2,zero,4001288 <__alt_mem_onchip_memory2_0+0xfbffc0c8>
 400217c:	d9402a17 	ldw	r5,168(sp)
 4002180:	0529c83a 	sub	r20,zero,r20
 4002184:	07000b44 	movi	fp,45
 4002188:	a004c03a 	cmpne	r2,r20,zero
 400218c:	05adc83a 	sub	r22,zero,r22
 4002190:	df002785 	stb	fp,158(sp)
 4002194:	b0adc83a 	sub	r22,r22,r2
 4002198:	28022e16 	blt	r5,zero,4002a54 <___svfprintf_internal_r+0x1d5c>
 400219c:	00bfdfc4 	movi	r2,-129
 40021a0:	90a4703a 	and	r18,r18,r2
 40021a4:	003c3f06 	br	40012a4 <__alt_mem_onchip_memory2_0+0xfbffc0e4>
 40021a8:	9080100c 	andi	r2,r18,64
 40021ac:	d8002785 	stb	zero,158(sp)
 40021b0:	10012526 	beq	r2,zero,4002648 <___svfprintf_internal_r+0x1950>
 40021b4:	d9402e17 	ldw	r5,184(sp)
 40021b8:	d8c02a17 	ldw	r3,168(sp)
 40021bc:	002d883a 	mov	r22,zero
 40021c0:	28800104 	addi	r2,r5,4
 40021c4:	2d00000b 	ldhu	r20,0(r5)
 40021c8:	183fa20e 	bge	r3,zero,4002054 <__alt_mem_onchip_memory2_0+0xfbffce94>
 40021cc:	d8802e15 	stw	r2,184(sp)
 40021d0:	0039883a 	mov	fp,zero
 40021d4:	a584b03a 	or	r2,r20,r22
 40021d8:	103c321e 	bne	r2,zero,40012a4 <__alt_mem_onchip_memory2_0+0xfbffc0e4>
 40021dc:	00800044 	movi	r2,1
 40021e0:	003e5006 	br	4001b24 <__alt_mem_onchip_memory2_0+0xfbffc964>
 40021e4:	d9402d17 	ldw	r5,180(sp)
 40021e8:	d9801e04 	addi	r6,sp,120
 40021ec:	9809883a 	mov	r4,r19
 40021f0:	40065d40 	call	40065d4 <__ssprint_r>
 40021f4:	103ba71e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 40021f8:	d8c02017 	ldw	r3,128(sp)
 40021fc:	da000404 	addi	r8,sp,16
 4002200:	d9003217 	ldw	r4,200(sp)
 4002204:	d8802617 	ldw	r2,152(sp)
 4002208:	d9403317 	ldw	r5,204(sp)
 400220c:	8123883a 	add	r17,r16,r4
 4002210:	11400216 	blt	r2,r5,400221c <___svfprintf_internal_r+0x1524>
 4002214:	9100004c 	andi	r4,r18,1
 4002218:	20000d26 	beq	r4,zero,4002250 <___svfprintf_internal_r+0x1558>
 400221c:	d9003817 	ldw	r4,224(sp)
 4002220:	d9403417 	ldw	r5,208(sp)
 4002224:	1907883a 	add	r3,r3,r4
 4002228:	d9001f17 	ldw	r4,124(sp)
 400222c:	41400015 	stw	r5,0(r8)
 4002230:	d9403817 	ldw	r5,224(sp)
 4002234:	21000044 	addi	r4,r4,1
 4002238:	d8c02015 	stw	r3,128(sp)
 400223c:	41400115 	stw	r5,4(r8)
 4002240:	d9001f15 	stw	r4,124(sp)
 4002244:	014001c4 	movi	r5,7
 4002248:	2901dc16 	blt	r5,r4,40029bc <___svfprintf_internal_r+0x1cc4>
 400224c:	42000204 	addi	r8,r8,8
 4002250:	d9003317 	ldw	r4,204(sp)
 4002254:	8121883a 	add	r16,r16,r4
 4002258:	2085c83a 	sub	r2,r4,r2
 400225c:	8461c83a 	sub	r16,r16,r17
 4002260:	1400010e 	bge	r2,r16,4002268 <___svfprintf_internal_r+0x1570>
 4002264:	1021883a 	mov	r16,r2
 4002268:	04000a0e 	bge	zero,r16,4002294 <___svfprintf_internal_r+0x159c>
 400226c:	d9001f17 	ldw	r4,124(sp)
 4002270:	1c07883a 	add	r3,r3,r16
 4002274:	44400015 	stw	r17,0(r8)
 4002278:	21000044 	addi	r4,r4,1
 400227c:	44000115 	stw	r16,4(r8)
 4002280:	d8c02015 	stw	r3,128(sp)
 4002284:	d9001f15 	stw	r4,124(sp)
 4002288:	014001c4 	movi	r5,7
 400228c:	2901e616 	blt	r5,r4,4002a28 <___svfprintf_internal_r+0x1d30>
 4002290:	42000204 	addi	r8,r8,8
 4002294:	8001f616 	blt	r16,zero,4002a70 <___svfprintf_internal_r+0x1d78>
 4002298:	1421c83a 	sub	r16,r2,r16
 400229c:	043cfa0e 	bge	zero,r16,4001688 <__alt_mem_onchip_memory2_0+0xfbffc4c8>
 40022a0:	04400404 	movi	r17,16
 40022a4:	d8801f17 	ldw	r2,124(sp)
 40022a8:	8c3edd0e 	bge	r17,r16,4001e20 <__alt_mem_onchip_memory2_0+0xfbffcc60>
 40022ac:	01410074 	movhi	r5,1025
 40022b0:	29788084 	addi	r5,r5,-7678
 40022b4:	d9402c15 	stw	r5,176(sp)
 40022b8:	058001c4 	movi	r22,7
 40022bc:	dd002d17 	ldw	r20,180(sp)
 40022c0:	00000306 	br	40022d0 <___svfprintf_internal_r+0x15d8>
 40022c4:	42000204 	addi	r8,r8,8
 40022c8:	843ffc04 	addi	r16,r16,-16
 40022cc:	8c3ed70e 	bge	r17,r16,4001e2c <__alt_mem_onchip_memory2_0+0xfbffcc6c>
 40022d0:	18c00404 	addi	r3,r3,16
 40022d4:	10800044 	addi	r2,r2,1
 40022d8:	45400015 	stw	r21,0(r8)
 40022dc:	44400115 	stw	r17,4(r8)
 40022e0:	d8c02015 	stw	r3,128(sp)
 40022e4:	d8801f15 	stw	r2,124(sp)
 40022e8:	b0bff60e 	bge	r22,r2,40022c4 <__alt_mem_onchip_memory2_0+0xfbffd104>
 40022ec:	d9801e04 	addi	r6,sp,120
 40022f0:	a00b883a 	mov	r5,r20
 40022f4:	9809883a 	mov	r4,r19
 40022f8:	40065d40 	call	40065d4 <__ssprint_r>
 40022fc:	103b651e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002300:	d8c02017 	ldw	r3,128(sp)
 4002304:	d8801f17 	ldw	r2,124(sp)
 4002308:	da000404 	addi	r8,sp,16
 400230c:	003fee06 	br	40022c8 <__alt_mem_onchip_memory2_0+0xfbffd108>
 4002310:	9088703a 	and	r4,r18,r2
 4002314:	203e8d1e 	bne	r4,zero,4001d4c <__alt_mem_onchip_memory2_0+0xfbffcb8c>
 4002318:	dc401f17 	ldw	r17,124(sp)
 400231c:	40800115 	stw	r2,4(r8)
 4002320:	44000015 	stw	r16,0(r8)
 4002324:	8c400044 	addi	r17,r17,1
 4002328:	d8c02015 	stw	r3,128(sp)
 400232c:	dc401f15 	stw	r17,124(sp)
 4002330:	008001c4 	movi	r2,7
 4002334:	147f7f16 	blt	r2,r17,4002134 <__alt_mem_onchip_memory2_0+0xfbffcf74>
 4002338:	45800204 	addi	r22,r8,8
 400233c:	003eac06 	br	4001df0 <__alt_mem_onchip_memory2_0+0xfbffcc30>
 4002340:	d9402d17 	ldw	r5,180(sp)
 4002344:	d9801e04 	addi	r6,sp,120
 4002348:	9809883a 	mov	r4,r19
 400234c:	40065d40 	call	40065d4 <__ssprint_r>
 4002350:	103b501e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002354:	d8c02017 	ldw	r3,128(sp)
 4002358:	dc401f17 	ldw	r17,124(sp)
 400235c:	da000404 	addi	r8,sp,16
 4002360:	003e8406 	br	4001d74 <__alt_mem_onchip_memory2_0+0xfbffcbb4>
 4002364:	d9402d17 	ldw	r5,180(sp)
 4002368:	d9801e04 	addi	r6,sp,120
 400236c:	9809883a 	mov	r4,r19
 4002370:	40065d40 	call	40065d4 <__ssprint_r>
 4002374:	103b471e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002378:	d8c02017 	ldw	r3,128(sp)
 400237c:	dc401f17 	ldw	r17,124(sp)
 4002380:	dd800404 	addi	r22,sp,16
 4002384:	003e8606 	br	4001da0 <__alt_mem_onchip_memory2_0+0xfbffcbe0>
 4002388:	0029883a 	mov	r20,zero
 400238c:	a5000c04 	addi	r20,r20,48
 4002390:	dc001dc4 	addi	r16,sp,119
 4002394:	dd001dc5 	stb	r20,119(sp)
 4002398:	003f3806 	br	400207c <__alt_mem_onchip_memory2_0+0xfbffcebc>
 400239c:	d9402d17 	ldw	r5,180(sp)
 40023a0:	d9801e04 	addi	r6,sp,120
 40023a4:	9809883a 	mov	r4,r19
 40023a8:	40065d40 	call	40065d4 <__ssprint_r>
 40023ac:	103b391e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 40023b0:	d8c02017 	ldw	r3,128(sp)
 40023b4:	da000404 	addi	r8,sp,16
 40023b8:	003c7306 	br	4001588 <__alt_mem_onchip_memory2_0+0xfbffc3c8>
 40023bc:	d9003617 	ldw	r4,216(sp)
 40023c0:	d9403717 	ldw	r5,220(sp)
 40023c4:	da003e15 	stw	r8,248(sp)
 40023c8:	40064300 	call	4006430 <__fpclassifyd>
 40023cc:	da003e17 	ldw	r8,248(sp)
 40023d0:	1000bd1e 	bne	r2,zero,40026c8 <___svfprintf_internal_r+0x19d0>
 40023d4:	008011c4 	movi	r2,71
 40023d8:	14411e0e 	bge	r2,r17,4002854 <___svfprintf_internal_r+0x1b5c>
 40023dc:	04010074 	movhi	r16,1025
 40023e0:	84387304 	addi	r16,r16,-7732
 40023e4:	00c000c4 	movi	r3,3
 40023e8:	00bfdfc4 	movi	r2,-129
 40023ec:	d8c02915 	stw	r3,164(sp)
 40023f0:	90a4703a 	and	r18,r18,r2
 40023f4:	df002783 	ldbu	fp,158(sp)
 40023f8:	d8c02b15 	stw	r3,172(sp)
 40023fc:	d8002a15 	stw	zero,168(sp)
 4002400:	d8003215 	stw	zero,200(sp)
 4002404:	003bfa06 	br	40013f0 <__alt_mem_onchip_memory2_0+0xfbffc230>
 4002408:	9080100c 	andi	r2,r18,64
 400240c:	d8002785 	stb	zero,158(sp)
 4002410:	10009426 	beq	r2,zero,4002664 <___svfprintf_internal_r+0x196c>
 4002414:	d9402e17 	ldw	r5,184(sp)
 4002418:	d8c02a17 	ldw	r3,168(sp)
 400241c:	002d883a 	mov	r22,zero
 4002420:	28800104 	addi	r2,r5,4
 4002424:	2d00000b 	ldhu	r20,0(r5)
 4002428:	183ec10e 	bge	r3,zero,4001f30 <__alt_mem_onchip_memory2_0+0xfbffcd70>
 400242c:	a586b03a 	or	r3,r20,r22
 4002430:	d8802e15 	stw	r2,184(sp)
 4002434:	183ec21e 	bne	r3,zero,4001f40 <__alt_mem_onchip_memory2_0+0xfbffcd80>
 4002438:	0039883a 	mov	fp,zero
 400243c:	0005883a 	mov	r2,zero
 4002440:	003db806 	br	4001b24 <__alt_mem_onchip_memory2_0+0xfbffc964>
 4002444:	d8c02e17 	ldw	r3,184(sp)
 4002448:	d9002e17 	ldw	r4,184(sp)
 400244c:	d9402e17 	ldw	r5,184(sp)
 4002450:	18c00017 	ldw	r3,0(r3)
 4002454:	21000117 	ldw	r4,4(r4)
 4002458:	29400204 	addi	r5,r5,8
 400245c:	d8c03615 	stw	r3,216(sp)
 4002460:	d9003715 	stw	r4,220(sp)
 4002464:	d9402e15 	stw	r5,184(sp)
 4002468:	003b5a06 	br	40011d4 <__alt_mem_onchip_memory2_0+0xfbffc014>
 400246c:	9080100c 	andi	r2,r18,64
 4002470:	10010726 	beq	r2,zero,4002890 <___svfprintf_internal_r+0x1b98>
 4002474:	d8802e17 	ldw	r2,184(sp)
 4002478:	1500000f 	ldh	r20,0(r2)
 400247c:	10800104 	addi	r2,r2,4
 4002480:	d8802e15 	stw	r2,184(sp)
 4002484:	a02dd7fa 	srai	r22,r20,31
 4002488:	b005883a 	mov	r2,r22
 400248c:	003b7d06 	br	4001284 <__alt_mem_onchip_memory2_0+0xfbffc0c4>
 4002490:	9080100c 	andi	r2,r18,64
 4002494:	10010526 	beq	r2,zero,40028ac <___svfprintf_internal_r+0x1bb4>
 4002498:	d8c02e17 	ldw	r3,184(sp)
 400249c:	002d883a 	mov	r22,zero
 40024a0:	1d00000b 	ldhu	r20,0(r3)
 40024a4:	18c00104 	addi	r3,r3,4
 40024a8:	d8c02e15 	stw	r3,184(sp)
 40024ac:	003ce206 	br	4001838 <__alt_mem_onchip_memory2_0+0xfbffc678>
 40024b0:	bc400007 	ldb	r17,0(r23)
 40024b4:	003a6506 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 40024b8:	9080040c 	andi	r2,r18,16
 40024bc:	10010126 	beq	r2,zero,40028c4 <___svfprintf_internal_r+0x1bcc>
 40024c0:	d8c02e17 	ldw	r3,184(sp)
 40024c4:	d9002f17 	ldw	r4,188(sp)
 40024c8:	18800017 	ldw	r2,0(r3)
 40024cc:	18c00104 	addi	r3,r3,4
 40024d0:	d8c02e15 	stw	r3,184(sp)
 40024d4:	11000015 	stw	r4,0(r2)
 40024d8:	003a3206 	br	4000da4 <__alt_mem_onchip_memory2_0+0xfbffbbe4>
 40024dc:	d9002a17 	ldw	r4,168(sp)
 40024e0:	d8002785 	stb	zero,158(sp)
 40024e4:	203d8d16 	blt	r4,zero,4001b1c <__alt_mem_onchip_memory2_0+0xfbffc95c>
 40024e8:	00bfdfc4 	movi	r2,-129
 40024ec:	90a4703a 	and	r18,r18,r2
 40024f0:	003ad506 	br	4001048 <__alt_mem_onchip_memory2_0+0xfbffbe88>
 40024f4:	01410074 	movhi	r5,1025
 40024f8:	29788084 	addi	r5,r5,-7678
 40024fc:	d9402c15 	stw	r5,176(sp)
 4002500:	d9402c17 	ldw	r5,176(sp)
 4002504:	1c47883a 	add	r3,r3,r17
 4002508:	10800044 	addi	r2,r2,1
 400250c:	41400015 	stw	r5,0(r8)
 4002510:	44400115 	stw	r17,4(r8)
 4002514:	d8c02015 	stw	r3,128(sp)
 4002518:	d8801f15 	stw	r2,124(sp)
 400251c:	010001c4 	movi	r4,7
 4002520:	20bf3016 	blt	r4,r2,40021e4 <__alt_mem_onchip_memory2_0+0xfbffd024>
 4002524:	42000204 	addi	r8,r8,8
 4002528:	003f3506 	br	4002200 <__alt_mem_onchip_memory2_0+0xfbffd040>
 400252c:	01010074 	movhi	r4,1025
 4002530:	21388084 	addi	r4,r4,-7678
 4002534:	d9002c15 	stw	r4,176(sp)
 4002538:	003c3c06 	br	400162c <__alt_mem_onchip_memory2_0+0xfbffc46c>
 400253c:	d9402d17 	ldw	r5,180(sp)
 4002540:	d9801e04 	addi	r6,sp,120
 4002544:	9809883a 	mov	r4,r19
 4002548:	40065d40 	call	40065d4 <__ssprint_r>
 400254c:	103ad11e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002550:	d8c02017 	ldw	r3,128(sp)
 4002554:	da000404 	addi	r8,sp,16
 4002558:	003d9306 	br	4001ba8 <__alt_mem_onchip_memory2_0+0xfbffc9e8>
 400255c:	d8801f17 	ldw	r2,124(sp)
 4002560:	01410074 	movhi	r5,1025
 4002564:	01000044 	movi	r4,1
 4002568:	18c00044 	addi	r3,r3,1
 400256c:	10800044 	addi	r2,r2,1
 4002570:	29788004 	addi	r5,r5,-7680
 4002574:	41000115 	stw	r4,4(r8)
 4002578:	41400015 	stw	r5,0(r8)
 400257c:	d8c02015 	stw	r3,128(sp)
 4002580:	d8801f15 	stw	r2,124(sp)
 4002584:	010001c4 	movi	r4,7
 4002588:	2080b516 	blt	r4,r2,4002860 <___svfprintf_internal_r+0x1b68>
 400258c:	42000204 	addi	r8,r8,8
 4002590:	8800041e 	bne	r17,zero,40025a4 <___svfprintf_internal_r+0x18ac>
 4002594:	d8803317 	ldw	r2,204(sp)
 4002598:	1000021e 	bne	r2,zero,40025a4 <___svfprintf_internal_r+0x18ac>
 400259c:	9080004c 	andi	r2,r18,1
 40025a0:	103c3926 	beq	r2,zero,4001688 <__alt_mem_onchip_memory2_0+0xfbffc4c8>
 40025a4:	d9003817 	ldw	r4,224(sp)
 40025a8:	d8801f17 	ldw	r2,124(sp)
 40025ac:	d9403417 	ldw	r5,208(sp)
 40025b0:	20c7883a 	add	r3,r4,r3
 40025b4:	10800044 	addi	r2,r2,1
 40025b8:	41000115 	stw	r4,4(r8)
 40025bc:	41400015 	stw	r5,0(r8)
 40025c0:	d8c02015 	stw	r3,128(sp)
 40025c4:	d8801f15 	stw	r2,124(sp)
 40025c8:	010001c4 	movi	r4,7
 40025cc:	20818016 	blt	r4,r2,4002bd0 <___svfprintf_internal_r+0x1ed8>
 40025d0:	42000204 	addi	r8,r8,8
 40025d4:	0463c83a 	sub	r17,zero,r17
 40025d8:	0440cb0e 	bge	zero,r17,4002908 <___svfprintf_internal_r+0x1c10>
 40025dc:	05800404 	movi	r22,16
 40025e0:	b440e80e 	bge	r22,r17,4002984 <___svfprintf_internal_r+0x1c8c>
 40025e4:	01410074 	movhi	r5,1025
 40025e8:	29788084 	addi	r5,r5,-7678
 40025ec:	d9402c15 	stw	r5,176(sp)
 40025f0:	070001c4 	movi	fp,7
 40025f4:	dd002d17 	ldw	r20,180(sp)
 40025f8:	00000306 	br	4002608 <___svfprintf_internal_r+0x1910>
 40025fc:	42000204 	addi	r8,r8,8
 4002600:	8c7ffc04 	addi	r17,r17,-16
 4002604:	b440e20e 	bge	r22,r17,4002990 <___svfprintf_internal_r+0x1c98>
 4002608:	18c00404 	addi	r3,r3,16
 400260c:	10800044 	addi	r2,r2,1
 4002610:	45400015 	stw	r21,0(r8)
 4002614:	45800115 	stw	r22,4(r8)
 4002618:	d8c02015 	stw	r3,128(sp)
 400261c:	d8801f15 	stw	r2,124(sp)
 4002620:	e0bff60e 	bge	fp,r2,40025fc <__alt_mem_onchip_memory2_0+0xfbffd43c>
 4002624:	d9801e04 	addi	r6,sp,120
 4002628:	a00b883a 	mov	r5,r20
 400262c:	9809883a 	mov	r4,r19
 4002630:	40065d40 	call	40065d4 <__ssprint_r>
 4002634:	103a971e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002638:	d8c02017 	ldw	r3,128(sp)
 400263c:	d8801f17 	ldw	r2,124(sp)
 4002640:	da000404 	addi	r8,sp,16
 4002644:	003fee06 	br	4002600 <__alt_mem_onchip_memory2_0+0xfbffd440>
 4002648:	d9002e17 	ldw	r4,184(sp)
 400264c:	d9402a17 	ldw	r5,168(sp)
 4002650:	002d883a 	mov	r22,zero
 4002654:	20800104 	addi	r2,r4,4
 4002658:	25000017 	ldw	r20,0(r4)
 400265c:	283e7d0e 	bge	r5,zero,4002054 <__alt_mem_onchip_memory2_0+0xfbffce94>
 4002660:	003eda06 	br	40021cc <__alt_mem_onchip_memory2_0+0xfbffd00c>
 4002664:	d9002e17 	ldw	r4,184(sp)
 4002668:	d9402a17 	ldw	r5,168(sp)
 400266c:	002d883a 	mov	r22,zero
 4002670:	20800104 	addi	r2,r4,4
 4002674:	25000017 	ldw	r20,0(r4)
 4002678:	283e2d0e 	bge	r5,zero,4001f30 <__alt_mem_onchip_memory2_0+0xfbffcd70>
 400267c:	003f6b06 	br	400242c <__alt_mem_onchip_memory2_0+0xfbffd26c>
 4002680:	d8c02e15 	stw	r3,184(sp)
 4002684:	0039883a 	mov	fp,zero
 4002688:	003ed206 	br	40021d4 <__alt_mem_onchip_memory2_0+0xfbffd014>
 400268c:	bc400043 	ldbu	r17,1(r23)
 4002690:	84000814 	ori	r16,r16,32
 4002694:	bdc00044 	addi	r23,r23,1
 4002698:	8c403fcc 	andi	r17,r17,255
 400269c:	8c40201c 	xori	r17,r17,128
 40026a0:	8c7fe004 	addi	r17,r17,-128
 40026a4:	0039e906 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 40026a8:	d9402d17 	ldw	r5,180(sp)
 40026ac:	d9801e04 	addi	r6,sp,120
 40026b0:	9809883a 	mov	r4,r19
 40026b4:	40065d40 	call	40065d4 <__ssprint_r>
 40026b8:	103a761e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 40026bc:	d8c02017 	ldw	r3,128(sp)
 40026c0:	da000404 	addi	r8,sp,16
 40026c4:	003d4a06 	br	4001bf0 <__alt_mem_onchip_memory2_0+0xfbffca30>
 40026c8:	d9002a17 	ldw	r4,168(sp)
 40026cc:	05bff7c4 	movi	r22,-33
 40026d0:	00bfffc4 	movi	r2,-1
 40026d4:	8dac703a 	and	r22,r17,r22
 40026d8:	20806a26 	beq	r4,r2,4002884 <___svfprintf_internal_r+0x1b8c>
 40026dc:	008011c4 	movi	r2,71
 40026e0:	b0813726 	beq	r22,r2,4002bc0 <___svfprintf_internal_r+0x1ec8>
 40026e4:	d9003717 	ldw	r4,220(sp)
 40026e8:	90c04014 	ori	r3,r18,256
 40026ec:	d8c02c15 	stw	r3,176(sp)
 40026f0:	20015d16 	blt	r4,zero,4002c68 <___svfprintf_internal_r+0x1f70>
 40026f4:	dd003717 	ldw	r20,220(sp)
 40026f8:	d8002905 	stb	zero,164(sp)
 40026fc:	00801984 	movi	r2,102
 4002700:	88814026 	beq	r17,r2,4002c04 <___svfprintf_internal_r+0x1f0c>
 4002704:	00801184 	movi	r2,70
 4002708:	88817126 	beq	r17,r2,4002cd0 <___svfprintf_internal_r+0x1fd8>
 400270c:	00801144 	movi	r2,69
 4002710:	b0816226 	beq	r22,r2,4002c9c <___svfprintf_internal_r+0x1fa4>
 4002714:	d8c02a17 	ldw	r3,168(sp)
 4002718:	d8802104 	addi	r2,sp,132
 400271c:	d8800315 	stw	r2,12(sp)
 4002720:	d9403617 	ldw	r5,216(sp)
 4002724:	d8802504 	addi	r2,sp,148
 4002728:	d8800215 	stw	r2,8(sp)
 400272c:	d8802604 	addi	r2,sp,152
 4002730:	d8c00015 	stw	r3,0(sp)
 4002734:	d8800115 	stw	r2,4(sp)
 4002738:	01c00084 	movi	r7,2
 400273c:	a00d883a 	mov	r6,r20
 4002740:	9809883a 	mov	r4,r19
 4002744:	d8c03d15 	stw	r3,244(sp)
 4002748:	da003e15 	stw	r8,248(sp)
 400274c:	40031dc0 	call	40031dc <_dtoa_r>
 4002750:	1021883a 	mov	r16,r2
 4002754:	008019c4 	movi	r2,103
 4002758:	d8c03d17 	ldw	r3,244(sp)
 400275c:	da003e17 	ldw	r8,248(sp)
 4002760:	8880e726 	beq	r17,r2,4002b00 <___svfprintf_internal_r+0x1e08>
 4002764:	008011c4 	movi	r2,71
 4002768:	8880d426 	beq	r17,r2,4002abc <___svfprintf_internal_r+0x1dc4>
 400276c:	80f9883a 	add	fp,r16,r3
 4002770:	d9003617 	ldw	r4,216(sp)
 4002774:	000d883a 	mov	r6,zero
 4002778:	000f883a 	mov	r7,zero
 400277c:	a00b883a 	mov	r5,r20
 4002780:	da003e15 	stw	r8,248(sp)
 4002784:	400a7840 	call	400a784 <__eqdf2>
 4002788:	da003e17 	ldw	r8,248(sp)
 400278c:	1000e426 	beq	r2,zero,4002b20 <___svfprintf_internal_r+0x1e28>
 4002790:	d8802117 	ldw	r2,132(sp)
 4002794:	1700062e 	bgeu	r2,fp,40027b0 <___svfprintf_internal_r+0x1ab8>
 4002798:	01000c04 	movi	r4,48
 400279c:	10c00044 	addi	r3,r2,1
 40027a0:	d8c02115 	stw	r3,132(sp)
 40027a4:	11000005 	stb	r4,0(r2)
 40027a8:	d8802117 	ldw	r2,132(sp)
 40027ac:	173ffb36 	bltu	r2,fp,400279c <__alt_mem_onchip_memory2_0+0xfbffd5dc>
 40027b0:	1405c83a 	sub	r2,r2,r16
 40027b4:	d8803315 	stw	r2,204(sp)
 40027b8:	008011c4 	movi	r2,71
 40027bc:	b080c526 	beq	r22,r2,4002ad4 <___svfprintf_internal_r+0x1ddc>
 40027c0:	00801944 	movi	r2,101
 40027c4:	1441d80e 	bge	r2,r17,4002f28 <___svfprintf_internal_r+0x2230>
 40027c8:	d8c02617 	ldw	r3,152(sp)
 40027cc:	00801984 	movi	r2,102
 40027d0:	d8c03215 	stw	r3,200(sp)
 40027d4:	88813426 	beq	r17,r2,4002ca8 <___svfprintf_internal_r+0x1fb0>
 40027d8:	d8c03217 	ldw	r3,200(sp)
 40027dc:	d9003317 	ldw	r4,204(sp)
 40027e0:	19012516 	blt	r3,r4,4002c78 <___svfprintf_internal_r+0x1f80>
 40027e4:	9480004c 	andi	r18,r18,1
 40027e8:	9001841e 	bne	r18,zero,4002dfc <___svfprintf_internal_r+0x2104>
 40027ec:	1805883a 	mov	r2,r3
 40027f0:	1801cb16 	blt	r3,zero,4002f20 <___svfprintf_internal_r+0x2228>
 40027f4:	d8c03217 	ldw	r3,200(sp)
 40027f8:	044019c4 	movi	r17,103
 40027fc:	d8c02b15 	stw	r3,172(sp)
 4002800:	df002907 	ldb	fp,164(sp)
 4002804:	e000a61e 	bne	fp,zero,4002aa0 <___svfprintf_internal_r+0x1da8>
 4002808:	df002783 	ldbu	fp,158(sp)
 400280c:	d8802915 	stw	r2,164(sp)
 4002810:	dc802c17 	ldw	r18,176(sp)
 4002814:	d8002a15 	stw	zero,168(sp)
 4002818:	003af506 	br	40013f0 <__alt_mem_onchip_memory2_0+0xfbffc230>
 400281c:	04010074 	movhi	r16,1025
 4002820:	84387004 	addi	r16,r16,-7744
 4002824:	003a7e06 	br	4001220 <__alt_mem_onchip_memory2_0+0xfbffc060>
 4002828:	d9003917 	ldw	r4,228(sp)
 400282c:	04001004 	movi	r16,64
 4002830:	800b883a 	mov	r5,r16
 4002834:	40049400 	call	4004940 <_malloc_r>
 4002838:	d9002d17 	ldw	r4,180(sp)
 400283c:	20800015 	stw	r2,0(r4)
 4002840:	20800415 	stw	r2,16(r4)
 4002844:	1001d026 	beq	r2,zero,4002f88 <___svfprintf_internal_r+0x2290>
 4002848:	d8802d17 	ldw	r2,180(sp)
 400284c:	14000515 	stw	r16,20(r2)
 4002850:	00394406 	br	4000d64 <__alt_mem_onchip_memory2_0+0xfbffbba4>
 4002854:	04010074 	movhi	r16,1025
 4002858:	84387204 	addi	r16,r16,-7736
 400285c:	003ee106 	br	40023e4 <__alt_mem_onchip_memory2_0+0xfbffd224>
 4002860:	d9402d17 	ldw	r5,180(sp)
 4002864:	d9801e04 	addi	r6,sp,120
 4002868:	9809883a 	mov	r4,r19
 400286c:	40065d40 	call	40065d4 <__ssprint_r>
 4002870:	103a081e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002874:	dc402617 	ldw	r17,152(sp)
 4002878:	d8c02017 	ldw	r3,128(sp)
 400287c:	da000404 	addi	r8,sp,16
 4002880:	003f4306 	br	4002590 <__alt_mem_onchip_memory2_0+0xfbffd3d0>
 4002884:	01400184 	movi	r5,6
 4002888:	d9402a15 	stw	r5,168(sp)
 400288c:	003f9506 	br	40026e4 <__alt_mem_onchip_memory2_0+0xfbffd524>
 4002890:	d8c02e17 	ldw	r3,184(sp)
 4002894:	1d000017 	ldw	r20,0(r3)
 4002898:	18c00104 	addi	r3,r3,4
 400289c:	d8c02e15 	stw	r3,184(sp)
 40028a0:	a02dd7fa 	srai	r22,r20,31
 40028a4:	b005883a 	mov	r2,r22
 40028a8:	003a7606 	br	4001284 <__alt_mem_onchip_memory2_0+0xfbffc0c4>
 40028ac:	d9002e17 	ldw	r4,184(sp)
 40028b0:	002d883a 	mov	r22,zero
 40028b4:	25000017 	ldw	r20,0(r4)
 40028b8:	21000104 	addi	r4,r4,4
 40028bc:	d9002e15 	stw	r4,184(sp)
 40028c0:	003bdd06 	br	4001838 <__alt_mem_onchip_memory2_0+0xfbffc678>
 40028c4:	9480100c 	andi	r18,r18,64
 40028c8:	90006e26 	beq	r18,zero,4002a84 <___svfprintf_internal_r+0x1d8c>
 40028cc:	d9402e17 	ldw	r5,184(sp)
 40028d0:	d8c02f17 	ldw	r3,188(sp)
 40028d4:	28800017 	ldw	r2,0(r5)
 40028d8:	29400104 	addi	r5,r5,4
 40028dc:	d9402e15 	stw	r5,184(sp)
 40028e0:	10c0000d 	sth	r3,0(r2)
 40028e4:	00392f06 	br	4000da4 <__alt_mem_onchip_memory2_0+0xfbffbbe4>
 40028e8:	d9402d17 	ldw	r5,180(sp)
 40028ec:	d9801e04 	addi	r6,sp,120
 40028f0:	9809883a 	mov	r4,r19
 40028f4:	40065d40 	call	40065d4 <__ssprint_r>
 40028f8:	1039e61e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 40028fc:	d8c02017 	ldw	r3,128(sp)
 4002900:	d8801f17 	ldw	r2,124(sp)
 4002904:	da000404 	addi	r8,sp,16
 4002908:	d9403317 	ldw	r5,204(sp)
 400290c:	10800044 	addi	r2,r2,1
 4002910:	44000015 	stw	r16,0(r8)
 4002914:	28c7883a 	add	r3,r5,r3
 4002918:	003b5506 	br	4001670 <__alt_mem_onchip_memory2_0+0xfbffc4b0>
 400291c:	8009883a 	mov	r4,r16
 4002920:	df003e15 	stw	fp,248(sp)
 4002924:	4000c600 	call	4000c60 <strlen>
 4002928:	d8802b15 	stw	r2,172(sp)
 400292c:	da003e17 	ldw	r8,248(sp)
 4002930:	103c160e 	bge	r2,zero,400198c <__alt_mem_onchip_memory2_0+0xfbffc7cc>
 4002934:	0005883a 	mov	r2,zero
 4002938:	003c1406 	br	400198c <__alt_mem_onchip_memory2_0+0xfbffc7cc>
 400293c:	00bfffc4 	movi	r2,-1
 4002940:	0039d906 	br	40010a8 <__alt_mem_onchip_memory2_0+0xfbffbee8>
 4002944:	01010074 	movhi	r4,1025
 4002948:	21388484 	addi	r4,r4,-7662
 400294c:	d9003515 	stw	r4,212(sp)
 4002950:	003ae406 	br	40014e4 <__alt_mem_onchip_memory2_0+0xfbffc324>
 4002954:	013fffc4 	movi	r4,-1
 4002958:	0039fa06 	br	4001144 <__alt_mem_onchip_memory2_0+0xfbffbf84>
 400295c:	d9402d17 	ldw	r5,180(sp)
 4002960:	d9801e04 	addi	r6,sp,120
 4002964:	9809883a 	mov	r4,r19
 4002968:	40065d40 	call	40065d4 <__ssprint_r>
 400296c:	1039c91e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002970:	d8c02017 	ldw	r3,128(sp)
 4002974:	da000404 	addi	r8,sp,16
 4002978:	003d8406 	br	4001f8c <__alt_mem_onchip_memory2_0+0xfbffcdcc>
 400297c:	0023883a 	mov	r17,zero
 4002980:	003d8306 	br	4001f90 <__alt_mem_onchip_memory2_0+0xfbffcdd0>
 4002984:	01010074 	movhi	r4,1025
 4002988:	21388084 	addi	r4,r4,-7678
 400298c:	d9002c15 	stw	r4,176(sp)
 4002990:	d9002c17 	ldw	r4,176(sp)
 4002994:	1c47883a 	add	r3,r3,r17
 4002998:	10800044 	addi	r2,r2,1
 400299c:	41000015 	stw	r4,0(r8)
 40029a0:	44400115 	stw	r17,4(r8)
 40029a4:	d8c02015 	stw	r3,128(sp)
 40029a8:	d8801f15 	stw	r2,124(sp)
 40029ac:	010001c4 	movi	r4,7
 40029b0:	20bfcd16 	blt	r4,r2,40028e8 <__alt_mem_onchip_memory2_0+0xfbffd728>
 40029b4:	42000204 	addi	r8,r8,8
 40029b8:	003fd306 	br	4002908 <__alt_mem_onchip_memory2_0+0xfbffd748>
 40029bc:	d9402d17 	ldw	r5,180(sp)
 40029c0:	d9801e04 	addi	r6,sp,120
 40029c4:	9809883a 	mov	r4,r19
 40029c8:	40065d40 	call	40065d4 <__ssprint_r>
 40029cc:	1039b11e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 40029d0:	d8802617 	ldw	r2,152(sp)
 40029d4:	d8c02017 	ldw	r3,128(sp)
 40029d8:	da000404 	addi	r8,sp,16
 40029dc:	003e1c06 	br	4002250 <__alt_mem_onchip_memory2_0+0xfbffd090>
 40029e0:	d8802a17 	ldw	r2,168(sp)
 40029e4:	00c00184 	movi	r3,6
 40029e8:	1880012e 	bgeu	r3,r2,40029f0 <___svfprintf_internal_r+0x1cf8>
 40029ec:	1805883a 	mov	r2,r3
 40029f0:	d8802b15 	stw	r2,172(sp)
 40029f4:	1000f316 	blt	r2,zero,4002dc4 <___svfprintf_internal_r+0x20cc>
 40029f8:	04010074 	movhi	r16,1025
 40029fc:	d8802915 	stw	r2,164(sp)
 4002a00:	dd002e15 	stw	r20,184(sp)
 4002a04:	d8002a15 	stw	zero,168(sp)
 4002a08:	d8003215 	stw	zero,200(sp)
 4002a0c:	84387e04 	addi	r16,r16,-7688
 4002a10:	0039883a 	mov	fp,zero
 4002a14:	003a7d06 	br	400140c <__alt_mem_onchip_memory2_0+0xfbffc24c>
 4002a18:	01010074 	movhi	r4,1025
 4002a1c:	21388484 	addi	r4,r4,-7662
 4002a20:	d9003515 	stw	r4,212(sp)
 4002a24:	003b3d06 	br	400171c <__alt_mem_onchip_memory2_0+0xfbffc55c>
 4002a28:	d9402d17 	ldw	r5,180(sp)
 4002a2c:	d9801e04 	addi	r6,sp,120
 4002a30:	9809883a 	mov	r4,r19
 4002a34:	40065d40 	call	40065d4 <__ssprint_r>
 4002a38:	1039961e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002a3c:	d8802617 	ldw	r2,152(sp)
 4002a40:	d9403317 	ldw	r5,204(sp)
 4002a44:	d8c02017 	ldw	r3,128(sp)
 4002a48:	da000404 	addi	r8,sp,16
 4002a4c:	2885c83a 	sub	r2,r5,r2
 4002a50:	003e1006 	br	4002294 <__alt_mem_onchip_memory2_0+0xfbffd0d4>
 4002a54:	00800044 	movi	r2,1
 4002a58:	10803fcc 	andi	r2,r2,255
 4002a5c:	00c00044 	movi	r3,1
 4002a60:	10fa1026 	beq	r2,r3,40012a4 <__alt_mem_onchip_memory2_0+0xfbffc0e4>
 4002a64:	00c00084 	movi	r3,2
 4002a68:	10fb8226 	beq	r2,r3,4001874 <__alt_mem_onchip_memory2_0+0xfbffc6b4>
 4002a6c:	003a4206 	br	4001378 <__alt_mem_onchip_memory2_0+0xfbffc1b8>
 4002a70:	0021883a 	mov	r16,zero
 4002a74:	003e0806 	br	4002298 <__alt_mem_onchip_memory2_0+0xfbffd0d8>
 4002a78:	07000b44 	movi	fp,45
 4002a7c:	df002785 	stb	fp,158(sp)
 4002a80:	0039e306 	br	4001210 <__alt_mem_onchip_memory2_0+0xfbffc050>
 4002a84:	d9002e17 	ldw	r4,184(sp)
 4002a88:	d9402f17 	ldw	r5,188(sp)
 4002a8c:	20800017 	ldw	r2,0(r4)
 4002a90:	21000104 	addi	r4,r4,4
 4002a94:	d9002e15 	stw	r4,184(sp)
 4002a98:	11400015 	stw	r5,0(r2)
 4002a9c:	0038c106 	br	4000da4 <__alt_mem_onchip_memory2_0+0xfbffbbe4>
 4002aa0:	00c00b44 	movi	r3,45
 4002aa4:	d8c02785 	stb	r3,158(sp)
 4002aa8:	d8802915 	stw	r2,164(sp)
 4002aac:	dc802c17 	ldw	r18,176(sp)
 4002ab0:	d8002a15 	stw	zero,168(sp)
 4002ab4:	07000b44 	movi	fp,45
 4002ab8:	003a5106 	br	4001400 <__alt_mem_onchip_memory2_0+0xfbffc240>
 4002abc:	9080004c 	andi	r2,r18,1
 4002ac0:	1000941e 	bne	r2,zero,4002d14 <___svfprintf_internal_r+0x201c>
 4002ac4:	d8802117 	ldw	r2,132(sp)
 4002ac8:	1405c83a 	sub	r2,r2,r16
 4002acc:	d8803315 	stw	r2,204(sp)
 4002ad0:	b441151e 	bne	r22,r17,4002f28 <___svfprintf_internal_r+0x2230>
 4002ad4:	dd802617 	ldw	r22,152(sp)
 4002ad8:	00bfff44 	movi	r2,-3
 4002adc:	b0801a16 	blt	r22,r2,4002b48 <___svfprintf_internal_r+0x1e50>
 4002ae0:	d9402a17 	ldw	r5,168(sp)
 4002ae4:	2d801816 	blt	r5,r22,4002b48 <___svfprintf_internal_r+0x1e50>
 4002ae8:	dd803215 	stw	r22,200(sp)
 4002aec:	003f3a06 	br	40027d8 <__alt_mem_onchip_memory2_0+0xfbffd618>
 4002af0:	1025883a 	mov	r18,r2
 4002af4:	0039883a 	mov	fp,zero
 4002af8:	00800084 	movi	r2,2
 4002afc:	003fd606 	br	4002a58 <__alt_mem_onchip_memory2_0+0xfbffd898>
 4002b00:	9080004c 	andi	r2,r18,1
 4002b04:	103f191e 	bne	r2,zero,400276c <__alt_mem_onchip_memory2_0+0xfbffd5ac>
 4002b08:	d8802117 	ldw	r2,132(sp)
 4002b0c:	003f2806 	br	40027b0 <__alt_mem_onchip_memory2_0+0xfbffd5f0>
 4002b10:	01010074 	movhi	r4,1025
 4002b14:	21388084 	addi	r4,r4,-7678
 4002b18:	d9002c15 	stw	r4,176(sp)
 4002b1c:	003c7c06 	br	4001d10 <__alt_mem_onchip_memory2_0+0xfbffcb50>
 4002b20:	e005883a 	mov	r2,fp
 4002b24:	003f2206 	br	40027b0 <__alt_mem_onchip_memory2_0+0xfbffd5f0>
 4002b28:	d9002a17 	ldw	r4,168(sp)
 4002b2c:	df002783 	ldbu	fp,158(sp)
 4002b30:	dd002e15 	stw	r20,184(sp)
 4002b34:	d9002915 	stw	r4,164(sp)
 4002b38:	d9002b15 	stw	r4,172(sp)
 4002b3c:	d8002a15 	stw	zero,168(sp)
 4002b40:	d8003215 	stw	zero,200(sp)
 4002b44:	003a2a06 	br	40013f0 <__alt_mem_onchip_memory2_0+0xfbffc230>
 4002b48:	8c7fff84 	addi	r17,r17,-2
 4002b4c:	b5bfffc4 	addi	r22,r22,-1
 4002b50:	dd802615 	stw	r22,152(sp)
 4002b54:	dc4022c5 	stb	r17,139(sp)
 4002b58:	b000c316 	blt	r22,zero,4002e68 <___svfprintf_internal_r+0x2170>
 4002b5c:	00800ac4 	movi	r2,43
 4002b60:	d8802305 	stb	r2,140(sp)
 4002b64:	00800244 	movi	r2,9
 4002b68:	15806e16 	blt	r2,r22,4002d24 <___svfprintf_internal_r+0x202c>
 4002b6c:	00800c04 	movi	r2,48
 4002b70:	b5800c04 	addi	r22,r22,48
 4002b74:	d8802345 	stb	r2,141(sp)
 4002b78:	dd802385 	stb	r22,142(sp)
 4002b7c:	d88023c4 	addi	r2,sp,143
 4002b80:	df0022c4 	addi	fp,sp,139
 4002b84:	d8c03317 	ldw	r3,204(sp)
 4002b88:	1739c83a 	sub	fp,r2,fp
 4002b8c:	d9003317 	ldw	r4,204(sp)
 4002b90:	e0c7883a 	add	r3,fp,r3
 4002b94:	df003b15 	stw	fp,236(sp)
 4002b98:	d8c02b15 	stw	r3,172(sp)
 4002b9c:	00800044 	movi	r2,1
 4002ba0:	1100b70e 	bge	r2,r4,4002e80 <___svfprintf_internal_r+0x2188>
 4002ba4:	d8c02b17 	ldw	r3,172(sp)
 4002ba8:	18c00044 	addi	r3,r3,1
 4002bac:	d8c02b15 	stw	r3,172(sp)
 4002bb0:	1805883a 	mov	r2,r3
 4002bb4:	1800b016 	blt	r3,zero,4002e78 <___svfprintf_internal_r+0x2180>
 4002bb8:	d8003215 	stw	zero,200(sp)
 4002bbc:	003f1006 	br	4002800 <__alt_mem_onchip_memory2_0+0xfbffd640>
 4002bc0:	d8802a17 	ldw	r2,168(sp)
 4002bc4:	103ec71e 	bne	r2,zero,40026e4 <__alt_mem_onchip_memory2_0+0xfbffd524>
 4002bc8:	dc002a15 	stw	r16,168(sp)
 4002bcc:	003ec506 	br	40026e4 <__alt_mem_onchip_memory2_0+0xfbffd524>
 4002bd0:	d9402d17 	ldw	r5,180(sp)
 4002bd4:	d9801e04 	addi	r6,sp,120
 4002bd8:	9809883a 	mov	r4,r19
 4002bdc:	40065d40 	call	40065d4 <__ssprint_r>
 4002be0:	10392c1e 	bne	r2,zero,4001094 <__alt_mem_onchip_memory2_0+0xfbffbed4>
 4002be4:	dc402617 	ldw	r17,152(sp)
 4002be8:	d8c02017 	ldw	r3,128(sp)
 4002bec:	d8801f17 	ldw	r2,124(sp)
 4002bf0:	da000404 	addi	r8,sp,16
 4002bf4:	003e7706 	br	40025d4 <__alt_mem_onchip_memory2_0+0xfbffd414>
 4002bf8:	182f883a 	mov	r23,r3
 4002bfc:	d8002a15 	stw	zero,168(sp)
 4002c00:	00389306 	br	4000e50 <__alt_mem_onchip_memory2_0+0xfbffbc90>
 4002c04:	d8c02a17 	ldw	r3,168(sp)
 4002c08:	d8802104 	addi	r2,sp,132
 4002c0c:	d8800315 	stw	r2,12(sp)
 4002c10:	d9403617 	ldw	r5,216(sp)
 4002c14:	d8802504 	addi	r2,sp,148
 4002c18:	d8800215 	stw	r2,8(sp)
 4002c1c:	d8802604 	addi	r2,sp,152
 4002c20:	d8c00015 	stw	r3,0(sp)
 4002c24:	9809883a 	mov	r4,r19
 4002c28:	d8800115 	stw	r2,4(sp)
 4002c2c:	01c000c4 	movi	r7,3
 4002c30:	a00d883a 	mov	r6,r20
 4002c34:	da003e15 	stw	r8,248(sp)
 4002c38:	40031dc0 	call	40031dc <_dtoa_r>
 4002c3c:	d9002a17 	ldw	r4,168(sp)
 4002c40:	da003e17 	ldw	r8,248(sp)
 4002c44:	1021883a 	mov	r16,r2
 4002c48:	1139883a 	add	fp,r2,r4
 4002c4c:	2007883a 	mov	r3,r4
 4002c50:	81000007 	ldb	r4,0(r16)
 4002c54:	00800c04 	movi	r2,48
 4002c58:	20806f26 	beq	r4,r2,4002e18 <___svfprintf_internal_r+0x2120>
 4002c5c:	d8c02617 	ldw	r3,152(sp)
 4002c60:	e0f9883a 	add	fp,fp,r3
 4002c64:	003ec206 	br	4002770 <__alt_mem_onchip_memory2_0+0xfbffd5b0>
 4002c68:	00c00b44 	movi	r3,45
 4002c6c:	2520003c 	xorhi	r20,r4,32768
 4002c70:	d8c02905 	stb	r3,164(sp)
 4002c74:	003ea106 	br	40026fc <__alt_mem_onchip_memory2_0+0xfbffd53c>
 4002c78:	d8c03217 	ldw	r3,200(sp)
 4002c7c:	00c0890e 	bge	zero,r3,4002ea4 <___svfprintf_internal_r+0x21ac>
 4002c80:	00800044 	movi	r2,1
 4002c84:	d9003317 	ldw	r4,204(sp)
 4002c88:	1105883a 	add	r2,r2,r4
 4002c8c:	d8802b15 	stw	r2,172(sp)
 4002c90:	10005f16 	blt	r2,zero,4002e10 <___svfprintf_internal_r+0x2118>
 4002c94:	044019c4 	movi	r17,103
 4002c98:	003ed906 	br	4002800 <__alt_mem_onchip_memory2_0+0xfbffd640>
 4002c9c:	d9002a17 	ldw	r4,168(sp)
 4002ca0:	20c00044 	addi	r3,r4,1
 4002ca4:	003e9c06 	br	4002718 <__alt_mem_onchip_memory2_0+0xfbffd558>
 4002ca8:	d9002a17 	ldw	r4,168(sp)
 4002cac:	00c0680e 	bge	zero,r3,4002e50 <___svfprintf_internal_r+0x2158>
 4002cb0:	2000461e 	bne	r4,zero,4002dcc <___svfprintf_internal_r+0x20d4>
 4002cb4:	9480004c 	andi	r18,r18,1
 4002cb8:	9000441e 	bne	r18,zero,4002dcc <___svfprintf_internal_r+0x20d4>
 4002cbc:	1805883a 	mov	r2,r3
 4002cc0:	1800a116 	blt	r3,zero,4002f48 <___svfprintf_internal_r+0x2250>
 4002cc4:	d8c03217 	ldw	r3,200(sp)
 4002cc8:	d8c02b15 	stw	r3,172(sp)
 4002ccc:	003ecc06 	br	4002800 <__alt_mem_onchip_memory2_0+0xfbffd640>
 4002cd0:	d9402a17 	ldw	r5,168(sp)
 4002cd4:	d8802104 	addi	r2,sp,132
 4002cd8:	d8800315 	stw	r2,12(sp)
 4002cdc:	d9400015 	stw	r5,0(sp)
 4002ce0:	d8802504 	addi	r2,sp,148
 4002ce4:	d9403617 	ldw	r5,216(sp)
 4002ce8:	d8800215 	stw	r2,8(sp)
 4002cec:	d8802604 	addi	r2,sp,152
 4002cf0:	d8800115 	stw	r2,4(sp)
 4002cf4:	01c000c4 	movi	r7,3
 4002cf8:	a00d883a 	mov	r6,r20
 4002cfc:	9809883a 	mov	r4,r19
 4002d00:	da003e15 	stw	r8,248(sp)
 4002d04:	40031dc0 	call	40031dc <_dtoa_r>
 4002d08:	d8c02a17 	ldw	r3,168(sp)
 4002d0c:	da003e17 	ldw	r8,248(sp)
 4002d10:	1021883a 	mov	r16,r2
 4002d14:	00801184 	movi	r2,70
 4002d18:	80f9883a 	add	fp,r16,r3
 4002d1c:	88bfcc26 	beq	r17,r2,4002c50 <__alt_mem_onchip_memory2_0+0xfbffda90>
 4002d20:	003e9306 	br	4002770 <__alt_mem_onchip_memory2_0+0xfbffd5b0>
 4002d24:	df0022c4 	addi	fp,sp,139
 4002d28:	dc002a15 	stw	r16,168(sp)
 4002d2c:	9829883a 	mov	r20,r19
 4002d30:	e021883a 	mov	r16,fp
 4002d34:	4027883a 	mov	r19,r8
 4002d38:	b009883a 	mov	r4,r22
 4002d3c:	01400284 	movi	r5,10
 4002d40:	40009c80 	call	40009c8 <__modsi3>
 4002d44:	10800c04 	addi	r2,r2,48
 4002d48:	843fffc4 	addi	r16,r16,-1
 4002d4c:	b009883a 	mov	r4,r22
 4002d50:	01400284 	movi	r5,10
 4002d54:	80800005 	stb	r2,0(r16)
 4002d58:	40009440 	call	4000944 <__divsi3>
 4002d5c:	102d883a 	mov	r22,r2
 4002d60:	00800244 	movi	r2,9
 4002d64:	15bff416 	blt	r2,r22,4002d38 <__alt_mem_onchip_memory2_0+0xfbffdb78>
 4002d68:	9811883a 	mov	r8,r19
 4002d6c:	b0800c04 	addi	r2,r22,48
 4002d70:	a027883a 	mov	r19,r20
 4002d74:	8029883a 	mov	r20,r16
 4002d78:	a17fffc4 	addi	r5,r20,-1
 4002d7c:	a0bfffc5 	stb	r2,-1(r20)
 4002d80:	dc002a17 	ldw	r16,168(sp)
 4002d84:	2f00782e 	bgeu	r5,fp,4002f68 <___svfprintf_internal_r+0x2270>
 4002d88:	d9c02384 	addi	r7,sp,142
 4002d8c:	3d0fc83a 	sub	r7,r7,r20
 4002d90:	d9002344 	addi	r4,sp,141
 4002d94:	e1cf883a 	add	r7,fp,r7
 4002d98:	00000106 	br	4002da0 <___svfprintf_internal_r+0x20a8>
 4002d9c:	28800003 	ldbu	r2,0(r5)
 4002da0:	20800005 	stb	r2,0(r4)
 4002da4:	21000044 	addi	r4,r4,1
 4002da8:	29400044 	addi	r5,r5,1
 4002dac:	21fffb1e 	bne	r4,r7,4002d9c <__alt_mem_onchip_memory2_0+0xfbffdbdc>
 4002db0:	d8802304 	addi	r2,sp,140
 4002db4:	1505c83a 	sub	r2,r2,r20
 4002db8:	d8c02344 	addi	r3,sp,141
 4002dbc:	1885883a 	add	r2,r3,r2
 4002dc0:	003f7006 	br	4002b84 <__alt_mem_onchip_memory2_0+0xfbffd9c4>
 4002dc4:	0005883a 	mov	r2,zero
 4002dc8:	003f0b06 	br	40029f8 <__alt_mem_onchip_memory2_0+0xfbffd838>
 4002dcc:	d9002a17 	ldw	r4,168(sp)
 4002dd0:	d8c03217 	ldw	r3,200(sp)
 4002dd4:	20800044 	addi	r2,r4,1
 4002dd8:	1885883a 	add	r2,r3,r2
 4002ddc:	d8802b15 	stw	r2,172(sp)
 4002de0:	103e870e 	bge	r2,zero,4002800 <__alt_mem_onchip_memory2_0+0xfbffd640>
 4002de4:	0005883a 	mov	r2,zero
 4002de8:	003e8506 	br	4002800 <__alt_mem_onchip_memory2_0+0xfbffd640>
 4002dec:	01010074 	movhi	r4,1025
 4002df0:	21388084 	addi	r4,r4,-7678
 4002df4:	d9002c15 	stw	r4,176(sp)
 4002df8:	003cc506 	br	4002110 <__alt_mem_onchip_memory2_0+0xfbffcf50>
 4002dfc:	d8c03217 	ldw	r3,200(sp)
 4002e00:	18c00044 	addi	r3,r3,1
 4002e04:	d8c02b15 	stw	r3,172(sp)
 4002e08:	1805883a 	mov	r2,r3
 4002e0c:	183fa10e 	bge	r3,zero,4002c94 <__alt_mem_onchip_memory2_0+0xfbffdad4>
 4002e10:	0005883a 	mov	r2,zero
 4002e14:	003f9f06 	br	4002c94 <__alt_mem_onchip_memory2_0+0xfbffdad4>
 4002e18:	d9003617 	ldw	r4,216(sp)
 4002e1c:	000d883a 	mov	r6,zero
 4002e20:	000f883a 	mov	r7,zero
 4002e24:	a00b883a 	mov	r5,r20
 4002e28:	d8c03d15 	stw	r3,244(sp)
 4002e2c:	da003e15 	stw	r8,248(sp)
 4002e30:	400a7840 	call	400a784 <__eqdf2>
 4002e34:	d8c03d17 	ldw	r3,244(sp)
 4002e38:	da003e17 	ldw	r8,248(sp)
 4002e3c:	103f8726 	beq	r2,zero,4002c5c <__alt_mem_onchip_memory2_0+0xfbffda9c>
 4002e40:	00800044 	movi	r2,1
 4002e44:	10c7c83a 	sub	r3,r2,r3
 4002e48:	d8c02615 	stw	r3,152(sp)
 4002e4c:	003f8406 	br	4002c60 <__alt_mem_onchip_memory2_0+0xfbffdaa0>
 4002e50:	20000e1e 	bne	r4,zero,4002e8c <___svfprintf_internal_r+0x2194>
 4002e54:	9480004c 	andi	r18,r18,1
 4002e58:	90000c1e 	bne	r18,zero,4002e8c <___svfprintf_internal_r+0x2194>
 4002e5c:	00800044 	movi	r2,1
 4002e60:	d8802b15 	stw	r2,172(sp)
 4002e64:	003e6606 	br	4002800 <__alt_mem_onchip_memory2_0+0xfbffd640>
 4002e68:	00800b44 	movi	r2,45
 4002e6c:	05adc83a 	sub	r22,zero,r22
 4002e70:	d8802305 	stb	r2,140(sp)
 4002e74:	003f3b06 	br	4002b64 <__alt_mem_onchip_memory2_0+0xfbffd9a4>
 4002e78:	0005883a 	mov	r2,zero
 4002e7c:	003f4e06 	br	4002bb8 <__alt_mem_onchip_memory2_0+0xfbffd9f8>
 4002e80:	90a4703a 	and	r18,r18,r2
 4002e84:	903f4a26 	beq	r18,zero,4002bb0 <__alt_mem_onchip_memory2_0+0xfbffd9f0>
 4002e88:	003f4606 	br	4002ba4 <__alt_mem_onchip_memory2_0+0xfbffd9e4>
 4002e8c:	d8c02a17 	ldw	r3,168(sp)
 4002e90:	18c00084 	addi	r3,r3,2
 4002e94:	d8c02b15 	stw	r3,172(sp)
 4002e98:	1805883a 	mov	r2,r3
 4002e9c:	183e580e 	bge	r3,zero,4002800 <__alt_mem_onchip_memory2_0+0xfbffd640>
 4002ea0:	003fd006 	br	4002de4 <__alt_mem_onchip_memory2_0+0xfbffdc24>
 4002ea4:	00800084 	movi	r2,2
 4002ea8:	10c5c83a 	sub	r2,r2,r3
 4002eac:	003f7506 	br	4002c84 <__alt_mem_onchip_memory2_0+0xfbffdac4>
 4002eb0:	d9402e17 	ldw	r5,184(sp)
 4002eb4:	d9002e17 	ldw	r4,184(sp)
 4002eb8:	bc400043 	ldbu	r17,1(r23)
 4002ebc:	29400017 	ldw	r5,0(r5)
 4002ec0:	20800104 	addi	r2,r4,4
 4002ec4:	d8802e15 	stw	r2,184(sp)
 4002ec8:	d9402a15 	stw	r5,168(sp)
 4002ecc:	182f883a 	mov	r23,r3
 4002ed0:	283df10e 	bge	r5,zero,4002698 <__alt_mem_onchip_memory2_0+0xfbffd4d8>
 4002ed4:	8c403fcc 	andi	r17,r17,255
 4002ed8:	017fffc4 	movi	r5,-1
 4002edc:	8c40201c 	xori	r17,r17,128
 4002ee0:	d9402a15 	stw	r5,168(sp)
 4002ee4:	8c7fe004 	addi	r17,r17,-128
 4002ee8:	0037d806 	br	4000e4c <__alt_mem_onchip_memory2_0+0xfbffbc8c>
 4002eec:	9080004c 	andi	r2,r18,1
 4002ef0:	0039883a 	mov	fp,zero
 4002ef4:	10000726 	beq	r2,zero,4002f14 <___svfprintf_internal_r+0x221c>
 4002ef8:	d8c02817 	ldw	r3,160(sp)
 4002efc:	dc001dc4 	addi	r16,sp,119
 4002f00:	00800c04 	movi	r2,48
 4002f04:	1c07c83a 	sub	r3,r3,r16
 4002f08:	d8801dc5 	stb	r2,119(sp)
 4002f0c:	d8c02b15 	stw	r3,172(sp)
 4002f10:	00393106 	br	40013d8 <__alt_mem_onchip_memory2_0+0xfbffc218>
 4002f14:	d8002b15 	stw	zero,172(sp)
 4002f18:	dc001e04 	addi	r16,sp,120
 4002f1c:	00392e06 	br	40013d8 <__alt_mem_onchip_memory2_0+0xfbffc218>
 4002f20:	0005883a 	mov	r2,zero
 4002f24:	003e3306 	br	40027f4 <__alt_mem_onchip_memory2_0+0xfbffd634>
 4002f28:	dd802617 	ldw	r22,152(sp)
 4002f2c:	003f0706 	br	4002b4c <__alt_mem_onchip_memory2_0+0xfbffd98c>
 4002f30:	d8c02b03 	ldbu	r3,172(sp)
 4002f34:	d8c02785 	stb	r3,158(sp)
 4002f38:	003a3506 	br	4001810 <__alt_mem_onchip_memory2_0+0xfbffc650>
 4002f3c:	d8c02b03 	ldbu	r3,172(sp)
 4002f40:	d8c02785 	stb	r3,158(sp)
 4002f44:	003a1706 	br	40017a4 <__alt_mem_onchip_memory2_0+0xfbffc5e4>
 4002f48:	0005883a 	mov	r2,zero
 4002f4c:	003f5d06 	br	4002cc4 <__alt_mem_onchip_memory2_0+0xfbffdb04>
 4002f50:	d8c02b03 	ldbu	r3,172(sp)
 4002f54:	d8c02785 	stb	r3,158(sp)
 4002f58:	0038f306 	br	4001328 <__alt_mem_onchip_memory2_0+0xfbffc168>
 4002f5c:	d8c02b03 	ldbu	r3,172(sp)
 4002f60:	d8c02785 	stb	r3,158(sp)
 4002f64:	0038be06 	br	4001260 <__alt_mem_onchip_memory2_0+0xfbffc0a0>
 4002f68:	d8802344 	addi	r2,sp,141
 4002f6c:	003f0506 	br	4002b84 <__alt_mem_onchip_memory2_0+0xfbffd9c4>
 4002f70:	d8c02b03 	ldbu	r3,172(sp)
 4002f74:	d8c02785 	stb	r3,158(sp)
 4002f78:	00388b06 	br	40011a8 <__alt_mem_onchip_memory2_0+0xfbffbfe8>
 4002f7c:	d8c02b03 	ldbu	r3,172(sp)
 4002f80:	d8c02785 	stb	r3,158(sp)
 4002f84:	003ad706 	br	4001ae4 <__alt_mem_onchip_memory2_0+0xfbffc924>
 4002f88:	d9403917 	ldw	r5,228(sp)
 4002f8c:	00800304 	movi	r2,12
 4002f90:	28800015 	stw	r2,0(r5)
 4002f94:	00bfffc4 	movi	r2,-1
 4002f98:	00384306 	br	40010a8 <__alt_mem_onchip_memory2_0+0xfbffbee8>
 4002f9c:	d8c02b03 	ldbu	r3,172(sp)
 4002fa0:	d8c02785 	stb	r3,158(sp)
 4002fa4:	003ab606 	br	4001a80 <__alt_mem_onchip_memory2_0+0xfbffc8c0>
 4002fa8:	d8c02b03 	ldbu	r3,172(sp)
 4002fac:	d8c02785 	stb	r3,158(sp)
 4002fb0:	003a8906 	br	40019d8 <__alt_mem_onchip_memory2_0+0xfbffc818>

04002fb4 <quorem>:
 4002fb4:	defff204 	addi	sp,sp,-56
 4002fb8:	ddc00b15 	stw	r23,44(sp)
 4002fbc:	20800417 	ldw	r2,16(r4)
 4002fc0:	2dc00417 	ldw	r23,16(r5)
 4002fc4:	dfc00d15 	stw	ra,52(sp)
 4002fc8:	df000c15 	stw	fp,48(sp)
 4002fcc:	dd800a15 	stw	r22,40(sp)
 4002fd0:	dd400915 	stw	r21,36(sp)
 4002fd4:	dd000815 	stw	r20,32(sp)
 4002fd8:	dcc00715 	stw	r19,28(sp)
 4002fdc:	dc800615 	stw	r18,24(sp)
 4002fe0:	dc400515 	stw	r17,20(sp)
 4002fe4:	dc000415 	stw	r16,16(sp)
 4002fe8:	15c07a16 	blt	r2,r23,40031d4 <quorem+0x220>
 4002fec:	bdffffc4 	addi	r23,r23,-1
 4002ff0:	bde9883a 	add	r20,r23,r23
 4002ff4:	28c00504 	addi	r3,r5,20
 4002ff8:	a529883a 	add	r20,r20,r20
 4002ffc:	1d39883a 	add	fp,r3,r20
 4003000:	24c00504 	addi	r19,r4,20
 4003004:	d9400215 	stw	r5,8(sp)
 4003008:	9d29883a 	add	r20,r19,r20
 400300c:	e1400017 	ldw	r5,0(fp)
 4003010:	d9000015 	stw	r4,0(sp)
 4003014:	a1000017 	ldw	r4,0(r20)
 4003018:	29400044 	addi	r5,r5,1
 400301c:	d8c00115 	stw	r3,4(sp)
 4003020:	dd000315 	stw	r20,12(sp)
 4003024:	4000a3c0 	call	4000a3c <__udivsi3>
 4003028:	1025883a 	mov	r18,r2
 400302c:	10003026 	beq	r2,zero,40030f0 <quorem+0x13c>
 4003030:	dc400117 	ldw	r17,4(sp)
 4003034:	9829883a 	mov	r20,r19
 4003038:	002d883a 	mov	r22,zero
 400303c:	0021883a 	mov	r16,zero
 4003040:	8d400017 	ldw	r21,0(r17)
 4003044:	900b883a 	mov	r5,r18
 4003048:	8c400104 	addi	r17,r17,4
 400304c:	a93fffcc 	andi	r4,r21,65535
 4003050:	4000af80 	call	4000af8 <__mulsi3>
 4003054:	a808d43a 	srli	r4,r21,16
 4003058:	900b883a 	mov	r5,r18
 400305c:	15ad883a 	add	r22,r2,r22
 4003060:	4000af80 	call	4000af8 <__mulsi3>
 4003064:	a1000017 	ldw	r4,0(r20)
 4003068:	b00cd43a 	srli	r6,r22,16
 400306c:	b0ffffcc 	andi	r3,r22,65535
 4003070:	217fffcc 	andi	r5,r4,65535
 4003074:	2c21883a 	add	r16,r5,r16
 4003078:	80c7c83a 	sub	r3,r16,r3
 400307c:	2008d43a 	srli	r4,r4,16
 4003080:	1185883a 	add	r2,r2,r6
 4003084:	1821d43a 	srai	r16,r3,16
 4003088:	117fffcc 	andi	r5,r2,65535
 400308c:	2149c83a 	sub	r4,r4,r5
 4003090:	2421883a 	add	r16,r4,r16
 4003094:	8008943a 	slli	r4,r16,16
 4003098:	18ffffcc 	andi	r3,r3,65535
 400309c:	102cd43a 	srli	r22,r2,16
 40030a0:	20c8b03a 	or	r4,r4,r3
 40030a4:	a1000015 	stw	r4,0(r20)
 40030a8:	8021d43a 	srai	r16,r16,16
 40030ac:	a5000104 	addi	r20,r20,4
 40030b0:	e47fe32e 	bgeu	fp,r17,4003040 <__alt_mem_onchip_memory2_0+0xfbffde80>
 40030b4:	d8c00317 	ldw	r3,12(sp)
 40030b8:	18800017 	ldw	r2,0(r3)
 40030bc:	10000c1e 	bne	r2,zero,40030f0 <quorem+0x13c>
 40030c0:	18bfff04 	addi	r2,r3,-4
 40030c4:	9880082e 	bgeu	r19,r2,40030e8 <quorem+0x134>
 40030c8:	18ffff17 	ldw	r3,-4(r3)
 40030cc:	18000326 	beq	r3,zero,40030dc <quorem+0x128>
 40030d0:	00000506 	br	40030e8 <quorem+0x134>
 40030d4:	10c00017 	ldw	r3,0(r2)
 40030d8:	1800031e 	bne	r3,zero,40030e8 <quorem+0x134>
 40030dc:	10bfff04 	addi	r2,r2,-4
 40030e0:	bdffffc4 	addi	r23,r23,-1
 40030e4:	98bffb36 	bltu	r19,r2,40030d4 <__alt_mem_onchip_memory2_0+0xfbffdf14>
 40030e8:	d8c00017 	ldw	r3,0(sp)
 40030ec:	1dc00415 	stw	r23,16(r3)
 40030f0:	d9400217 	ldw	r5,8(sp)
 40030f4:	d9000017 	ldw	r4,0(sp)
 40030f8:	4005cfc0 	call	4005cfc <__mcmp>
 40030fc:	10002816 	blt	r2,zero,40031a0 <quorem+0x1ec>
 4003100:	dc400117 	ldw	r17,4(sp)
 4003104:	94800044 	addi	r18,r18,1
 4003108:	980d883a 	mov	r6,r19
 400310c:	0007883a 	mov	r3,zero
 4003110:	31000017 	ldw	r4,0(r6)
 4003114:	89400017 	ldw	r5,0(r17)
 4003118:	31800104 	addi	r6,r6,4
 400311c:	20bfffcc 	andi	r2,r4,65535
 4003120:	10c7883a 	add	r3,r2,r3
 4003124:	28bfffcc 	andi	r2,r5,65535
 4003128:	1885c83a 	sub	r2,r3,r2
 400312c:	280ad43a 	srli	r5,r5,16
 4003130:	2008d43a 	srli	r4,r4,16
 4003134:	1007d43a 	srai	r3,r2,16
 4003138:	10bfffcc 	andi	r2,r2,65535
 400313c:	2149c83a 	sub	r4,r4,r5
 4003140:	20c9883a 	add	r4,r4,r3
 4003144:	200a943a 	slli	r5,r4,16
 4003148:	8c400104 	addi	r17,r17,4
 400314c:	2007d43a 	srai	r3,r4,16
 4003150:	2884b03a 	or	r2,r5,r2
 4003154:	30bfff15 	stw	r2,-4(r6)
 4003158:	e47fed2e 	bgeu	fp,r17,4003110 <__alt_mem_onchip_memory2_0+0xfbffdf50>
 400315c:	bdc5883a 	add	r2,r23,r23
 4003160:	1085883a 	add	r2,r2,r2
 4003164:	9887883a 	add	r3,r19,r2
 4003168:	18800017 	ldw	r2,0(r3)
 400316c:	10000c1e 	bne	r2,zero,40031a0 <quorem+0x1ec>
 4003170:	18bfff04 	addi	r2,r3,-4
 4003174:	9880082e 	bgeu	r19,r2,4003198 <quorem+0x1e4>
 4003178:	18ffff17 	ldw	r3,-4(r3)
 400317c:	18000326 	beq	r3,zero,400318c <quorem+0x1d8>
 4003180:	00000506 	br	4003198 <quorem+0x1e4>
 4003184:	10c00017 	ldw	r3,0(r2)
 4003188:	1800031e 	bne	r3,zero,4003198 <quorem+0x1e4>
 400318c:	10bfff04 	addi	r2,r2,-4
 4003190:	bdffffc4 	addi	r23,r23,-1
 4003194:	98bffb36 	bltu	r19,r2,4003184 <__alt_mem_onchip_memory2_0+0xfbffdfc4>
 4003198:	d8c00017 	ldw	r3,0(sp)
 400319c:	1dc00415 	stw	r23,16(r3)
 40031a0:	9005883a 	mov	r2,r18
 40031a4:	dfc00d17 	ldw	ra,52(sp)
 40031a8:	df000c17 	ldw	fp,48(sp)
 40031ac:	ddc00b17 	ldw	r23,44(sp)
 40031b0:	dd800a17 	ldw	r22,40(sp)
 40031b4:	dd400917 	ldw	r21,36(sp)
 40031b8:	dd000817 	ldw	r20,32(sp)
 40031bc:	dcc00717 	ldw	r19,28(sp)
 40031c0:	dc800617 	ldw	r18,24(sp)
 40031c4:	dc400517 	ldw	r17,20(sp)
 40031c8:	dc000417 	ldw	r16,16(sp)
 40031cc:	dec00e04 	addi	sp,sp,56
 40031d0:	f800283a 	ret
 40031d4:	0005883a 	mov	r2,zero
 40031d8:	003ff206 	br	40031a4 <__alt_mem_onchip_memory2_0+0xfbffdfe4>

040031dc <_dtoa_r>:
 40031dc:	20801017 	ldw	r2,64(r4)
 40031e0:	deffde04 	addi	sp,sp,-136
 40031e4:	df002015 	stw	fp,128(sp)
 40031e8:	dcc01b15 	stw	r19,108(sp)
 40031ec:	dc801a15 	stw	r18,104(sp)
 40031f0:	dc401915 	stw	r17,100(sp)
 40031f4:	dc001815 	stw	r16,96(sp)
 40031f8:	dfc02115 	stw	ra,132(sp)
 40031fc:	ddc01f15 	stw	r23,124(sp)
 4003200:	dd801e15 	stw	r22,120(sp)
 4003204:	dd401d15 	stw	r21,116(sp)
 4003208:	dd001c15 	stw	r20,112(sp)
 400320c:	d9c00315 	stw	r7,12(sp)
 4003210:	2039883a 	mov	fp,r4
 4003214:	3023883a 	mov	r17,r6
 4003218:	2825883a 	mov	r18,r5
 400321c:	dc002417 	ldw	r16,144(sp)
 4003220:	3027883a 	mov	r19,r6
 4003224:	10000826 	beq	r2,zero,4003248 <_dtoa_r+0x6c>
 4003228:	21801117 	ldw	r6,68(r4)
 400322c:	00c00044 	movi	r3,1
 4003230:	100b883a 	mov	r5,r2
 4003234:	1986983a 	sll	r3,r3,r6
 4003238:	11800115 	stw	r6,4(r2)
 400323c:	10c00215 	stw	r3,8(r2)
 4003240:	40054200 	call	4005420 <_Bfree>
 4003244:	e0001015 	stw	zero,64(fp)
 4003248:	88002e16 	blt	r17,zero,4003304 <_dtoa_r+0x128>
 400324c:	80000015 	stw	zero,0(r16)
 4003250:	889ffc2c 	andhi	r2,r17,32752
 4003254:	00dffc34 	movhi	r3,32752
 4003258:	10c01c26 	beq	r2,r3,40032cc <_dtoa_r+0xf0>
 400325c:	000d883a 	mov	r6,zero
 4003260:	000f883a 	mov	r7,zero
 4003264:	9009883a 	mov	r4,r18
 4003268:	980b883a 	mov	r5,r19
 400326c:	400a7840 	call	400a784 <__eqdf2>
 4003270:	10002b1e 	bne	r2,zero,4003320 <_dtoa_r+0x144>
 4003274:	d9c02317 	ldw	r7,140(sp)
 4003278:	00800044 	movi	r2,1
 400327c:	38800015 	stw	r2,0(r7)
 4003280:	d8802517 	ldw	r2,148(sp)
 4003284:	10019e26 	beq	r2,zero,4003900 <_dtoa_r+0x724>
 4003288:	d8c02517 	ldw	r3,148(sp)
 400328c:	00810074 	movhi	r2,1025
 4003290:	10b88044 	addi	r2,r2,-7679
 4003294:	18800015 	stw	r2,0(r3)
 4003298:	10bfffc4 	addi	r2,r2,-1
 400329c:	dfc02117 	ldw	ra,132(sp)
 40032a0:	df002017 	ldw	fp,128(sp)
 40032a4:	ddc01f17 	ldw	r23,124(sp)
 40032a8:	dd801e17 	ldw	r22,120(sp)
 40032ac:	dd401d17 	ldw	r21,116(sp)
 40032b0:	dd001c17 	ldw	r20,112(sp)
 40032b4:	dcc01b17 	ldw	r19,108(sp)
 40032b8:	dc801a17 	ldw	r18,104(sp)
 40032bc:	dc401917 	ldw	r17,100(sp)
 40032c0:	dc001817 	ldw	r16,96(sp)
 40032c4:	dec02204 	addi	sp,sp,136
 40032c8:	f800283a 	ret
 40032cc:	d8c02317 	ldw	r3,140(sp)
 40032d0:	0089c3c4 	movi	r2,9999
 40032d4:	18800015 	stw	r2,0(r3)
 40032d8:	90017726 	beq	r18,zero,40038b8 <_dtoa_r+0x6dc>
 40032dc:	00810074 	movhi	r2,1025
 40032e0:	10b88c04 	addi	r2,r2,-7632
 40032e4:	d9002517 	ldw	r4,148(sp)
 40032e8:	203fec26 	beq	r4,zero,400329c <__alt_mem_onchip_memory2_0+0xfbffe0dc>
 40032ec:	10c000c7 	ldb	r3,3(r2)
 40032f0:	1801781e 	bne	r3,zero,40038d4 <_dtoa_r+0x6f8>
 40032f4:	10c000c4 	addi	r3,r2,3
 40032f8:	d9802517 	ldw	r6,148(sp)
 40032fc:	30c00015 	stw	r3,0(r6)
 4003300:	003fe606 	br	400329c <__alt_mem_onchip_memory2_0+0xfbffe0dc>
 4003304:	04e00034 	movhi	r19,32768
 4003308:	9cffffc4 	addi	r19,r19,-1
 400330c:	00800044 	movi	r2,1
 4003310:	8ce6703a 	and	r19,r17,r19
 4003314:	80800015 	stw	r2,0(r16)
 4003318:	9823883a 	mov	r17,r19
 400331c:	003fcc06 	br	4003250 <__alt_mem_onchip_memory2_0+0xfbffe090>
 4003320:	d8800204 	addi	r2,sp,8
 4003324:	d8800015 	stw	r2,0(sp)
 4003328:	d9c00104 	addi	r7,sp,4
 400332c:	900b883a 	mov	r5,r18
 4003330:	980d883a 	mov	r6,r19
 4003334:	e009883a 	mov	r4,fp
 4003338:	8820d53a 	srli	r16,r17,20
 400333c:	40060c80 	call	40060c8 <__d2b>
 4003340:	d8800915 	stw	r2,36(sp)
 4003344:	8001651e 	bne	r16,zero,40038dc <_dtoa_r+0x700>
 4003348:	dd800217 	ldw	r22,8(sp)
 400334c:	dc000117 	ldw	r16,4(sp)
 4003350:	00800804 	movi	r2,32
 4003354:	b421883a 	add	r16,r22,r16
 4003358:	80c10c84 	addi	r3,r16,1074
 400335c:	10c2d10e 	bge	r2,r3,4003ea4 <_dtoa_r+0xcc8>
 4003360:	00801004 	movi	r2,64
 4003364:	81010484 	addi	r4,r16,1042
 4003368:	10c7c83a 	sub	r3,r2,r3
 400336c:	9108d83a 	srl	r4,r18,r4
 4003370:	88e2983a 	sll	r17,r17,r3
 4003374:	2448b03a 	or	r4,r4,r17
 4003378:	400bca00 	call	400bca0 <__floatunsidf>
 400337c:	017f8434 	movhi	r5,65040
 4003380:	01800044 	movi	r6,1
 4003384:	1009883a 	mov	r4,r2
 4003388:	194b883a 	add	r5,r3,r5
 400338c:	843fffc4 	addi	r16,r16,-1
 4003390:	d9801115 	stw	r6,68(sp)
 4003394:	000d883a 	mov	r6,zero
 4003398:	01cffe34 	movhi	r7,16376
 400339c:	400b2480 	call	400b248 <__subdf3>
 40033a0:	0198dbf4 	movhi	r6,25455
 40033a4:	01cff4f4 	movhi	r7,16339
 40033a8:	3190d844 	addi	r6,r6,17249
 40033ac:	39e1e9c4 	addi	r7,r7,-30809
 40033b0:	1009883a 	mov	r4,r2
 40033b4:	180b883a 	mov	r5,r3
 40033b8:	400a9dc0 	call	400a9dc <__muldf3>
 40033bc:	01a2d874 	movhi	r6,35681
 40033c0:	01cff1f4 	movhi	r7,16327
 40033c4:	31b22cc4 	addi	r6,r6,-14157
 40033c8:	39e28a04 	addi	r7,r7,-30168
 40033cc:	180b883a 	mov	r5,r3
 40033d0:	1009883a 	mov	r4,r2
 40033d4:	40095080 	call	4009508 <__adddf3>
 40033d8:	8009883a 	mov	r4,r16
 40033dc:	1029883a 	mov	r20,r2
 40033e0:	1823883a 	mov	r17,r3
 40033e4:	400bbc40 	call	400bbc4 <__floatsidf>
 40033e8:	019427f4 	movhi	r6,20639
 40033ec:	01cff4f4 	movhi	r7,16339
 40033f0:	319e7ec4 	addi	r6,r6,31227
 40033f4:	39d104c4 	addi	r7,r7,17427
 40033f8:	1009883a 	mov	r4,r2
 40033fc:	180b883a 	mov	r5,r3
 4003400:	400a9dc0 	call	400a9dc <__muldf3>
 4003404:	100d883a 	mov	r6,r2
 4003408:	180f883a 	mov	r7,r3
 400340c:	a009883a 	mov	r4,r20
 4003410:	880b883a 	mov	r5,r17
 4003414:	40095080 	call	4009508 <__adddf3>
 4003418:	1009883a 	mov	r4,r2
 400341c:	180b883a 	mov	r5,r3
 4003420:	1029883a 	mov	r20,r2
 4003424:	1823883a 	mov	r17,r3
 4003428:	400bb440 	call	400bb44 <__fixdfsi>
 400342c:	000d883a 	mov	r6,zero
 4003430:	000f883a 	mov	r7,zero
 4003434:	a009883a 	mov	r4,r20
 4003438:	880b883a 	mov	r5,r17
 400343c:	d8800515 	stw	r2,20(sp)
 4003440:	400a8e80 	call	400a8e8 <__ledf2>
 4003444:	10028716 	blt	r2,zero,4003e64 <_dtoa_r+0xc88>
 4003448:	d8c00517 	ldw	r3,20(sp)
 400344c:	00800584 	movi	r2,22
 4003450:	10c27536 	bltu	r2,r3,4003e28 <_dtoa_r+0xc4c>
 4003454:	180490fa 	slli	r2,r3,3
 4003458:	00c10074 	movhi	r3,1025
 400345c:	18f8a804 	addi	r3,r3,-7520
 4003460:	1885883a 	add	r2,r3,r2
 4003464:	11000017 	ldw	r4,0(r2)
 4003468:	11400117 	ldw	r5,4(r2)
 400346c:	900d883a 	mov	r6,r18
 4003470:	980f883a 	mov	r7,r19
 4003474:	400a80c0 	call	400a80c <__gedf2>
 4003478:	00828d0e 	bge	zero,r2,4003eb0 <_dtoa_r+0xcd4>
 400347c:	d9000517 	ldw	r4,20(sp)
 4003480:	d8000e15 	stw	zero,56(sp)
 4003484:	213fffc4 	addi	r4,r4,-1
 4003488:	d9000515 	stw	r4,20(sp)
 400348c:	b42dc83a 	sub	r22,r22,r16
 4003490:	b5bfffc4 	addi	r22,r22,-1
 4003494:	b0026f16 	blt	r22,zero,4003e54 <_dtoa_r+0xc78>
 4003498:	d8000815 	stw	zero,32(sp)
 400349c:	d9c00517 	ldw	r7,20(sp)
 40034a0:	38026416 	blt	r7,zero,4003e34 <_dtoa_r+0xc58>
 40034a4:	b1ed883a 	add	r22,r22,r7
 40034a8:	d9c00d15 	stw	r7,52(sp)
 40034ac:	d8000a15 	stw	zero,40(sp)
 40034b0:	d9800317 	ldw	r6,12(sp)
 40034b4:	00800244 	movi	r2,9
 40034b8:	11811436 	bltu	r2,r6,400390c <_dtoa_r+0x730>
 40034bc:	00800144 	movi	r2,5
 40034c0:	1184e10e 	bge	r2,r6,4004848 <_dtoa_r+0x166c>
 40034c4:	31bfff04 	addi	r6,r6,-4
 40034c8:	d9800315 	stw	r6,12(sp)
 40034cc:	0023883a 	mov	r17,zero
 40034d0:	d9800317 	ldw	r6,12(sp)
 40034d4:	008000c4 	movi	r2,3
 40034d8:	30836726 	beq	r6,r2,4004278 <_dtoa_r+0x109c>
 40034dc:	1183410e 	bge	r2,r6,40041e4 <_dtoa_r+0x1008>
 40034e0:	d9c00317 	ldw	r7,12(sp)
 40034e4:	00800104 	movi	r2,4
 40034e8:	38827c26 	beq	r7,r2,4003edc <_dtoa_r+0xd00>
 40034ec:	00800144 	movi	r2,5
 40034f0:	3884c41e 	bne	r7,r2,4004804 <_dtoa_r+0x1628>
 40034f4:	00800044 	movi	r2,1
 40034f8:	d8800b15 	stw	r2,44(sp)
 40034fc:	d8c00517 	ldw	r3,20(sp)
 4003500:	d9002217 	ldw	r4,136(sp)
 4003504:	1907883a 	add	r3,r3,r4
 4003508:	19800044 	addi	r6,r3,1
 400350c:	d8c00c15 	stw	r3,48(sp)
 4003510:	d9800615 	stw	r6,24(sp)
 4003514:	0183a40e 	bge	zero,r6,40043a8 <_dtoa_r+0x11cc>
 4003518:	d9800617 	ldw	r6,24(sp)
 400351c:	3021883a 	mov	r16,r6
 4003520:	e0001115 	stw	zero,68(fp)
 4003524:	008005c4 	movi	r2,23
 4003528:	1184c92e 	bgeu	r2,r6,4004850 <_dtoa_r+0x1674>
 400352c:	00c00044 	movi	r3,1
 4003530:	00800104 	movi	r2,4
 4003534:	1085883a 	add	r2,r2,r2
 4003538:	11000504 	addi	r4,r2,20
 400353c:	180b883a 	mov	r5,r3
 4003540:	18c00044 	addi	r3,r3,1
 4003544:	313ffb2e 	bgeu	r6,r4,4003534 <__alt_mem_onchip_memory2_0+0xfbffe374>
 4003548:	e1401115 	stw	r5,68(fp)
 400354c:	e009883a 	mov	r4,fp
 4003550:	40053780 	call	4005378 <_Balloc>
 4003554:	d8800715 	stw	r2,28(sp)
 4003558:	e0801015 	stw	r2,64(fp)
 400355c:	00800384 	movi	r2,14
 4003560:	1400f736 	bltu	r2,r16,4003940 <_dtoa_r+0x764>
 4003564:	8800f626 	beq	r17,zero,4003940 <_dtoa_r+0x764>
 4003568:	d9c00517 	ldw	r7,20(sp)
 400356c:	01c39a0e 	bge	zero,r7,40043d8 <_dtoa_r+0x11fc>
 4003570:	388003cc 	andi	r2,r7,15
 4003574:	100490fa 	slli	r2,r2,3
 4003578:	382bd13a 	srai	r21,r7,4
 400357c:	00c10074 	movhi	r3,1025
 4003580:	18f8a804 	addi	r3,r3,-7520
 4003584:	1885883a 	add	r2,r3,r2
 4003588:	a8c0040c 	andi	r3,r21,16
 400358c:	12400017 	ldw	r9,0(r2)
 4003590:	12000117 	ldw	r8,4(r2)
 4003594:	18037926 	beq	r3,zero,400437c <_dtoa_r+0x11a0>
 4003598:	00810074 	movhi	r2,1025
 400359c:	10b89e04 	addi	r2,r2,-7560
 40035a0:	11800817 	ldw	r6,32(r2)
 40035a4:	11c00917 	ldw	r7,36(r2)
 40035a8:	9009883a 	mov	r4,r18
 40035ac:	980b883a 	mov	r5,r19
 40035b0:	da001715 	stw	r8,92(sp)
 40035b4:	da401615 	stw	r9,88(sp)
 40035b8:	4009db40 	call	4009db4 <__divdf3>
 40035bc:	da001717 	ldw	r8,92(sp)
 40035c0:	da401617 	ldw	r9,88(sp)
 40035c4:	ad4003cc 	andi	r21,r21,15
 40035c8:	040000c4 	movi	r16,3
 40035cc:	1023883a 	mov	r17,r2
 40035d0:	1829883a 	mov	r20,r3
 40035d4:	a8001126 	beq	r21,zero,400361c <_dtoa_r+0x440>
 40035d8:	05c10074 	movhi	r23,1025
 40035dc:	bdf89e04 	addi	r23,r23,-7560
 40035e0:	4805883a 	mov	r2,r9
 40035e4:	4007883a 	mov	r3,r8
 40035e8:	a980004c 	andi	r6,r21,1
 40035ec:	1009883a 	mov	r4,r2
 40035f0:	a82bd07a 	srai	r21,r21,1
 40035f4:	180b883a 	mov	r5,r3
 40035f8:	30000426 	beq	r6,zero,400360c <_dtoa_r+0x430>
 40035fc:	b9800017 	ldw	r6,0(r23)
 4003600:	b9c00117 	ldw	r7,4(r23)
 4003604:	84000044 	addi	r16,r16,1
 4003608:	400a9dc0 	call	400a9dc <__muldf3>
 400360c:	bdc00204 	addi	r23,r23,8
 4003610:	a83ff51e 	bne	r21,zero,40035e8 <__alt_mem_onchip_memory2_0+0xfbffe428>
 4003614:	1013883a 	mov	r9,r2
 4003618:	1811883a 	mov	r8,r3
 400361c:	480d883a 	mov	r6,r9
 4003620:	400f883a 	mov	r7,r8
 4003624:	8809883a 	mov	r4,r17
 4003628:	a00b883a 	mov	r5,r20
 400362c:	4009db40 	call	4009db4 <__divdf3>
 4003630:	d8800f15 	stw	r2,60(sp)
 4003634:	d8c01015 	stw	r3,64(sp)
 4003638:	d8c00e17 	ldw	r3,56(sp)
 400363c:	18000626 	beq	r3,zero,4003658 <_dtoa_r+0x47c>
 4003640:	d9000f17 	ldw	r4,60(sp)
 4003644:	d9401017 	ldw	r5,64(sp)
 4003648:	000d883a 	mov	r6,zero
 400364c:	01cffc34 	movhi	r7,16368
 4003650:	400a8e80 	call	400a8e8 <__ledf2>
 4003654:	10040b16 	blt	r2,zero,4004684 <_dtoa_r+0x14a8>
 4003658:	8009883a 	mov	r4,r16
 400365c:	400bbc40 	call	400bbc4 <__floatsidf>
 4003660:	d9800f17 	ldw	r6,60(sp)
 4003664:	d9c01017 	ldw	r7,64(sp)
 4003668:	1009883a 	mov	r4,r2
 400366c:	180b883a 	mov	r5,r3
 4003670:	400a9dc0 	call	400a9dc <__muldf3>
 4003674:	000d883a 	mov	r6,zero
 4003678:	01d00734 	movhi	r7,16412
 400367c:	1009883a 	mov	r4,r2
 4003680:	180b883a 	mov	r5,r3
 4003684:	40095080 	call	4009508 <__adddf3>
 4003688:	1021883a 	mov	r16,r2
 400368c:	d8800617 	ldw	r2,24(sp)
 4003690:	047f3034 	movhi	r17,64704
 4003694:	1c63883a 	add	r17,r3,r17
 4003698:	10031826 	beq	r2,zero,40042fc <_dtoa_r+0x1120>
 400369c:	d8c00517 	ldw	r3,20(sp)
 40036a0:	db000617 	ldw	r12,24(sp)
 40036a4:	d8c01315 	stw	r3,76(sp)
 40036a8:	d9000b17 	ldw	r4,44(sp)
 40036ac:	20038f26 	beq	r4,zero,40044ec <_dtoa_r+0x1310>
 40036b0:	60bfffc4 	addi	r2,r12,-1
 40036b4:	100490fa 	slli	r2,r2,3
 40036b8:	00c10074 	movhi	r3,1025
 40036bc:	18f8a804 	addi	r3,r3,-7520
 40036c0:	1885883a 	add	r2,r3,r2
 40036c4:	11800017 	ldw	r6,0(r2)
 40036c8:	11c00117 	ldw	r7,4(r2)
 40036cc:	d8800717 	ldw	r2,28(sp)
 40036d0:	0009883a 	mov	r4,zero
 40036d4:	014ff834 	movhi	r5,16352
 40036d8:	db001615 	stw	r12,88(sp)
 40036dc:	15c00044 	addi	r23,r2,1
 40036e0:	4009db40 	call	4009db4 <__divdf3>
 40036e4:	800d883a 	mov	r6,r16
 40036e8:	880f883a 	mov	r7,r17
 40036ec:	1009883a 	mov	r4,r2
 40036f0:	180b883a 	mov	r5,r3
 40036f4:	400b2480 	call	400b248 <__subdf3>
 40036f8:	d9401017 	ldw	r5,64(sp)
 40036fc:	d9000f17 	ldw	r4,60(sp)
 4003700:	102b883a 	mov	r21,r2
 4003704:	d8c01215 	stw	r3,72(sp)
 4003708:	400bb440 	call	400bb44 <__fixdfsi>
 400370c:	1009883a 	mov	r4,r2
 4003710:	1029883a 	mov	r20,r2
 4003714:	400bbc40 	call	400bbc4 <__floatsidf>
 4003718:	d9000f17 	ldw	r4,60(sp)
 400371c:	d9401017 	ldw	r5,64(sp)
 4003720:	100d883a 	mov	r6,r2
 4003724:	180f883a 	mov	r7,r3
 4003728:	400b2480 	call	400b248 <__subdf3>
 400372c:	1823883a 	mov	r17,r3
 4003730:	d8c00717 	ldw	r3,28(sp)
 4003734:	d9401217 	ldw	r5,72(sp)
 4003738:	a2000c04 	addi	r8,r20,48
 400373c:	1021883a 	mov	r16,r2
 4003740:	1a000005 	stb	r8,0(r3)
 4003744:	800d883a 	mov	r6,r16
 4003748:	880f883a 	mov	r7,r17
 400374c:	a809883a 	mov	r4,r21
 4003750:	4029883a 	mov	r20,r8
 4003754:	400a80c0 	call	400a80c <__gedf2>
 4003758:	00841d16 	blt	zero,r2,40047d0 <_dtoa_r+0x15f4>
 400375c:	800d883a 	mov	r6,r16
 4003760:	880f883a 	mov	r7,r17
 4003764:	0009883a 	mov	r4,zero
 4003768:	014ffc34 	movhi	r5,16368
 400376c:	400b2480 	call	400b248 <__subdf3>
 4003770:	d9401217 	ldw	r5,72(sp)
 4003774:	100d883a 	mov	r6,r2
 4003778:	180f883a 	mov	r7,r3
 400377c:	a809883a 	mov	r4,r21
 4003780:	400a80c0 	call	400a80c <__gedf2>
 4003784:	db001617 	ldw	r12,88(sp)
 4003788:	00840e16 	blt	zero,r2,40047c4 <_dtoa_r+0x15e8>
 400378c:	00800044 	movi	r2,1
 4003790:	13006b0e 	bge	r2,r12,4003940 <_dtoa_r+0x764>
 4003794:	d9000717 	ldw	r4,28(sp)
 4003798:	dd800f15 	stw	r22,60(sp)
 400379c:	dcc01015 	stw	r19,64(sp)
 40037a0:	2319883a 	add	r12,r4,r12
 40037a4:	dcc01217 	ldw	r19,72(sp)
 40037a8:	602d883a 	mov	r22,r12
 40037ac:	dc801215 	stw	r18,72(sp)
 40037b0:	b825883a 	mov	r18,r23
 40037b4:	00000906 	br	40037dc <_dtoa_r+0x600>
 40037b8:	400b2480 	call	400b248 <__subdf3>
 40037bc:	a80d883a 	mov	r6,r21
 40037c0:	980f883a 	mov	r7,r19
 40037c4:	1009883a 	mov	r4,r2
 40037c8:	180b883a 	mov	r5,r3
 40037cc:	400a8e80 	call	400a8e8 <__ledf2>
 40037d0:	1003e816 	blt	r2,zero,4004774 <_dtoa_r+0x1598>
 40037d4:	b825883a 	mov	r18,r23
 40037d8:	bd83e926 	beq	r23,r22,4004780 <_dtoa_r+0x15a4>
 40037dc:	a809883a 	mov	r4,r21
 40037e0:	980b883a 	mov	r5,r19
 40037e4:	000d883a 	mov	r6,zero
 40037e8:	01d00934 	movhi	r7,16420
 40037ec:	400a9dc0 	call	400a9dc <__muldf3>
 40037f0:	000d883a 	mov	r6,zero
 40037f4:	01d00934 	movhi	r7,16420
 40037f8:	8009883a 	mov	r4,r16
 40037fc:	880b883a 	mov	r5,r17
 4003800:	102b883a 	mov	r21,r2
 4003804:	1827883a 	mov	r19,r3
 4003808:	400a9dc0 	call	400a9dc <__muldf3>
 400380c:	180b883a 	mov	r5,r3
 4003810:	1009883a 	mov	r4,r2
 4003814:	1821883a 	mov	r16,r3
 4003818:	1023883a 	mov	r17,r2
 400381c:	400bb440 	call	400bb44 <__fixdfsi>
 4003820:	1009883a 	mov	r4,r2
 4003824:	1029883a 	mov	r20,r2
 4003828:	400bbc40 	call	400bbc4 <__floatsidf>
 400382c:	8809883a 	mov	r4,r17
 4003830:	800b883a 	mov	r5,r16
 4003834:	100d883a 	mov	r6,r2
 4003838:	180f883a 	mov	r7,r3
 400383c:	400b2480 	call	400b248 <__subdf3>
 4003840:	a5000c04 	addi	r20,r20,48
 4003844:	a80d883a 	mov	r6,r21
 4003848:	980f883a 	mov	r7,r19
 400384c:	1009883a 	mov	r4,r2
 4003850:	180b883a 	mov	r5,r3
 4003854:	95000005 	stb	r20,0(r18)
 4003858:	1021883a 	mov	r16,r2
 400385c:	1823883a 	mov	r17,r3
 4003860:	400a8e80 	call	400a8e8 <__ledf2>
 4003864:	bdc00044 	addi	r23,r23,1
 4003868:	800d883a 	mov	r6,r16
 400386c:	880f883a 	mov	r7,r17
 4003870:	0009883a 	mov	r4,zero
 4003874:	014ffc34 	movhi	r5,16368
 4003878:	103fcf0e 	bge	r2,zero,40037b8 <__alt_mem_onchip_memory2_0+0xfbffe5f8>
 400387c:	d8c01317 	ldw	r3,76(sp)
 4003880:	d8c00515 	stw	r3,20(sp)
 4003884:	d9400917 	ldw	r5,36(sp)
 4003888:	e009883a 	mov	r4,fp
 400388c:	40054200 	call	4005420 <_Bfree>
 4003890:	d9000517 	ldw	r4,20(sp)
 4003894:	d9802317 	ldw	r6,140(sp)
 4003898:	d9c02517 	ldw	r7,148(sp)
 400389c:	b8000005 	stb	zero,0(r23)
 40038a0:	20800044 	addi	r2,r4,1
 40038a4:	30800015 	stw	r2,0(r6)
 40038a8:	3802aa26 	beq	r7,zero,4004354 <_dtoa_r+0x1178>
 40038ac:	3dc00015 	stw	r23,0(r7)
 40038b0:	d8800717 	ldw	r2,28(sp)
 40038b4:	003e7906 	br	400329c <__alt_mem_onchip_memory2_0+0xfbffe0dc>
 40038b8:	00800434 	movhi	r2,16
 40038bc:	10bfffc4 	addi	r2,r2,-1
 40038c0:	88a2703a 	and	r17,r17,r2
 40038c4:	883e851e 	bne	r17,zero,40032dc <__alt_mem_onchip_memory2_0+0xfbffe11c>
 40038c8:	00810074 	movhi	r2,1025
 40038cc:	10b88904 	addi	r2,r2,-7644
 40038d0:	003e8406 	br	40032e4 <__alt_mem_onchip_memory2_0+0xfbffe124>
 40038d4:	10c00204 	addi	r3,r2,8
 40038d8:	003e8706 	br	40032f8 <__alt_mem_onchip_memory2_0+0xfbffe138>
 40038dc:	01400434 	movhi	r5,16
 40038e0:	297fffc4 	addi	r5,r5,-1
 40038e4:	994a703a 	and	r5,r19,r5
 40038e8:	9009883a 	mov	r4,r18
 40038ec:	843f0044 	addi	r16,r16,-1023
 40038f0:	294ffc34 	orhi	r5,r5,16368
 40038f4:	dd800217 	ldw	r22,8(sp)
 40038f8:	d8001115 	stw	zero,68(sp)
 40038fc:	003ea506 	br	4003394 <__alt_mem_onchip_memory2_0+0xfbffe1d4>
 4003900:	00810074 	movhi	r2,1025
 4003904:	10b88004 	addi	r2,r2,-7680
 4003908:	003e6406 	br	400329c <__alt_mem_onchip_memory2_0+0xfbffe0dc>
 400390c:	e0001115 	stw	zero,68(fp)
 4003910:	000b883a 	mov	r5,zero
 4003914:	e009883a 	mov	r4,fp
 4003918:	40053780 	call	4005378 <_Balloc>
 400391c:	01bfffc4 	movi	r6,-1
 4003920:	01c00044 	movi	r7,1
 4003924:	d8800715 	stw	r2,28(sp)
 4003928:	d9800c15 	stw	r6,48(sp)
 400392c:	e0801015 	stw	r2,64(fp)
 4003930:	d8000315 	stw	zero,12(sp)
 4003934:	d9c00b15 	stw	r7,44(sp)
 4003938:	d9800615 	stw	r6,24(sp)
 400393c:	d8002215 	stw	zero,136(sp)
 4003940:	d8800117 	ldw	r2,4(sp)
 4003944:	10008916 	blt	r2,zero,4003b6c <_dtoa_r+0x990>
 4003948:	d9000517 	ldw	r4,20(sp)
 400394c:	00c00384 	movi	r3,14
 4003950:	19008616 	blt	r3,r4,4003b6c <_dtoa_r+0x990>
 4003954:	200490fa 	slli	r2,r4,3
 4003958:	00c10074 	movhi	r3,1025
 400395c:	d9802217 	ldw	r6,136(sp)
 4003960:	18f8a804 	addi	r3,r3,-7520
 4003964:	1885883a 	add	r2,r3,r2
 4003968:	14000017 	ldw	r16,0(r2)
 400396c:	14400117 	ldw	r17,4(r2)
 4003970:	30016316 	blt	r6,zero,4003f00 <_dtoa_r+0xd24>
 4003974:	800d883a 	mov	r6,r16
 4003978:	880f883a 	mov	r7,r17
 400397c:	9009883a 	mov	r4,r18
 4003980:	980b883a 	mov	r5,r19
 4003984:	4009db40 	call	4009db4 <__divdf3>
 4003988:	180b883a 	mov	r5,r3
 400398c:	1009883a 	mov	r4,r2
 4003990:	400bb440 	call	400bb44 <__fixdfsi>
 4003994:	1009883a 	mov	r4,r2
 4003998:	102b883a 	mov	r21,r2
 400399c:	400bbc40 	call	400bbc4 <__floatsidf>
 40039a0:	800d883a 	mov	r6,r16
 40039a4:	880f883a 	mov	r7,r17
 40039a8:	1009883a 	mov	r4,r2
 40039ac:	180b883a 	mov	r5,r3
 40039b0:	400a9dc0 	call	400a9dc <__muldf3>
 40039b4:	100d883a 	mov	r6,r2
 40039b8:	180f883a 	mov	r7,r3
 40039bc:	9009883a 	mov	r4,r18
 40039c0:	980b883a 	mov	r5,r19
 40039c4:	400b2480 	call	400b248 <__subdf3>
 40039c8:	d9c00717 	ldw	r7,28(sp)
 40039cc:	1009883a 	mov	r4,r2
 40039d0:	a8800c04 	addi	r2,r21,48
 40039d4:	38800005 	stb	r2,0(r7)
 40039d8:	3dc00044 	addi	r23,r7,1
 40039dc:	d9c00617 	ldw	r7,24(sp)
 40039e0:	01800044 	movi	r6,1
 40039e4:	180b883a 	mov	r5,r3
 40039e8:	2005883a 	mov	r2,r4
 40039ec:	39803826 	beq	r7,r6,4003ad0 <_dtoa_r+0x8f4>
 40039f0:	000d883a 	mov	r6,zero
 40039f4:	01d00934 	movhi	r7,16420
 40039f8:	400a9dc0 	call	400a9dc <__muldf3>
 40039fc:	000d883a 	mov	r6,zero
 4003a00:	000f883a 	mov	r7,zero
 4003a04:	1009883a 	mov	r4,r2
 4003a08:	180b883a 	mov	r5,r3
 4003a0c:	1025883a 	mov	r18,r2
 4003a10:	1827883a 	mov	r19,r3
 4003a14:	400a7840 	call	400a784 <__eqdf2>
 4003a18:	103f9a26 	beq	r2,zero,4003884 <__alt_mem_onchip_memory2_0+0xfbffe6c4>
 4003a1c:	d9c00617 	ldw	r7,24(sp)
 4003a20:	d8c00717 	ldw	r3,28(sp)
 4003a24:	b829883a 	mov	r20,r23
 4003a28:	38bfffc4 	addi	r2,r7,-1
 4003a2c:	18ad883a 	add	r22,r3,r2
 4003a30:	00000a06 	br	4003a5c <_dtoa_r+0x880>
 4003a34:	400a9dc0 	call	400a9dc <__muldf3>
 4003a38:	000d883a 	mov	r6,zero
 4003a3c:	000f883a 	mov	r7,zero
 4003a40:	1009883a 	mov	r4,r2
 4003a44:	180b883a 	mov	r5,r3
 4003a48:	1025883a 	mov	r18,r2
 4003a4c:	1827883a 	mov	r19,r3
 4003a50:	b829883a 	mov	r20,r23
 4003a54:	400a7840 	call	400a784 <__eqdf2>
 4003a58:	103f8a26 	beq	r2,zero,4003884 <__alt_mem_onchip_memory2_0+0xfbffe6c4>
 4003a5c:	800d883a 	mov	r6,r16
 4003a60:	880f883a 	mov	r7,r17
 4003a64:	9009883a 	mov	r4,r18
 4003a68:	980b883a 	mov	r5,r19
 4003a6c:	4009db40 	call	4009db4 <__divdf3>
 4003a70:	180b883a 	mov	r5,r3
 4003a74:	1009883a 	mov	r4,r2
 4003a78:	400bb440 	call	400bb44 <__fixdfsi>
 4003a7c:	1009883a 	mov	r4,r2
 4003a80:	102b883a 	mov	r21,r2
 4003a84:	400bbc40 	call	400bbc4 <__floatsidf>
 4003a88:	800d883a 	mov	r6,r16
 4003a8c:	880f883a 	mov	r7,r17
 4003a90:	1009883a 	mov	r4,r2
 4003a94:	180b883a 	mov	r5,r3
 4003a98:	400a9dc0 	call	400a9dc <__muldf3>
 4003a9c:	100d883a 	mov	r6,r2
 4003aa0:	180f883a 	mov	r7,r3
 4003aa4:	9009883a 	mov	r4,r18
 4003aa8:	980b883a 	mov	r5,r19
 4003aac:	400b2480 	call	400b248 <__subdf3>
 4003ab0:	aa000c04 	addi	r8,r21,48
 4003ab4:	a2000005 	stb	r8,0(r20)
 4003ab8:	000d883a 	mov	r6,zero
 4003abc:	01d00934 	movhi	r7,16420
 4003ac0:	1009883a 	mov	r4,r2
 4003ac4:	180b883a 	mov	r5,r3
 4003ac8:	a5c00044 	addi	r23,r20,1
 4003acc:	b53fd91e 	bne	r22,r20,4003a34 <__alt_mem_onchip_memory2_0+0xfbffe874>
 4003ad0:	100d883a 	mov	r6,r2
 4003ad4:	180f883a 	mov	r7,r3
 4003ad8:	1009883a 	mov	r4,r2
 4003adc:	180b883a 	mov	r5,r3
 4003ae0:	40095080 	call	4009508 <__adddf3>
 4003ae4:	100d883a 	mov	r6,r2
 4003ae8:	180f883a 	mov	r7,r3
 4003aec:	8009883a 	mov	r4,r16
 4003af0:	880b883a 	mov	r5,r17
 4003af4:	1027883a 	mov	r19,r2
 4003af8:	1825883a 	mov	r18,r3
 4003afc:	400a8e80 	call	400a8e8 <__ledf2>
 4003b00:	10000816 	blt	r2,zero,4003b24 <_dtoa_r+0x948>
 4003b04:	980d883a 	mov	r6,r19
 4003b08:	900f883a 	mov	r7,r18
 4003b0c:	8009883a 	mov	r4,r16
 4003b10:	880b883a 	mov	r5,r17
 4003b14:	400a7840 	call	400a784 <__eqdf2>
 4003b18:	103f5a1e 	bne	r2,zero,4003884 <__alt_mem_onchip_memory2_0+0xfbffe6c4>
 4003b1c:	ad40004c 	andi	r21,r21,1
 4003b20:	a83f5826 	beq	r21,zero,4003884 <__alt_mem_onchip_memory2_0+0xfbffe6c4>
 4003b24:	bd3fffc3 	ldbu	r20,-1(r23)
 4003b28:	b8bfffc4 	addi	r2,r23,-1
 4003b2c:	1007883a 	mov	r3,r2
 4003b30:	01400e44 	movi	r5,57
 4003b34:	d9800717 	ldw	r6,28(sp)
 4003b38:	00000506 	br	4003b50 <_dtoa_r+0x974>
 4003b3c:	18ffffc4 	addi	r3,r3,-1
 4003b40:	11824726 	beq	r2,r6,4004460 <_dtoa_r+0x1284>
 4003b44:	1d000003 	ldbu	r20,0(r3)
 4003b48:	102f883a 	mov	r23,r2
 4003b4c:	10bfffc4 	addi	r2,r2,-1
 4003b50:	a1003fcc 	andi	r4,r20,255
 4003b54:	2100201c 	xori	r4,r4,128
 4003b58:	213fe004 	addi	r4,r4,-128
 4003b5c:	217ff726 	beq	r4,r5,4003b3c <__alt_mem_onchip_memory2_0+0xfbffe97c>
 4003b60:	a2000044 	addi	r8,r20,1
 4003b64:	12000005 	stb	r8,0(r2)
 4003b68:	003f4606 	br	4003884 <__alt_mem_onchip_memory2_0+0xfbffe6c4>
 4003b6c:	d9000b17 	ldw	r4,44(sp)
 4003b70:	2000c826 	beq	r4,zero,4003e94 <_dtoa_r+0xcb8>
 4003b74:	d9800317 	ldw	r6,12(sp)
 4003b78:	00c00044 	movi	r3,1
 4003b7c:	1980f90e 	bge	r3,r6,4003f64 <_dtoa_r+0xd88>
 4003b80:	d8800617 	ldw	r2,24(sp)
 4003b84:	d8c00a17 	ldw	r3,40(sp)
 4003b88:	157fffc4 	addi	r21,r2,-1
 4003b8c:	1d41f316 	blt	r3,r21,400435c <_dtoa_r+0x1180>
 4003b90:	1d6bc83a 	sub	r21,r3,r21
 4003b94:	d9c00617 	ldw	r7,24(sp)
 4003b98:	3802aa16 	blt	r7,zero,4004644 <_dtoa_r+0x1468>
 4003b9c:	dd000817 	ldw	r20,32(sp)
 4003ba0:	d8800617 	ldw	r2,24(sp)
 4003ba4:	d8c00817 	ldw	r3,32(sp)
 4003ba8:	01400044 	movi	r5,1
 4003bac:	e009883a 	mov	r4,fp
 4003bb0:	1887883a 	add	r3,r3,r2
 4003bb4:	d8c00815 	stw	r3,32(sp)
 4003bb8:	b0ad883a 	add	r22,r22,r2
 4003bbc:	40057ac0 	call	40057ac <__i2b>
 4003bc0:	1023883a 	mov	r17,r2
 4003bc4:	a0000826 	beq	r20,zero,4003be8 <_dtoa_r+0xa0c>
 4003bc8:	0580070e 	bge	zero,r22,4003be8 <_dtoa_r+0xa0c>
 4003bcc:	a005883a 	mov	r2,r20
 4003bd0:	b500b916 	blt	r22,r20,4003eb8 <_dtoa_r+0xcdc>
 4003bd4:	d9000817 	ldw	r4,32(sp)
 4003bd8:	a0a9c83a 	sub	r20,r20,r2
 4003bdc:	b0adc83a 	sub	r22,r22,r2
 4003be0:	2089c83a 	sub	r4,r4,r2
 4003be4:	d9000815 	stw	r4,32(sp)
 4003be8:	d9800a17 	ldw	r6,40(sp)
 4003bec:	0181810e 	bge	zero,r6,40041f4 <_dtoa_r+0x1018>
 4003bf0:	d9c00b17 	ldw	r7,44(sp)
 4003bf4:	3800b326 	beq	r7,zero,4003ec4 <_dtoa_r+0xce8>
 4003bf8:	a800b226 	beq	r21,zero,4003ec4 <_dtoa_r+0xce8>
 4003bfc:	880b883a 	mov	r5,r17
 4003c00:	a80d883a 	mov	r6,r21
 4003c04:	e009883a 	mov	r4,fp
 4003c08:	4005a740 	call	4005a74 <__pow5mult>
 4003c0c:	d9800917 	ldw	r6,36(sp)
 4003c10:	100b883a 	mov	r5,r2
 4003c14:	e009883a 	mov	r4,fp
 4003c18:	1023883a 	mov	r17,r2
 4003c1c:	40057e80 	call	40057e8 <__multiply>
 4003c20:	1021883a 	mov	r16,r2
 4003c24:	d8800a17 	ldw	r2,40(sp)
 4003c28:	d9400917 	ldw	r5,36(sp)
 4003c2c:	e009883a 	mov	r4,fp
 4003c30:	1545c83a 	sub	r2,r2,r21
 4003c34:	d8800a15 	stw	r2,40(sp)
 4003c38:	40054200 	call	4005420 <_Bfree>
 4003c3c:	d8c00a17 	ldw	r3,40(sp)
 4003c40:	18009f1e 	bne	r3,zero,4003ec0 <_dtoa_r+0xce4>
 4003c44:	05c00044 	movi	r23,1
 4003c48:	e009883a 	mov	r4,fp
 4003c4c:	b80b883a 	mov	r5,r23
 4003c50:	40057ac0 	call	40057ac <__i2b>
 4003c54:	d9000d17 	ldw	r4,52(sp)
 4003c58:	102b883a 	mov	r21,r2
 4003c5c:	2000ce26 	beq	r4,zero,4003f98 <_dtoa_r+0xdbc>
 4003c60:	200d883a 	mov	r6,r4
 4003c64:	100b883a 	mov	r5,r2
 4003c68:	e009883a 	mov	r4,fp
 4003c6c:	4005a740 	call	4005a74 <__pow5mult>
 4003c70:	d9800317 	ldw	r6,12(sp)
 4003c74:	102b883a 	mov	r21,r2
 4003c78:	b981810e 	bge	r23,r6,4004280 <_dtoa_r+0x10a4>
 4003c7c:	0027883a 	mov	r19,zero
 4003c80:	a8800417 	ldw	r2,16(r21)
 4003c84:	05c00804 	movi	r23,32
 4003c88:	10800104 	addi	r2,r2,4
 4003c8c:	1085883a 	add	r2,r2,r2
 4003c90:	1085883a 	add	r2,r2,r2
 4003c94:	a885883a 	add	r2,r21,r2
 4003c98:	11000017 	ldw	r4,0(r2)
 4003c9c:	40056940 	call	4005694 <__hi0bits>
 4003ca0:	b885c83a 	sub	r2,r23,r2
 4003ca4:	1585883a 	add	r2,r2,r22
 4003ca8:	108007cc 	andi	r2,r2,31
 4003cac:	1000b326 	beq	r2,zero,4003f7c <_dtoa_r+0xda0>
 4003cb0:	00c00804 	movi	r3,32
 4003cb4:	1887c83a 	sub	r3,r3,r2
 4003cb8:	01000104 	movi	r4,4
 4003cbc:	20c2cd0e 	bge	r4,r3,40047f4 <_dtoa_r+0x1618>
 4003cc0:	00c00704 	movi	r3,28
 4003cc4:	1885c83a 	sub	r2,r3,r2
 4003cc8:	d8c00817 	ldw	r3,32(sp)
 4003ccc:	a0a9883a 	add	r20,r20,r2
 4003cd0:	b0ad883a 	add	r22,r22,r2
 4003cd4:	1887883a 	add	r3,r3,r2
 4003cd8:	d8c00815 	stw	r3,32(sp)
 4003cdc:	d9800817 	ldw	r6,32(sp)
 4003ce0:	0180040e 	bge	zero,r6,4003cf4 <_dtoa_r+0xb18>
 4003ce4:	800b883a 	mov	r5,r16
 4003ce8:	e009883a 	mov	r4,fp
 4003cec:	4005bb40 	call	4005bb4 <__lshift>
 4003cf0:	1021883a 	mov	r16,r2
 4003cf4:	0580050e 	bge	zero,r22,4003d0c <_dtoa_r+0xb30>
 4003cf8:	a80b883a 	mov	r5,r21
 4003cfc:	b00d883a 	mov	r6,r22
 4003d00:	e009883a 	mov	r4,fp
 4003d04:	4005bb40 	call	4005bb4 <__lshift>
 4003d08:	102b883a 	mov	r21,r2
 4003d0c:	d9c00e17 	ldw	r7,56(sp)
 4003d10:	3801211e 	bne	r7,zero,4004198 <_dtoa_r+0xfbc>
 4003d14:	d9800617 	ldw	r6,24(sp)
 4003d18:	0181380e 	bge	zero,r6,40041fc <_dtoa_r+0x1020>
 4003d1c:	d8c00b17 	ldw	r3,44(sp)
 4003d20:	1800ab1e 	bne	r3,zero,4003fd0 <_dtoa_r+0xdf4>
 4003d24:	dc800717 	ldw	r18,28(sp)
 4003d28:	dcc00617 	ldw	r19,24(sp)
 4003d2c:	9029883a 	mov	r20,r18
 4003d30:	00000206 	br	4003d3c <_dtoa_r+0xb60>
 4003d34:	40054480 	call	4005448 <__multadd>
 4003d38:	1021883a 	mov	r16,r2
 4003d3c:	a80b883a 	mov	r5,r21
 4003d40:	8009883a 	mov	r4,r16
 4003d44:	4002fb40 	call	4002fb4 <quorem>
 4003d48:	10800c04 	addi	r2,r2,48
 4003d4c:	90800005 	stb	r2,0(r18)
 4003d50:	94800044 	addi	r18,r18,1
 4003d54:	9507c83a 	sub	r3,r18,r20
 4003d58:	000f883a 	mov	r7,zero
 4003d5c:	01800284 	movi	r6,10
 4003d60:	800b883a 	mov	r5,r16
 4003d64:	e009883a 	mov	r4,fp
 4003d68:	1cfff216 	blt	r3,r19,4003d34 <__alt_mem_onchip_memory2_0+0xfbffeb74>
 4003d6c:	1011883a 	mov	r8,r2
 4003d70:	d8800617 	ldw	r2,24(sp)
 4003d74:	0082370e 	bge	zero,r2,4004654 <_dtoa_r+0x1478>
 4003d78:	d9000717 	ldw	r4,28(sp)
 4003d7c:	0025883a 	mov	r18,zero
 4003d80:	20af883a 	add	r23,r4,r2
 4003d84:	01800044 	movi	r6,1
 4003d88:	800b883a 	mov	r5,r16
 4003d8c:	e009883a 	mov	r4,fp
 4003d90:	da001715 	stw	r8,92(sp)
 4003d94:	4005bb40 	call	4005bb4 <__lshift>
 4003d98:	a80b883a 	mov	r5,r21
 4003d9c:	1009883a 	mov	r4,r2
 4003da0:	d8800915 	stw	r2,36(sp)
 4003da4:	4005cfc0 	call	4005cfc <__mcmp>
 4003da8:	da001717 	ldw	r8,92(sp)
 4003dac:	0081800e 	bge	zero,r2,40043b0 <_dtoa_r+0x11d4>
 4003db0:	b93fffc3 	ldbu	r4,-1(r23)
 4003db4:	b8bfffc4 	addi	r2,r23,-1
 4003db8:	1007883a 	mov	r3,r2
 4003dbc:	01800e44 	movi	r6,57
 4003dc0:	d9c00717 	ldw	r7,28(sp)
 4003dc4:	00000506 	br	4003ddc <_dtoa_r+0xc00>
 4003dc8:	18ffffc4 	addi	r3,r3,-1
 4003dcc:	11c12326 	beq	r2,r7,400425c <_dtoa_r+0x1080>
 4003dd0:	19000003 	ldbu	r4,0(r3)
 4003dd4:	102f883a 	mov	r23,r2
 4003dd8:	10bfffc4 	addi	r2,r2,-1
 4003ddc:	21403fcc 	andi	r5,r4,255
 4003de0:	2940201c 	xori	r5,r5,128
 4003de4:	297fe004 	addi	r5,r5,-128
 4003de8:	29bff726 	beq	r5,r6,4003dc8 <__alt_mem_onchip_memory2_0+0xfbffec08>
 4003dec:	21000044 	addi	r4,r4,1
 4003df0:	11000005 	stb	r4,0(r2)
 4003df4:	a80b883a 	mov	r5,r21
 4003df8:	e009883a 	mov	r4,fp
 4003dfc:	40054200 	call	4005420 <_Bfree>
 4003e00:	883ea026 	beq	r17,zero,4003884 <__alt_mem_onchip_memory2_0+0xfbffe6c4>
 4003e04:	90000426 	beq	r18,zero,4003e18 <_dtoa_r+0xc3c>
 4003e08:	94400326 	beq	r18,r17,4003e18 <_dtoa_r+0xc3c>
 4003e0c:	900b883a 	mov	r5,r18
 4003e10:	e009883a 	mov	r4,fp
 4003e14:	40054200 	call	4005420 <_Bfree>
 4003e18:	880b883a 	mov	r5,r17
 4003e1c:	e009883a 	mov	r4,fp
 4003e20:	40054200 	call	4005420 <_Bfree>
 4003e24:	003e9706 	br	4003884 <__alt_mem_onchip_memory2_0+0xfbffe6c4>
 4003e28:	01800044 	movi	r6,1
 4003e2c:	d9800e15 	stw	r6,56(sp)
 4003e30:	003d9606 	br	400348c <__alt_mem_onchip_memory2_0+0xfbffe2cc>
 4003e34:	d8800817 	ldw	r2,32(sp)
 4003e38:	d8c00517 	ldw	r3,20(sp)
 4003e3c:	d8000d15 	stw	zero,52(sp)
 4003e40:	10c5c83a 	sub	r2,r2,r3
 4003e44:	00c9c83a 	sub	r4,zero,r3
 4003e48:	d8800815 	stw	r2,32(sp)
 4003e4c:	d9000a15 	stw	r4,40(sp)
 4003e50:	003d9706 	br	40034b0 <__alt_mem_onchip_memory2_0+0xfbffe2f0>
 4003e54:	05adc83a 	sub	r22,zero,r22
 4003e58:	dd800815 	stw	r22,32(sp)
 4003e5c:	002d883a 	mov	r22,zero
 4003e60:	003d8e06 	br	400349c <__alt_mem_onchip_memory2_0+0xfbffe2dc>
 4003e64:	d9000517 	ldw	r4,20(sp)
 4003e68:	400bbc40 	call	400bbc4 <__floatsidf>
 4003e6c:	100d883a 	mov	r6,r2
 4003e70:	180f883a 	mov	r7,r3
 4003e74:	a009883a 	mov	r4,r20
 4003e78:	880b883a 	mov	r5,r17
 4003e7c:	400a7840 	call	400a784 <__eqdf2>
 4003e80:	103d7126 	beq	r2,zero,4003448 <__alt_mem_onchip_memory2_0+0xfbffe288>
 4003e84:	d9c00517 	ldw	r7,20(sp)
 4003e88:	39ffffc4 	addi	r7,r7,-1
 4003e8c:	d9c00515 	stw	r7,20(sp)
 4003e90:	003d6d06 	br	4003448 <__alt_mem_onchip_memory2_0+0xfbffe288>
 4003e94:	dd400a17 	ldw	r21,40(sp)
 4003e98:	dd000817 	ldw	r20,32(sp)
 4003e9c:	0023883a 	mov	r17,zero
 4003ea0:	003f4806 	br	4003bc4 <__alt_mem_onchip_memory2_0+0xfbffea04>
 4003ea4:	10e3c83a 	sub	r17,r2,r3
 4003ea8:	9448983a 	sll	r4,r18,r17
 4003eac:	003d3206 	br	4003378 <__alt_mem_onchip_memory2_0+0xfbffe1b8>
 4003eb0:	d8000e15 	stw	zero,56(sp)
 4003eb4:	003d7506 	br	400348c <__alt_mem_onchip_memory2_0+0xfbffe2cc>
 4003eb8:	b005883a 	mov	r2,r22
 4003ebc:	003f4506 	br	4003bd4 <__alt_mem_onchip_memory2_0+0xfbffea14>
 4003ec0:	dc000915 	stw	r16,36(sp)
 4003ec4:	d9800a17 	ldw	r6,40(sp)
 4003ec8:	d9400917 	ldw	r5,36(sp)
 4003ecc:	e009883a 	mov	r4,fp
 4003ed0:	4005a740 	call	4005a74 <__pow5mult>
 4003ed4:	1021883a 	mov	r16,r2
 4003ed8:	003f5a06 	br	4003c44 <__alt_mem_onchip_memory2_0+0xfbffea84>
 4003edc:	01c00044 	movi	r7,1
 4003ee0:	d9c00b15 	stw	r7,44(sp)
 4003ee4:	d8802217 	ldw	r2,136(sp)
 4003ee8:	0081280e 	bge	zero,r2,400438c <_dtoa_r+0x11b0>
 4003eec:	100d883a 	mov	r6,r2
 4003ef0:	1021883a 	mov	r16,r2
 4003ef4:	d8800c15 	stw	r2,48(sp)
 4003ef8:	d8800615 	stw	r2,24(sp)
 4003efc:	003d8806 	br	4003520 <__alt_mem_onchip_memory2_0+0xfbffe360>
 4003f00:	d8800617 	ldw	r2,24(sp)
 4003f04:	00be9b16 	blt	zero,r2,4003974 <__alt_mem_onchip_memory2_0+0xfbffe7b4>
 4003f08:	10010f1e 	bne	r2,zero,4004348 <_dtoa_r+0x116c>
 4003f0c:	880b883a 	mov	r5,r17
 4003f10:	000d883a 	mov	r6,zero
 4003f14:	01d00534 	movhi	r7,16404
 4003f18:	8009883a 	mov	r4,r16
 4003f1c:	400a9dc0 	call	400a9dc <__muldf3>
 4003f20:	900d883a 	mov	r6,r18
 4003f24:	980f883a 	mov	r7,r19
 4003f28:	1009883a 	mov	r4,r2
 4003f2c:	180b883a 	mov	r5,r3
 4003f30:	400a80c0 	call	400a80c <__gedf2>
 4003f34:	002b883a 	mov	r21,zero
 4003f38:	0023883a 	mov	r17,zero
 4003f3c:	1000bf16 	blt	r2,zero,400423c <_dtoa_r+0x1060>
 4003f40:	d9802217 	ldw	r6,136(sp)
 4003f44:	ddc00717 	ldw	r23,28(sp)
 4003f48:	018c303a 	nor	r6,zero,r6
 4003f4c:	d9800515 	stw	r6,20(sp)
 4003f50:	a80b883a 	mov	r5,r21
 4003f54:	e009883a 	mov	r4,fp
 4003f58:	40054200 	call	4005420 <_Bfree>
 4003f5c:	883e4926 	beq	r17,zero,4003884 <__alt_mem_onchip_memory2_0+0xfbffe6c4>
 4003f60:	003fad06 	br	4003e18 <__alt_mem_onchip_memory2_0+0xfbffec58>
 4003f64:	d9c01117 	ldw	r7,68(sp)
 4003f68:	3801bc26 	beq	r7,zero,400465c <_dtoa_r+0x1480>
 4003f6c:	10810cc4 	addi	r2,r2,1075
 4003f70:	dd400a17 	ldw	r21,40(sp)
 4003f74:	dd000817 	ldw	r20,32(sp)
 4003f78:	003f0a06 	br	4003ba4 <__alt_mem_onchip_memory2_0+0xfbffe9e4>
 4003f7c:	00800704 	movi	r2,28
 4003f80:	d9000817 	ldw	r4,32(sp)
 4003f84:	a0a9883a 	add	r20,r20,r2
 4003f88:	b0ad883a 	add	r22,r22,r2
 4003f8c:	2089883a 	add	r4,r4,r2
 4003f90:	d9000815 	stw	r4,32(sp)
 4003f94:	003f5106 	br	4003cdc <__alt_mem_onchip_memory2_0+0xfbffeb1c>
 4003f98:	d8c00317 	ldw	r3,12(sp)
 4003f9c:	b8c1fc0e 	bge	r23,r3,4004790 <_dtoa_r+0x15b4>
 4003fa0:	0027883a 	mov	r19,zero
 4003fa4:	b805883a 	mov	r2,r23
 4003fa8:	003f3e06 	br	4003ca4 <__alt_mem_onchip_memory2_0+0xfbffeae4>
 4003fac:	880b883a 	mov	r5,r17
 4003fb0:	e009883a 	mov	r4,fp
 4003fb4:	000f883a 	mov	r7,zero
 4003fb8:	01800284 	movi	r6,10
 4003fbc:	40054480 	call	4005448 <__multadd>
 4003fc0:	d9000c17 	ldw	r4,48(sp)
 4003fc4:	1023883a 	mov	r17,r2
 4003fc8:	0102040e 	bge	zero,r4,40047dc <_dtoa_r+0x1600>
 4003fcc:	d9000615 	stw	r4,24(sp)
 4003fd0:	0500050e 	bge	zero,r20,4003fe8 <_dtoa_r+0xe0c>
 4003fd4:	880b883a 	mov	r5,r17
 4003fd8:	a00d883a 	mov	r6,r20
 4003fdc:	e009883a 	mov	r4,fp
 4003fe0:	4005bb40 	call	4005bb4 <__lshift>
 4003fe4:	1023883a 	mov	r17,r2
 4003fe8:	9801241e 	bne	r19,zero,400447c <_dtoa_r+0x12a0>
 4003fec:	8829883a 	mov	r20,r17
 4003ff0:	d9000617 	ldw	r4,24(sp)
 4003ff4:	dcc00717 	ldw	r19,28(sp)
 4003ff8:	9480004c 	andi	r18,r18,1
 4003ffc:	20bfffc4 	addi	r2,r4,-1
 4004000:	9885883a 	add	r2,r19,r2
 4004004:	d8800415 	stw	r2,16(sp)
 4004008:	dc800615 	stw	r18,24(sp)
 400400c:	a80b883a 	mov	r5,r21
 4004010:	8009883a 	mov	r4,r16
 4004014:	4002fb40 	call	4002fb4 <quorem>
 4004018:	880b883a 	mov	r5,r17
 400401c:	8009883a 	mov	r4,r16
 4004020:	102f883a 	mov	r23,r2
 4004024:	4005cfc0 	call	4005cfc <__mcmp>
 4004028:	a80b883a 	mov	r5,r21
 400402c:	a00d883a 	mov	r6,r20
 4004030:	e009883a 	mov	r4,fp
 4004034:	102d883a 	mov	r22,r2
 4004038:	4005d5c0 	call	4005d5c <__mdiff>
 400403c:	1007883a 	mov	r3,r2
 4004040:	10800317 	ldw	r2,12(r2)
 4004044:	bc800c04 	addi	r18,r23,48
 4004048:	180b883a 	mov	r5,r3
 400404c:	10004e1e 	bne	r2,zero,4004188 <_dtoa_r+0xfac>
 4004050:	8009883a 	mov	r4,r16
 4004054:	d8c01615 	stw	r3,88(sp)
 4004058:	4005cfc0 	call	4005cfc <__mcmp>
 400405c:	d8c01617 	ldw	r3,88(sp)
 4004060:	e009883a 	mov	r4,fp
 4004064:	d8801615 	stw	r2,88(sp)
 4004068:	180b883a 	mov	r5,r3
 400406c:	40054200 	call	4005420 <_Bfree>
 4004070:	d8801617 	ldw	r2,88(sp)
 4004074:	1000041e 	bne	r2,zero,4004088 <_dtoa_r+0xeac>
 4004078:	d9800317 	ldw	r6,12(sp)
 400407c:	3000021e 	bne	r6,zero,4004088 <_dtoa_r+0xeac>
 4004080:	d8c00617 	ldw	r3,24(sp)
 4004084:	18003726 	beq	r3,zero,4004164 <_dtoa_r+0xf88>
 4004088:	b0002016 	blt	r22,zero,400410c <_dtoa_r+0xf30>
 400408c:	b000041e 	bne	r22,zero,40040a0 <_dtoa_r+0xec4>
 4004090:	d9000317 	ldw	r4,12(sp)
 4004094:	2000021e 	bne	r4,zero,40040a0 <_dtoa_r+0xec4>
 4004098:	d8c00617 	ldw	r3,24(sp)
 400409c:	18001b26 	beq	r3,zero,400410c <_dtoa_r+0xf30>
 40040a0:	00810716 	blt	zero,r2,40044c0 <_dtoa_r+0x12e4>
 40040a4:	d8c00417 	ldw	r3,16(sp)
 40040a8:	9d800044 	addi	r22,r19,1
 40040ac:	9c800005 	stb	r18,0(r19)
 40040b0:	b02f883a 	mov	r23,r22
 40040b4:	98c10626 	beq	r19,r3,40044d0 <_dtoa_r+0x12f4>
 40040b8:	800b883a 	mov	r5,r16
 40040bc:	000f883a 	mov	r7,zero
 40040c0:	01800284 	movi	r6,10
 40040c4:	e009883a 	mov	r4,fp
 40040c8:	40054480 	call	4005448 <__multadd>
 40040cc:	1021883a 	mov	r16,r2
 40040d0:	000f883a 	mov	r7,zero
 40040d4:	01800284 	movi	r6,10
 40040d8:	880b883a 	mov	r5,r17
 40040dc:	e009883a 	mov	r4,fp
 40040e0:	8d002526 	beq	r17,r20,4004178 <_dtoa_r+0xf9c>
 40040e4:	40054480 	call	4005448 <__multadd>
 40040e8:	a00b883a 	mov	r5,r20
 40040ec:	000f883a 	mov	r7,zero
 40040f0:	01800284 	movi	r6,10
 40040f4:	e009883a 	mov	r4,fp
 40040f8:	1023883a 	mov	r17,r2
 40040fc:	40054480 	call	4005448 <__multadd>
 4004100:	1029883a 	mov	r20,r2
 4004104:	b027883a 	mov	r19,r22
 4004108:	003fc006 	br	400400c <__alt_mem_onchip_memory2_0+0xfbffee4c>
 400410c:	9011883a 	mov	r8,r18
 4004110:	00800e0e 	bge	zero,r2,400414c <_dtoa_r+0xf70>
 4004114:	800b883a 	mov	r5,r16
 4004118:	01800044 	movi	r6,1
 400411c:	e009883a 	mov	r4,fp
 4004120:	da001715 	stw	r8,92(sp)
 4004124:	4005bb40 	call	4005bb4 <__lshift>
 4004128:	a80b883a 	mov	r5,r21
 400412c:	1009883a 	mov	r4,r2
 4004130:	1021883a 	mov	r16,r2
 4004134:	4005cfc0 	call	4005cfc <__mcmp>
 4004138:	da001717 	ldw	r8,92(sp)
 400413c:	0081960e 	bge	zero,r2,4004798 <_dtoa_r+0x15bc>
 4004140:	00800e44 	movi	r2,57
 4004144:	40817026 	beq	r8,r2,4004708 <_dtoa_r+0x152c>
 4004148:	ba000c44 	addi	r8,r23,49
 400414c:	8825883a 	mov	r18,r17
 4004150:	9dc00044 	addi	r23,r19,1
 4004154:	9a000005 	stb	r8,0(r19)
 4004158:	a023883a 	mov	r17,r20
 400415c:	dc000915 	stw	r16,36(sp)
 4004160:	003f2406 	br	4003df4 <__alt_mem_onchip_memory2_0+0xfbffec34>
 4004164:	00800e44 	movi	r2,57
 4004168:	9011883a 	mov	r8,r18
 400416c:	90816626 	beq	r18,r2,4004708 <_dtoa_r+0x152c>
 4004170:	05bff516 	blt	zero,r22,4004148 <__alt_mem_onchip_memory2_0+0xfbffef88>
 4004174:	003ff506 	br	400414c <__alt_mem_onchip_memory2_0+0xfbffef8c>
 4004178:	40054480 	call	4005448 <__multadd>
 400417c:	1023883a 	mov	r17,r2
 4004180:	1029883a 	mov	r20,r2
 4004184:	003fdf06 	br	4004104 <__alt_mem_onchip_memory2_0+0xfbffef44>
 4004188:	e009883a 	mov	r4,fp
 400418c:	40054200 	call	4005420 <_Bfree>
 4004190:	00800044 	movi	r2,1
 4004194:	003fbc06 	br	4004088 <__alt_mem_onchip_memory2_0+0xfbffeec8>
 4004198:	a80b883a 	mov	r5,r21
 400419c:	8009883a 	mov	r4,r16
 40041a0:	4005cfc0 	call	4005cfc <__mcmp>
 40041a4:	103edb0e 	bge	r2,zero,4003d14 <__alt_mem_onchip_memory2_0+0xfbffeb54>
 40041a8:	800b883a 	mov	r5,r16
 40041ac:	000f883a 	mov	r7,zero
 40041b0:	01800284 	movi	r6,10
 40041b4:	e009883a 	mov	r4,fp
 40041b8:	40054480 	call	4005448 <__multadd>
 40041bc:	1021883a 	mov	r16,r2
 40041c0:	d8800517 	ldw	r2,20(sp)
 40041c4:	d8c00b17 	ldw	r3,44(sp)
 40041c8:	10bfffc4 	addi	r2,r2,-1
 40041cc:	d8800515 	stw	r2,20(sp)
 40041d0:	183f761e 	bne	r3,zero,4003fac <__alt_mem_onchip_memory2_0+0xfbffedec>
 40041d4:	d9000c17 	ldw	r4,48(sp)
 40041d8:	0101730e 	bge	zero,r4,40047a8 <_dtoa_r+0x15cc>
 40041dc:	d9000615 	stw	r4,24(sp)
 40041e0:	003ed006 	br	4003d24 <__alt_mem_onchip_memory2_0+0xfbffeb64>
 40041e4:	00800084 	movi	r2,2
 40041e8:	3081861e 	bne	r6,r2,4004804 <_dtoa_r+0x1628>
 40041ec:	d8000b15 	stw	zero,44(sp)
 40041f0:	003f3c06 	br	4003ee4 <__alt_mem_onchip_memory2_0+0xfbffed24>
 40041f4:	dc000917 	ldw	r16,36(sp)
 40041f8:	003e9206 	br	4003c44 <__alt_mem_onchip_memory2_0+0xfbffea84>
 40041fc:	d9c00317 	ldw	r7,12(sp)
 4004200:	00800084 	movi	r2,2
 4004204:	11fec50e 	bge	r2,r7,4003d1c <__alt_mem_onchip_memory2_0+0xfbffeb5c>
 4004208:	d9000617 	ldw	r4,24(sp)
 400420c:	20013c1e 	bne	r4,zero,4004700 <_dtoa_r+0x1524>
 4004210:	a80b883a 	mov	r5,r21
 4004214:	000f883a 	mov	r7,zero
 4004218:	01800144 	movi	r6,5
 400421c:	e009883a 	mov	r4,fp
 4004220:	40054480 	call	4005448 <__multadd>
 4004224:	100b883a 	mov	r5,r2
 4004228:	8009883a 	mov	r4,r16
 400422c:	102b883a 	mov	r21,r2
 4004230:	4005cfc0 	call	4005cfc <__mcmp>
 4004234:	dc000915 	stw	r16,36(sp)
 4004238:	00bf410e 	bge	zero,r2,4003f40 <__alt_mem_onchip_memory2_0+0xfbffed80>
 400423c:	d9c00717 	ldw	r7,28(sp)
 4004240:	00800c44 	movi	r2,49
 4004244:	38800005 	stb	r2,0(r7)
 4004248:	d8800517 	ldw	r2,20(sp)
 400424c:	3dc00044 	addi	r23,r7,1
 4004250:	10800044 	addi	r2,r2,1
 4004254:	d8800515 	stw	r2,20(sp)
 4004258:	003f3d06 	br	4003f50 <__alt_mem_onchip_memory2_0+0xfbffed90>
 400425c:	d9800517 	ldw	r6,20(sp)
 4004260:	d9c00717 	ldw	r7,28(sp)
 4004264:	00800c44 	movi	r2,49
 4004268:	31800044 	addi	r6,r6,1
 400426c:	d9800515 	stw	r6,20(sp)
 4004270:	38800005 	stb	r2,0(r7)
 4004274:	003edf06 	br	4003df4 <__alt_mem_onchip_memory2_0+0xfbffec34>
 4004278:	d8000b15 	stw	zero,44(sp)
 400427c:	003c9f06 	br	40034fc <__alt_mem_onchip_memory2_0+0xfbffe33c>
 4004280:	903e7e1e 	bne	r18,zero,4003c7c <__alt_mem_onchip_memory2_0+0xfbffeabc>
 4004284:	00800434 	movhi	r2,16
 4004288:	10bfffc4 	addi	r2,r2,-1
 400428c:	9884703a 	and	r2,r19,r2
 4004290:	1000ea1e 	bne	r2,zero,400463c <_dtoa_r+0x1460>
 4004294:	9cdffc2c 	andhi	r19,r19,32752
 4004298:	9800e826 	beq	r19,zero,400463c <_dtoa_r+0x1460>
 400429c:	d9c00817 	ldw	r7,32(sp)
 40042a0:	b5800044 	addi	r22,r22,1
 40042a4:	04c00044 	movi	r19,1
 40042a8:	39c00044 	addi	r7,r7,1
 40042ac:	d9c00815 	stw	r7,32(sp)
 40042b0:	d8800d17 	ldw	r2,52(sp)
 40042b4:	103e721e 	bne	r2,zero,4003c80 <__alt_mem_onchip_memory2_0+0xfbffeac0>
 40042b8:	00800044 	movi	r2,1
 40042bc:	003e7906 	br	4003ca4 <__alt_mem_onchip_memory2_0+0xfbffeae4>
 40042c0:	8009883a 	mov	r4,r16
 40042c4:	400bbc40 	call	400bbc4 <__floatsidf>
 40042c8:	d9800f17 	ldw	r6,60(sp)
 40042cc:	d9c01017 	ldw	r7,64(sp)
 40042d0:	1009883a 	mov	r4,r2
 40042d4:	180b883a 	mov	r5,r3
 40042d8:	400a9dc0 	call	400a9dc <__muldf3>
 40042dc:	000d883a 	mov	r6,zero
 40042e0:	01d00734 	movhi	r7,16412
 40042e4:	1009883a 	mov	r4,r2
 40042e8:	180b883a 	mov	r5,r3
 40042ec:	40095080 	call	4009508 <__adddf3>
 40042f0:	047f3034 	movhi	r17,64704
 40042f4:	1021883a 	mov	r16,r2
 40042f8:	1c63883a 	add	r17,r3,r17
 40042fc:	d9000f17 	ldw	r4,60(sp)
 4004300:	d9401017 	ldw	r5,64(sp)
 4004304:	000d883a 	mov	r6,zero
 4004308:	01d00534 	movhi	r7,16404
 400430c:	400b2480 	call	400b248 <__subdf3>
 4004310:	800d883a 	mov	r6,r16
 4004314:	880f883a 	mov	r7,r17
 4004318:	1009883a 	mov	r4,r2
 400431c:	180b883a 	mov	r5,r3
 4004320:	102b883a 	mov	r21,r2
 4004324:	1829883a 	mov	r20,r3
 4004328:	400a80c0 	call	400a80c <__gedf2>
 400432c:	00806c16 	blt	zero,r2,40044e0 <_dtoa_r+0x1304>
 4004330:	89e0003c 	xorhi	r7,r17,32768
 4004334:	800d883a 	mov	r6,r16
 4004338:	a809883a 	mov	r4,r21
 400433c:	a00b883a 	mov	r5,r20
 4004340:	400a8e80 	call	400a8e8 <__ledf2>
 4004344:	103d7e0e 	bge	r2,zero,4003940 <__alt_mem_onchip_memory2_0+0xfbffe780>
 4004348:	002b883a 	mov	r21,zero
 400434c:	0023883a 	mov	r17,zero
 4004350:	003efb06 	br	4003f40 <__alt_mem_onchip_memory2_0+0xfbffed80>
 4004354:	d8800717 	ldw	r2,28(sp)
 4004358:	003bd006 	br	400329c <__alt_mem_onchip_memory2_0+0xfbffe0dc>
 400435c:	d9000a17 	ldw	r4,40(sp)
 4004360:	d9800d17 	ldw	r6,52(sp)
 4004364:	dd400a15 	stw	r21,40(sp)
 4004368:	a905c83a 	sub	r2,r21,r4
 400436c:	308d883a 	add	r6,r6,r2
 4004370:	d9800d15 	stw	r6,52(sp)
 4004374:	002b883a 	mov	r21,zero
 4004378:	003e0606 	br	4003b94 <__alt_mem_onchip_memory2_0+0xfbffe9d4>
 400437c:	9023883a 	mov	r17,r18
 4004380:	9829883a 	mov	r20,r19
 4004384:	04000084 	movi	r16,2
 4004388:	003c9206 	br	40035d4 <__alt_mem_onchip_memory2_0+0xfbffe414>
 400438c:	04000044 	movi	r16,1
 4004390:	dc000c15 	stw	r16,48(sp)
 4004394:	dc000615 	stw	r16,24(sp)
 4004398:	dc002215 	stw	r16,136(sp)
 400439c:	e0001115 	stw	zero,68(fp)
 40043a0:	000b883a 	mov	r5,zero
 40043a4:	003c6906 	br	400354c <__alt_mem_onchip_memory2_0+0xfbffe38c>
 40043a8:	3021883a 	mov	r16,r6
 40043ac:	003ffb06 	br	400439c <__alt_mem_onchip_memory2_0+0xfbfff1dc>
 40043b0:	1000021e 	bne	r2,zero,40043bc <_dtoa_r+0x11e0>
 40043b4:	4200004c 	andi	r8,r8,1
 40043b8:	403e7d1e 	bne	r8,zero,4003db0 <__alt_mem_onchip_memory2_0+0xfbffebf0>
 40043bc:	01000c04 	movi	r4,48
 40043c0:	00000106 	br	40043c8 <_dtoa_r+0x11ec>
 40043c4:	102f883a 	mov	r23,r2
 40043c8:	b8bfffc4 	addi	r2,r23,-1
 40043cc:	10c00007 	ldb	r3,0(r2)
 40043d0:	193ffc26 	beq	r3,r4,40043c4 <__alt_mem_onchip_memory2_0+0xfbfff204>
 40043d4:	003e8706 	br	4003df4 <__alt_mem_onchip_memory2_0+0xfbffec34>
 40043d8:	d8800517 	ldw	r2,20(sp)
 40043dc:	00a3c83a 	sub	r17,zero,r2
 40043e0:	8800a426 	beq	r17,zero,4004674 <_dtoa_r+0x1498>
 40043e4:	888003cc 	andi	r2,r17,15
 40043e8:	100490fa 	slli	r2,r2,3
 40043ec:	00c10074 	movhi	r3,1025
 40043f0:	18f8a804 	addi	r3,r3,-7520
 40043f4:	1885883a 	add	r2,r3,r2
 40043f8:	11800017 	ldw	r6,0(r2)
 40043fc:	11c00117 	ldw	r7,4(r2)
 4004400:	9009883a 	mov	r4,r18
 4004404:	980b883a 	mov	r5,r19
 4004408:	8823d13a 	srai	r17,r17,4
 400440c:	400a9dc0 	call	400a9dc <__muldf3>
 4004410:	d8800f15 	stw	r2,60(sp)
 4004414:	d8c01015 	stw	r3,64(sp)
 4004418:	8800e826 	beq	r17,zero,40047bc <_dtoa_r+0x15e0>
 400441c:	05010074 	movhi	r20,1025
 4004420:	a5389e04 	addi	r20,r20,-7560
 4004424:	04000084 	movi	r16,2
 4004428:	8980004c 	andi	r6,r17,1
 400442c:	1009883a 	mov	r4,r2
 4004430:	8823d07a 	srai	r17,r17,1
 4004434:	180b883a 	mov	r5,r3
 4004438:	30000426 	beq	r6,zero,400444c <_dtoa_r+0x1270>
 400443c:	a1800017 	ldw	r6,0(r20)
 4004440:	a1c00117 	ldw	r7,4(r20)
 4004444:	84000044 	addi	r16,r16,1
 4004448:	400a9dc0 	call	400a9dc <__muldf3>
 400444c:	a5000204 	addi	r20,r20,8
 4004450:	883ff51e 	bne	r17,zero,4004428 <__alt_mem_onchip_memory2_0+0xfbfff268>
 4004454:	d8800f15 	stw	r2,60(sp)
 4004458:	d8c01015 	stw	r3,64(sp)
 400445c:	003c7606 	br	4003638 <__alt_mem_onchip_memory2_0+0xfbffe478>
 4004460:	00c00c04 	movi	r3,48
 4004464:	10c00005 	stb	r3,0(r2)
 4004468:	d8c00517 	ldw	r3,20(sp)
 400446c:	bd3fffc3 	ldbu	r20,-1(r23)
 4004470:	18c00044 	addi	r3,r3,1
 4004474:	d8c00515 	stw	r3,20(sp)
 4004478:	003db906 	br	4003b60 <__alt_mem_onchip_memory2_0+0xfbffe9a0>
 400447c:	89400117 	ldw	r5,4(r17)
 4004480:	e009883a 	mov	r4,fp
 4004484:	40053780 	call	4005378 <_Balloc>
 4004488:	89800417 	ldw	r6,16(r17)
 400448c:	89400304 	addi	r5,r17,12
 4004490:	11000304 	addi	r4,r2,12
 4004494:	31800084 	addi	r6,r6,2
 4004498:	318d883a 	add	r6,r6,r6
 400449c:	318d883a 	add	r6,r6,r6
 40044a0:	1027883a 	mov	r19,r2
 40044a4:	40052300 	call	4005230 <memcpy>
 40044a8:	01800044 	movi	r6,1
 40044ac:	980b883a 	mov	r5,r19
 40044b0:	e009883a 	mov	r4,fp
 40044b4:	4005bb40 	call	4005bb4 <__lshift>
 40044b8:	1029883a 	mov	r20,r2
 40044bc:	003ecc06 	br	4003ff0 <__alt_mem_onchip_memory2_0+0xfbffee30>
 40044c0:	00800e44 	movi	r2,57
 40044c4:	90809026 	beq	r18,r2,4004708 <_dtoa_r+0x152c>
 40044c8:	92000044 	addi	r8,r18,1
 40044cc:	003f1f06 	br	400414c <__alt_mem_onchip_memory2_0+0xfbffef8c>
 40044d0:	9011883a 	mov	r8,r18
 40044d4:	8825883a 	mov	r18,r17
 40044d8:	a023883a 	mov	r17,r20
 40044dc:	003e2906 	br	4003d84 <__alt_mem_onchip_memory2_0+0xfbffebc4>
 40044e0:	002b883a 	mov	r21,zero
 40044e4:	0023883a 	mov	r17,zero
 40044e8:	003f5406 	br	400423c <__alt_mem_onchip_memory2_0+0xfbfff07c>
 40044ec:	61bfffc4 	addi	r6,r12,-1
 40044f0:	300490fa 	slli	r2,r6,3
 40044f4:	00c10074 	movhi	r3,1025
 40044f8:	18f8a804 	addi	r3,r3,-7520
 40044fc:	1885883a 	add	r2,r3,r2
 4004500:	11000017 	ldw	r4,0(r2)
 4004504:	11400117 	ldw	r5,4(r2)
 4004508:	d8800717 	ldw	r2,28(sp)
 400450c:	880f883a 	mov	r7,r17
 4004510:	d9801215 	stw	r6,72(sp)
 4004514:	800d883a 	mov	r6,r16
 4004518:	db001615 	stw	r12,88(sp)
 400451c:	15c00044 	addi	r23,r2,1
 4004520:	400a9dc0 	call	400a9dc <__muldf3>
 4004524:	d9401017 	ldw	r5,64(sp)
 4004528:	d9000f17 	ldw	r4,60(sp)
 400452c:	d8c01515 	stw	r3,84(sp)
 4004530:	d8801415 	stw	r2,80(sp)
 4004534:	400bb440 	call	400bb44 <__fixdfsi>
 4004538:	1009883a 	mov	r4,r2
 400453c:	1021883a 	mov	r16,r2
 4004540:	400bbc40 	call	400bbc4 <__floatsidf>
 4004544:	d9000f17 	ldw	r4,60(sp)
 4004548:	d9401017 	ldw	r5,64(sp)
 400454c:	100d883a 	mov	r6,r2
 4004550:	180f883a 	mov	r7,r3
 4004554:	400b2480 	call	400b248 <__subdf3>
 4004558:	1829883a 	mov	r20,r3
 400455c:	d8c00717 	ldw	r3,28(sp)
 4004560:	84000c04 	addi	r16,r16,48
 4004564:	1023883a 	mov	r17,r2
 4004568:	1c000005 	stb	r16,0(r3)
 400456c:	db001617 	ldw	r12,88(sp)
 4004570:	00800044 	movi	r2,1
 4004574:	60802226 	beq	r12,r2,4004600 <_dtoa_r+0x1424>
 4004578:	d9c00717 	ldw	r7,28(sp)
 400457c:	8805883a 	mov	r2,r17
 4004580:	b82b883a 	mov	r21,r23
 4004584:	3b19883a 	add	r12,r7,r12
 4004588:	6023883a 	mov	r17,r12
 400458c:	a007883a 	mov	r3,r20
 4004590:	dc800f15 	stw	r18,60(sp)
 4004594:	000d883a 	mov	r6,zero
 4004598:	01d00934 	movhi	r7,16420
 400459c:	1009883a 	mov	r4,r2
 40045a0:	180b883a 	mov	r5,r3
 40045a4:	400a9dc0 	call	400a9dc <__muldf3>
 40045a8:	180b883a 	mov	r5,r3
 40045ac:	1009883a 	mov	r4,r2
 40045b0:	1829883a 	mov	r20,r3
 40045b4:	1025883a 	mov	r18,r2
 40045b8:	400bb440 	call	400bb44 <__fixdfsi>
 40045bc:	1009883a 	mov	r4,r2
 40045c0:	1021883a 	mov	r16,r2
 40045c4:	400bbc40 	call	400bbc4 <__floatsidf>
 40045c8:	100d883a 	mov	r6,r2
 40045cc:	180f883a 	mov	r7,r3
 40045d0:	9009883a 	mov	r4,r18
 40045d4:	a00b883a 	mov	r5,r20
 40045d8:	84000c04 	addi	r16,r16,48
 40045dc:	400b2480 	call	400b248 <__subdf3>
 40045e0:	ad400044 	addi	r21,r21,1
 40045e4:	ac3fffc5 	stb	r16,-1(r21)
 40045e8:	ac7fea1e 	bne	r21,r17,4004594 <__alt_mem_onchip_memory2_0+0xfbfff3d4>
 40045ec:	1023883a 	mov	r17,r2
 40045f0:	d8801217 	ldw	r2,72(sp)
 40045f4:	dc800f17 	ldw	r18,60(sp)
 40045f8:	1829883a 	mov	r20,r3
 40045fc:	b8af883a 	add	r23,r23,r2
 4004600:	d9001417 	ldw	r4,80(sp)
 4004604:	d9401517 	ldw	r5,84(sp)
 4004608:	000d883a 	mov	r6,zero
 400460c:	01cff834 	movhi	r7,16352
 4004610:	40095080 	call	4009508 <__adddf3>
 4004614:	880d883a 	mov	r6,r17
 4004618:	a00f883a 	mov	r7,r20
 400461c:	1009883a 	mov	r4,r2
 4004620:	180b883a 	mov	r5,r3
 4004624:	400a8e80 	call	400a8e8 <__ledf2>
 4004628:	10003e0e 	bge	r2,zero,4004724 <_dtoa_r+0x1548>
 400462c:	d9001317 	ldw	r4,76(sp)
 4004630:	bd3fffc3 	ldbu	r20,-1(r23)
 4004634:	d9000515 	stw	r4,20(sp)
 4004638:	003d3b06 	br	4003b28 <__alt_mem_onchip_memory2_0+0xfbffe968>
 400463c:	0027883a 	mov	r19,zero
 4004640:	003f1b06 	br	40042b0 <__alt_mem_onchip_memory2_0+0xfbfff0f0>
 4004644:	d8800817 	ldw	r2,32(sp)
 4004648:	11e9c83a 	sub	r20,r2,r7
 400464c:	0005883a 	mov	r2,zero
 4004650:	003d5406 	br	4003ba4 <__alt_mem_onchip_memory2_0+0xfbffe9e4>
 4004654:	00800044 	movi	r2,1
 4004658:	003dc706 	br	4003d78 <__alt_mem_onchip_memory2_0+0xfbffebb8>
 400465c:	d8c00217 	ldw	r3,8(sp)
 4004660:	00800d84 	movi	r2,54
 4004664:	dd400a17 	ldw	r21,40(sp)
 4004668:	10c5c83a 	sub	r2,r2,r3
 400466c:	dd000817 	ldw	r20,32(sp)
 4004670:	003d4c06 	br	4003ba4 <__alt_mem_onchip_memory2_0+0xfbffe9e4>
 4004674:	dc800f15 	stw	r18,60(sp)
 4004678:	dcc01015 	stw	r19,64(sp)
 400467c:	04000084 	movi	r16,2
 4004680:	003bed06 	br	4003638 <__alt_mem_onchip_memory2_0+0xfbffe478>
 4004684:	d9000617 	ldw	r4,24(sp)
 4004688:	203f0d26 	beq	r4,zero,40042c0 <__alt_mem_onchip_memory2_0+0xfbfff100>
 400468c:	d9800c17 	ldw	r6,48(sp)
 4004690:	01bcab0e 	bge	zero,r6,4003940 <__alt_mem_onchip_memory2_0+0xfbffe780>
 4004694:	d9401017 	ldw	r5,64(sp)
 4004698:	d9000f17 	ldw	r4,60(sp)
 400469c:	000d883a 	mov	r6,zero
 40046a0:	01d00934 	movhi	r7,16420
 40046a4:	400a9dc0 	call	400a9dc <__muldf3>
 40046a8:	81000044 	addi	r4,r16,1
 40046ac:	d8800f15 	stw	r2,60(sp)
 40046b0:	d8c01015 	stw	r3,64(sp)
 40046b4:	400bbc40 	call	400bbc4 <__floatsidf>
 40046b8:	d9800f17 	ldw	r6,60(sp)
 40046bc:	d9c01017 	ldw	r7,64(sp)
 40046c0:	1009883a 	mov	r4,r2
 40046c4:	180b883a 	mov	r5,r3
 40046c8:	400a9dc0 	call	400a9dc <__muldf3>
 40046cc:	01d00734 	movhi	r7,16412
 40046d0:	000d883a 	mov	r6,zero
 40046d4:	1009883a 	mov	r4,r2
 40046d8:	180b883a 	mov	r5,r3
 40046dc:	40095080 	call	4009508 <__adddf3>
 40046e0:	d9c00517 	ldw	r7,20(sp)
 40046e4:	047f3034 	movhi	r17,64704
 40046e8:	1021883a 	mov	r16,r2
 40046ec:	39ffffc4 	addi	r7,r7,-1
 40046f0:	d9c01315 	stw	r7,76(sp)
 40046f4:	1c63883a 	add	r17,r3,r17
 40046f8:	db000c17 	ldw	r12,48(sp)
 40046fc:	003bea06 	br	40036a8 <__alt_mem_onchip_memory2_0+0xfbffe4e8>
 4004700:	dc000915 	stw	r16,36(sp)
 4004704:	003e0e06 	br	4003f40 <__alt_mem_onchip_memory2_0+0xfbffed80>
 4004708:	01000e44 	movi	r4,57
 400470c:	8825883a 	mov	r18,r17
 4004710:	9dc00044 	addi	r23,r19,1
 4004714:	99000005 	stb	r4,0(r19)
 4004718:	a023883a 	mov	r17,r20
 400471c:	dc000915 	stw	r16,36(sp)
 4004720:	003da406 	br	4003db4 <__alt_mem_onchip_memory2_0+0xfbffebf4>
 4004724:	d9801417 	ldw	r6,80(sp)
 4004728:	d9c01517 	ldw	r7,84(sp)
 400472c:	0009883a 	mov	r4,zero
 4004730:	014ff834 	movhi	r5,16352
 4004734:	400b2480 	call	400b248 <__subdf3>
 4004738:	880d883a 	mov	r6,r17
 400473c:	a00f883a 	mov	r7,r20
 4004740:	1009883a 	mov	r4,r2
 4004744:	180b883a 	mov	r5,r3
 4004748:	400a80c0 	call	400a80c <__gedf2>
 400474c:	00bc7c0e 	bge	zero,r2,4003940 <__alt_mem_onchip_memory2_0+0xfbffe780>
 4004750:	01000c04 	movi	r4,48
 4004754:	00000106 	br	400475c <_dtoa_r+0x1580>
 4004758:	102f883a 	mov	r23,r2
 400475c:	b8bfffc4 	addi	r2,r23,-1
 4004760:	10c00007 	ldb	r3,0(r2)
 4004764:	193ffc26 	beq	r3,r4,4004758 <__alt_mem_onchip_memory2_0+0xfbfff598>
 4004768:	d9801317 	ldw	r6,76(sp)
 400476c:	d9800515 	stw	r6,20(sp)
 4004770:	003c4406 	br	4003884 <__alt_mem_onchip_memory2_0+0xfbffe6c4>
 4004774:	d9801317 	ldw	r6,76(sp)
 4004778:	d9800515 	stw	r6,20(sp)
 400477c:	003cea06 	br	4003b28 <__alt_mem_onchip_memory2_0+0xfbffe968>
 4004780:	dd800f17 	ldw	r22,60(sp)
 4004784:	dcc01017 	ldw	r19,64(sp)
 4004788:	dc801217 	ldw	r18,72(sp)
 400478c:	003c6c06 	br	4003940 <__alt_mem_onchip_memory2_0+0xfbffe780>
 4004790:	903e031e 	bne	r18,zero,4003fa0 <__alt_mem_onchip_memory2_0+0xfbffede0>
 4004794:	003ebb06 	br	4004284 <__alt_mem_onchip_memory2_0+0xfbfff0c4>
 4004798:	103e6c1e 	bne	r2,zero,400414c <__alt_mem_onchip_memory2_0+0xfbffef8c>
 400479c:	4080004c 	andi	r2,r8,1
 40047a0:	103e6a26 	beq	r2,zero,400414c <__alt_mem_onchip_memory2_0+0xfbffef8c>
 40047a4:	003e6606 	br	4004140 <__alt_mem_onchip_memory2_0+0xfbffef80>
 40047a8:	d8c00317 	ldw	r3,12(sp)
 40047ac:	00800084 	movi	r2,2
 40047b0:	10c02916 	blt	r2,r3,4004858 <_dtoa_r+0x167c>
 40047b4:	d9000c17 	ldw	r4,48(sp)
 40047b8:	003e8806 	br	40041dc <__alt_mem_onchip_memory2_0+0xfbfff01c>
 40047bc:	04000084 	movi	r16,2
 40047c0:	003b9d06 	br	4003638 <__alt_mem_onchip_memory2_0+0xfbffe478>
 40047c4:	d9001317 	ldw	r4,76(sp)
 40047c8:	d9000515 	stw	r4,20(sp)
 40047cc:	003cd606 	br	4003b28 <__alt_mem_onchip_memory2_0+0xfbffe968>
 40047d0:	d8801317 	ldw	r2,76(sp)
 40047d4:	d8800515 	stw	r2,20(sp)
 40047d8:	003c2a06 	br	4003884 <__alt_mem_onchip_memory2_0+0xfbffe6c4>
 40047dc:	d9800317 	ldw	r6,12(sp)
 40047e0:	00800084 	movi	r2,2
 40047e4:	11801516 	blt	r2,r6,400483c <_dtoa_r+0x1660>
 40047e8:	d9c00c17 	ldw	r7,48(sp)
 40047ec:	d9c00615 	stw	r7,24(sp)
 40047f0:	003df706 	br	4003fd0 <__alt_mem_onchip_memory2_0+0xfbffee10>
 40047f4:	193d3926 	beq	r3,r4,4003cdc <__alt_mem_onchip_memory2_0+0xfbffeb1c>
 40047f8:	00c00f04 	movi	r3,60
 40047fc:	1885c83a 	sub	r2,r3,r2
 4004800:	003ddf06 	br	4003f80 <__alt_mem_onchip_memory2_0+0xfbffedc0>
 4004804:	e009883a 	mov	r4,fp
 4004808:	e0001115 	stw	zero,68(fp)
 400480c:	000b883a 	mov	r5,zero
 4004810:	40053780 	call	4005378 <_Balloc>
 4004814:	d8800715 	stw	r2,28(sp)
 4004818:	d8c00717 	ldw	r3,28(sp)
 400481c:	00bfffc4 	movi	r2,-1
 4004820:	01000044 	movi	r4,1
 4004824:	d8800c15 	stw	r2,48(sp)
 4004828:	e0c01015 	stw	r3,64(fp)
 400482c:	d9000b15 	stw	r4,44(sp)
 4004830:	d8800615 	stw	r2,24(sp)
 4004834:	d8002215 	stw	zero,136(sp)
 4004838:	003c4106 	br	4003940 <__alt_mem_onchip_memory2_0+0xfbffe780>
 400483c:	d8c00c17 	ldw	r3,48(sp)
 4004840:	d8c00615 	stw	r3,24(sp)
 4004844:	003e7006 	br	4004208 <__alt_mem_onchip_memory2_0+0xfbfff048>
 4004848:	04400044 	movi	r17,1
 400484c:	003b2006 	br	40034d0 <__alt_mem_onchip_memory2_0+0xfbffe310>
 4004850:	000b883a 	mov	r5,zero
 4004854:	003b3d06 	br	400354c <__alt_mem_onchip_memory2_0+0xfbffe38c>
 4004858:	d8800c17 	ldw	r2,48(sp)
 400485c:	d8800615 	stw	r2,24(sp)
 4004860:	003e6906 	br	4004208 <__alt_mem_onchip_memory2_0+0xfbfff048>

04004864 <_setlocale_r>:
 4004864:	30001b26 	beq	r6,zero,40048d4 <_setlocale_r+0x70>
 4004868:	01410074 	movhi	r5,1025
 400486c:	defffe04 	addi	sp,sp,-8
 4004870:	29788e04 	addi	r5,r5,-7624
 4004874:	3009883a 	mov	r4,r6
 4004878:	dc000015 	stw	r16,0(sp)
 400487c:	dfc00115 	stw	ra,4(sp)
 4004880:	3021883a 	mov	r16,r6
 4004884:	40064f80 	call	40064f8 <strcmp>
 4004888:	1000061e 	bne	r2,zero,40048a4 <_setlocale_r+0x40>
 400488c:	00810074 	movhi	r2,1025
 4004890:	10b88d04 	addi	r2,r2,-7628
 4004894:	dfc00117 	ldw	ra,4(sp)
 4004898:	dc000017 	ldw	r16,0(sp)
 400489c:	dec00204 	addi	sp,sp,8
 40048a0:	f800283a 	ret
 40048a4:	01410074 	movhi	r5,1025
 40048a8:	29788d04 	addi	r5,r5,-7628
 40048ac:	8009883a 	mov	r4,r16
 40048b0:	40064f80 	call	40064f8 <strcmp>
 40048b4:	103ff526 	beq	r2,zero,400488c <__alt_mem_onchip_memory2_0+0xfbfff6cc>
 40048b8:	01410074 	movhi	r5,1025
 40048bc:	29787804 	addi	r5,r5,-7712
 40048c0:	8009883a 	mov	r4,r16
 40048c4:	40064f80 	call	40064f8 <strcmp>
 40048c8:	103ff026 	beq	r2,zero,400488c <__alt_mem_onchip_memory2_0+0xfbfff6cc>
 40048cc:	0005883a 	mov	r2,zero
 40048d0:	003ff006 	br	4004894 <__alt_mem_onchip_memory2_0+0xfbfff6d4>
 40048d4:	00810074 	movhi	r2,1025
 40048d8:	10b88d04 	addi	r2,r2,-7628
 40048dc:	f800283a 	ret

040048e0 <__locale_charset>:
 40048e0:	00810074 	movhi	r2,1025
 40048e4:	10baf804 	addi	r2,r2,-5152
 40048e8:	f800283a 	ret

040048ec <__locale_mb_cur_max>:
 40048ec:	00810074 	movhi	r2,1025
 40048f0:	10809604 	addi	r2,r2,600
 40048f4:	10800017 	ldw	r2,0(r2)
 40048f8:	f800283a 	ret

040048fc <__locale_msgcharset>:
 40048fc:	00810074 	movhi	r2,1025
 4004900:	10baf004 	addi	r2,r2,-5184
 4004904:	f800283a 	ret

04004908 <__locale_cjk_lang>:
 4004908:	0005883a 	mov	r2,zero
 400490c:	f800283a 	ret

04004910 <_localeconv_r>:
 4004910:	00810074 	movhi	r2,1025
 4004914:	10bb0004 	addi	r2,r2,-5120
 4004918:	f800283a 	ret

0400491c <setlocale>:
 400491c:	00810074 	movhi	r2,1025
 4004920:	10809504 	addi	r2,r2,596
 4004924:	280d883a 	mov	r6,r5
 4004928:	200b883a 	mov	r5,r4
 400492c:	11000017 	ldw	r4,0(r2)
 4004930:	40048641 	jmpi	4004864 <_setlocale_r>

04004934 <localeconv>:
 4004934:	00810074 	movhi	r2,1025
 4004938:	10bb0004 	addi	r2,r2,-5120
 400493c:	f800283a 	ret

04004940 <_malloc_r>:
 4004940:	defff504 	addi	sp,sp,-44
 4004944:	dc800315 	stw	r18,12(sp)
 4004948:	dfc00a15 	stw	ra,40(sp)
 400494c:	df000915 	stw	fp,36(sp)
 4004950:	ddc00815 	stw	r23,32(sp)
 4004954:	dd800715 	stw	r22,28(sp)
 4004958:	dd400615 	stw	r21,24(sp)
 400495c:	dd000515 	stw	r20,20(sp)
 4004960:	dcc00415 	stw	r19,16(sp)
 4004964:	dc400215 	stw	r17,8(sp)
 4004968:	dc000115 	stw	r16,4(sp)
 400496c:	288002c4 	addi	r2,r5,11
 4004970:	00c00584 	movi	r3,22
 4004974:	2025883a 	mov	r18,r4
 4004978:	18807f2e 	bgeu	r3,r2,4004b78 <_malloc_r+0x238>
 400497c:	047ffe04 	movi	r17,-8
 4004980:	1462703a 	and	r17,r2,r17
 4004984:	8800a316 	blt	r17,zero,4004c14 <_malloc_r+0x2d4>
 4004988:	8940a236 	bltu	r17,r5,4004c14 <_malloc_r+0x2d4>
 400498c:	400bf140 	call	400bf14 <__malloc_lock>
 4004990:	00807dc4 	movi	r2,503
 4004994:	1441e92e 	bgeu	r2,r17,400513c <_malloc_r+0x7fc>
 4004998:	8804d27a 	srli	r2,r17,9
 400499c:	1000a126 	beq	r2,zero,4004c24 <_malloc_r+0x2e4>
 40049a0:	00c00104 	movi	r3,4
 40049a4:	18811e36 	bltu	r3,r2,4004e20 <_malloc_r+0x4e0>
 40049a8:	8804d1ba 	srli	r2,r17,6
 40049ac:	12000e44 	addi	r8,r2,57
 40049b0:	11c00e04 	addi	r7,r2,56
 40049b4:	4209883a 	add	r4,r8,r8
 40049b8:	04c10074 	movhi	r19,1025
 40049bc:	2109883a 	add	r4,r4,r4
 40049c0:	9cfb0e04 	addi	r19,r19,-5064
 40049c4:	2109883a 	add	r4,r4,r4
 40049c8:	9909883a 	add	r4,r19,r4
 40049cc:	24000117 	ldw	r16,4(r4)
 40049d0:	213ffe04 	addi	r4,r4,-8
 40049d4:	24009726 	beq	r4,r16,4004c34 <_malloc_r+0x2f4>
 40049d8:	80800117 	ldw	r2,4(r16)
 40049dc:	01bfff04 	movi	r6,-4
 40049e0:	014003c4 	movi	r5,15
 40049e4:	1184703a 	and	r2,r2,r6
 40049e8:	1447c83a 	sub	r3,r2,r17
 40049ec:	28c00716 	blt	r5,r3,4004a0c <_malloc_r+0xcc>
 40049f0:	1800920e 	bge	r3,zero,4004c3c <_malloc_r+0x2fc>
 40049f4:	84000317 	ldw	r16,12(r16)
 40049f8:	24008e26 	beq	r4,r16,4004c34 <_malloc_r+0x2f4>
 40049fc:	80800117 	ldw	r2,4(r16)
 4004a00:	1184703a 	and	r2,r2,r6
 4004a04:	1447c83a 	sub	r3,r2,r17
 4004a08:	28fff90e 	bge	r5,r3,40049f0 <__alt_mem_onchip_memory2_0+0xfbfff830>
 4004a0c:	3809883a 	mov	r4,r7
 4004a10:	01810074 	movhi	r6,1025
 4004a14:	9c000417 	ldw	r16,16(r19)
 4004a18:	31bb0e04 	addi	r6,r6,-5064
 4004a1c:	32000204 	addi	r8,r6,8
 4004a20:	82013426 	beq	r16,r8,4004ef4 <_malloc_r+0x5b4>
 4004a24:	80c00117 	ldw	r3,4(r16)
 4004a28:	00bfff04 	movi	r2,-4
 4004a2c:	188e703a 	and	r7,r3,r2
 4004a30:	3c45c83a 	sub	r2,r7,r17
 4004a34:	00c003c4 	movi	r3,15
 4004a38:	18811f16 	blt	r3,r2,4004eb8 <_malloc_r+0x578>
 4004a3c:	32000515 	stw	r8,20(r6)
 4004a40:	32000415 	stw	r8,16(r6)
 4004a44:	10007f0e 	bge	r2,zero,4004c44 <_malloc_r+0x304>
 4004a48:	00807fc4 	movi	r2,511
 4004a4c:	11c0fd36 	bltu	r2,r7,4004e44 <_malloc_r+0x504>
 4004a50:	3806d0fa 	srli	r3,r7,3
 4004a54:	01c00044 	movi	r7,1
 4004a58:	30800117 	ldw	r2,4(r6)
 4004a5c:	19400044 	addi	r5,r3,1
 4004a60:	294b883a 	add	r5,r5,r5
 4004a64:	1807d0ba 	srai	r3,r3,2
 4004a68:	294b883a 	add	r5,r5,r5
 4004a6c:	294b883a 	add	r5,r5,r5
 4004a70:	298b883a 	add	r5,r5,r6
 4004a74:	38c6983a 	sll	r3,r7,r3
 4004a78:	29c00017 	ldw	r7,0(r5)
 4004a7c:	2a7ffe04 	addi	r9,r5,-8
 4004a80:	1886b03a 	or	r3,r3,r2
 4004a84:	82400315 	stw	r9,12(r16)
 4004a88:	81c00215 	stw	r7,8(r16)
 4004a8c:	30c00115 	stw	r3,4(r6)
 4004a90:	2c000015 	stw	r16,0(r5)
 4004a94:	3c000315 	stw	r16,12(r7)
 4004a98:	2005d0ba 	srai	r2,r4,2
 4004a9c:	01400044 	movi	r5,1
 4004aa0:	288a983a 	sll	r5,r5,r2
 4004aa4:	19406f36 	bltu	r3,r5,4004c64 <_malloc_r+0x324>
 4004aa8:	28c4703a 	and	r2,r5,r3
 4004aac:	10000a1e 	bne	r2,zero,4004ad8 <_malloc_r+0x198>
 4004ab0:	00bfff04 	movi	r2,-4
 4004ab4:	294b883a 	add	r5,r5,r5
 4004ab8:	2088703a 	and	r4,r4,r2
 4004abc:	28c4703a 	and	r2,r5,r3
 4004ac0:	21000104 	addi	r4,r4,4
 4004ac4:	1000041e 	bne	r2,zero,4004ad8 <_malloc_r+0x198>
 4004ac8:	294b883a 	add	r5,r5,r5
 4004acc:	28c4703a 	and	r2,r5,r3
 4004ad0:	21000104 	addi	r4,r4,4
 4004ad4:	103ffc26 	beq	r2,zero,4004ac8 <__alt_mem_onchip_memory2_0+0xfbfff908>
 4004ad8:	02bfff04 	movi	r10,-4
 4004adc:	024003c4 	movi	r9,15
 4004ae0:	21800044 	addi	r6,r4,1
 4004ae4:	318d883a 	add	r6,r6,r6
 4004ae8:	318d883a 	add	r6,r6,r6
 4004aec:	318d883a 	add	r6,r6,r6
 4004af0:	998d883a 	add	r6,r19,r6
 4004af4:	333ffe04 	addi	r12,r6,-8
 4004af8:	2017883a 	mov	r11,r4
 4004afc:	31800104 	addi	r6,r6,4
 4004b00:	34000017 	ldw	r16,0(r6)
 4004b04:	31fffd04 	addi	r7,r6,-12
 4004b08:	81c0041e 	bne	r16,r7,4004b1c <_malloc_r+0x1dc>
 4004b0c:	0000fb06 	br	4004efc <_malloc_r+0x5bc>
 4004b10:	1801030e 	bge	r3,zero,4004f20 <_malloc_r+0x5e0>
 4004b14:	84000317 	ldw	r16,12(r16)
 4004b18:	81c0f826 	beq	r16,r7,4004efc <_malloc_r+0x5bc>
 4004b1c:	80800117 	ldw	r2,4(r16)
 4004b20:	1284703a 	and	r2,r2,r10
 4004b24:	1447c83a 	sub	r3,r2,r17
 4004b28:	48fff90e 	bge	r9,r3,4004b10 <__alt_mem_onchip_memory2_0+0xfbfff950>
 4004b2c:	80800317 	ldw	r2,12(r16)
 4004b30:	81000217 	ldw	r4,8(r16)
 4004b34:	89400054 	ori	r5,r17,1
 4004b38:	81400115 	stw	r5,4(r16)
 4004b3c:	20800315 	stw	r2,12(r4)
 4004b40:	11000215 	stw	r4,8(r2)
 4004b44:	8463883a 	add	r17,r16,r17
 4004b48:	9c400515 	stw	r17,20(r19)
 4004b4c:	9c400415 	stw	r17,16(r19)
 4004b50:	18800054 	ori	r2,r3,1
 4004b54:	88800115 	stw	r2,4(r17)
 4004b58:	8a000315 	stw	r8,12(r17)
 4004b5c:	8a000215 	stw	r8,8(r17)
 4004b60:	88e3883a 	add	r17,r17,r3
 4004b64:	88c00015 	stw	r3,0(r17)
 4004b68:	9009883a 	mov	r4,r18
 4004b6c:	400bf380 	call	400bf38 <__malloc_unlock>
 4004b70:	80800204 	addi	r2,r16,8
 4004b74:	00001b06 	br	4004be4 <_malloc_r+0x2a4>
 4004b78:	04400404 	movi	r17,16
 4004b7c:	89402536 	bltu	r17,r5,4004c14 <_malloc_r+0x2d4>
 4004b80:	400bf140 	call	400bf14 <__malloc_lock>
 4004b84:	00800184 	movi	r2,6
 4004b88:	01000084 	movi	r4,2
 4004b8c:	04c10074 	movhi	r19,1025
 4004b90:	1085883a 	add	r2,r2,r2
 4004b94:	9cfb0e04 	addi	r19,r19,-5064
 4004b98:	1085883a 	add	r2,r2,r2
 4004b9c:	9885883a 	add	r2,r19,r2
 4004ba0:	14000117 	ldw	r16,4(r2)
 4004ba4:	10fffe04 	addi	r3,r2,-8
 4004ba8:	80c0d926 	beq	r16,r3,4004f10 <_malloc_r+0x5d0>
 4004bac:	80c00117 	ldw	r3,4(r16)
 4004bb0:	81000317 	ldw	r4,12(r16)
 4004bb4:	00bfff04 	movi	r2,-4
 4004bb8:	1884703a 	and	r2,r3,r2
 4004bbc:	81400217 	ldw	r5,8(r16)
 4004bc0:	8085883a 	add	r2,r16,r2
 4004bc4:	10c00117 	ldw	r3,4(r2)
 4004bc8:	29000315 	stw	r4,12(r5)
 4004bcc:	21400215 	stw	r5,8(r4)
 4004bd0:	18c00054 	ori	r3,r3,1
 4004bd4:	10c00115 	stw	r3,4(r2)
 4004bd8:	9009883a 	mov	r4,r18
 4004bdc:	400bf380 	call	400bf38 <__malloc_unlock>
 4004be0:	80800204 	addi	r2,r16,8
 4004be4:	dfc00a17 	ldw	ra,40(sp)
 4004be8:	df000917 	ldw	fp,36(sp)
 4004bec:	ddc00817 	ldw	r23,32(sp)
 4004bf0:	dd800717 	ldw	r22,28(sp)
 4004bf4:	dd400617 	ldw	r21,24(sp)
 4004bf8:	dd000517 	ldw	r20,20(sp)
 4004bfc:	dcc00417 	ldw	r19,16(sp)
 4004c00:	dc800317 	ldw	r18,12(sp)
 4004c04:	dc400217 	ldw	r17,8(sp)
 4004c08:	dc000117 	ldw	r16,4(sp)
 4004c0c:	dec00b04 	addi	sp,sp,44
 4004c10:	f800283a 	ret
 4004c14:	00800304 	movi	r2,12
 4004c18:	90800015 	stw	r2,0(r18)
 4004c1c:	0005883a 	mov	r2,zero
 4004c20:	003ff006 	br	4004be4 <__alt_mem_onchip_memory2_0+0xfbfffa24>
 4004c24:	01002004 	movi	r4,128
 4004c28:	02001004 	movi	r8,64
 4004c2c:	01c00fc4 	movi	r7,63
 4004c30:	003f6106 	br	40049b8 <__alt_mem_onchip_memory2_0+0xfbfff7f8>
 4004c34:	4009883a 	mov	r4,r8
 4004c38:	003f7506 	br	4004a10 <__alt_mem_onchip_memory2_0+0xfbfff850>
 4004c3c:	81000317 	ldw	r4,12(r16)
 4004c40:	003fde06 	br	4004bbc <__alt_mem_onchip_memory2_0+0xfbfff9fc>
 4004c44:	81c5883a 	add	r2,r16,r7
 4004c48:	11400117 	ldw	r5,4(r2)
 4004c4c:	9009883a 	mov	r4,r18
 4004c50:	29400054 	ori	r5,r5,1
 4004c54:	11400115 	stw	r5,4(r2)
 4004c58:	400bf380 	call	400bf38 <__malloc_unlock>
 4004c5c:	80800204 	addi	r2,r16,8
 4004c60:	003fe006 	br	4004be4 <__alt_mem_onchip_memory2_0+0xfbfffa24>
 4004c64:	9c000217 	ldw	r16,8(r19)
 4004c68:	00bfff04 	movi	r2,-4
 4004c6c:	85800117 	ldw	r22,4(r16)
 4004c70:	b0ac703a 	and	r22,r22,r2
 4004c74:	b4400336 	bltu	r22,r17,4004c84 <_malloc_r+0x344>
 4004c78:	b445c83a 	sub	r2,r22,r17
 4004c7c:	00c003c4 	movi	r3,15
 4004c80:	18805d16 	blt	r3,r2,4004df8 <_malloc_r+0x4b8>
 4004c84:	05c10074 	movhi	r23,1025
 4004c88:	00810074 	movhi	r2,1025
 4004c8c:	10881c04 	addi	r2,r2,8304
 4004c90:	bdc09704 	addi	r23,r23,604
 4004c94:	15400017 	ldw	r21,0(r2)
 4004c98:	b8c00017 	ldw	r3,0(r23)
 4004c9c:	00bfffc4 	movi	r2,-1
 4004ca0:	858d883a 	add	r6,r16,r22
 4004ca4:	8d6b883a 	add	r21,r17,r21
 4004ca8:	1880ea26 	beq	r3,r2,4005054 <_malloc_r+0x714>
 4004cac:	ad4403c4 	addi	r21,r21,4111
 4004cb0:	00bc0004 	movi	r2,-4096
 4004cb4:	a8aa703a 	and	r21,r21,r2
 4004cb8:	a80b883a 	mov	r5,r21
 4004cbc:	9009883a 	mov	r4,r18
 4004cc0:	d9800015 	stw	r6,0(sp)
 4004cc4:	40064a40 	call	40064a4 <_sbrk_r>
 4004cc8:	1029883a 	mov	r20,r2
 4004ccc:	00bfffc4 	movi	r2,-1
 4004cd0:	d9800017 	ldw	r6,0(sp)
 4004cd4:	a080e826 	beq	r20,r2,4005078 <_malloc_r+0x738>
 4004cd8:	a180a636 	bltu	r20,r6,4004f74 <_malloc_r+0x634>
 4004cdc:	07010074 	movhi	fp,1025
 4004ce0:	e7082504 	addi	fp,fp,8340
 4004ce4:	e0800017 	ldw	r2,0(fp)
 4004ce8:	a887883a 	add	r3,r21,r2
 4004cec:	e0c00015 	stw	r3,0(fp)
 4004cf0:	3500e626 	beq	r6,r20,400508c <_malloc_r+0x74c>
 4004cf4:	b9000017 	ldw	r4,0(r23)
 4004cf8:	00bfffc4 	movi	r2,-1
 4004cfc:	2080ee26 	beq	r4,r2,40050b8 <_malloc_r+0x778>
 4004d00:	a185c83a 	sub	r2,r20,r6
 4004d04:	10c5883a 	add	r2,r2,r3
 4004d08:	e0800015 	stw	r2,0(fp)
 4004d0c:	a0c001cc 	andi	r3,r20,7
 4004d10:	1800bc26 	beq	r3,zero,4005004 <_malloc_r+0x6c4>
 4004d14:	a0e9c83a 	sub	r20,r20,r3
 4004d18:	00840204 	movi	r2,4104
 4004d1c:	a5000204 	addi	r20,r20,8
 4004d20:	10c7c83a 	sub	r3,r2,r3
 4004d24:	a545883a 	add	r2,r20,r21
 4004d28:	1083ffcc 	andi	r2,r2,4095
 4004d2c:	18abc83a 	sub	r21,r3,r2
 4004d30:	a80b883a 	mov	r5,r21
 4004d34:	9009883a 	mov	r4,r18
 4004d38:	40064a40 	call	40064a4 <_sbrk_r>
 4004d3c:	00ffffc4 	movi	r3,-1
 4004d40:	10c0e126 	beq	r2,r3,40050c8 <_malloc_r+0x788>
 4004d44:	1505c83a 	sub	r2,r2,r20
 4004d48:	1545883a 	add	r2,r2,r21
 4004d4c:	10800054 	ori	r2,r2,1
 4004d50:	e0c00017 	ldw	r3,0(fp)
 4004d54:	9d000215 	stw	r20,8(r19)
 4004d58:	a0800115 	stw	r2,4(r20)
 4004d5c:	a8c7883a 	add	r3,r21,r3
 4004d60:	e0c00015 	stw	r3,0(fp)
 4004d64:	84c00e26 	beq	r16,r19,4004da0 <_malloc_r+0x460>
 4004d68:	018003c4 	movi	r6,15
 4004d6c:	3580a72e 	bgeu	r6,r22,400500c <_malloc_r+0x6cc>
 4004d70:	81400117 	ldw	r5,4(r16)
 4004d74:	013ffe04 	movi	r4,-8
 4004d78:	b0bffd04 	addi	r2,r22,-12
 4004d7c:	1104703a 	and	r2,r2,r4
 4004d80:	2900004c 	andi	r4,r5,1
 4004d84:	2088b03a 	or	r4,r4,r2
 4004d88:	81000115 	stw	r4,4(r16)
 4004d8c:	01400144 	movi	r5,5
 4004d90:	8089883a 	add	r4,r16,r2
 4004d94:	21400115 	stw	r5,4(r4)
 4004d98:	21400215 	stw	r5,8(r4)
 4004d9c:	3080cd36 	bltu	r6,r2,40050d4 <_malloc_r+0x794>
 4004da0:	00810074 	movhi	r2,1025
 4004da4:	10881b04 	addi	r2,r2,8300
 4004da8:	11000017 	ldw	r4,0(r2)
 4004dac:	20c0012e 	bgeu	r4,r3,4004db4 <_malloc_r+0x474>
 4004db0:	10c00015 	stw	r3,0(r2)
 4004db4:	00810074 	movhi	r2,1025
 4004db8:	10881a04 	addi	r2,r2,8296
 4004dbc:	11000017 	ldw	r4,0(r2)
 4004dc0:	9c000217 	ldw	r16,8(r19)
 4004dc4:	20c0012e 	bgeu	r4,r3,4004dcc <_malloc_r+0x48c>
 4004dc8:	10c00015 	stw	r3,0(r2)
 4004dcc:	80c00117 	ldw	r3,4(r16)
 4004dd0:	00bfff04 	movi	r2,-4
 4004dd4:	1886703a 	and	r3,r3,r2
 4004dd8:	1c45c83a 	sub	r2,r3,r17
 4004ddc:	1c400236 	bltu	r3,r17,4004de8 <_malloc_r+0x4a8>
 4004de0:	00c003c4 	movi	r3,15
 4004de4:	18800416 	blt	r3,r2,4004df8 <_malloc_r+0x4b8>
 4004de8:	9009883a 	mov	r4,r18
 4004dec:	400bf380 	call	400bf38 <__malloc_unlock>
 4004df0:	0005883a 	mov	r2,zero
 4004df4:	003f7b06 	br	4004be4 <__alt_mem_onchip_memory2_0+0xfbfffa24>
 4004df8:	88c00054 	ori	r3,r17,1
 4004dfc:	80c00115 	stw	r3,4(r16)
 4004e00:	8463883a 	add	r17,r16,r17
 4004e04:	10800054 	ori	r2,r2,1
 4004e08:	9c400215 	stw	r17,8(r19)
 4004e0c:	88800115 	stw	r2,4(r17)
 4004e10:	9009883a 	mov	r4,r18
 4004e14:	400bf380 	call	400bf38 <__malloc_unlock>
 4004e18:	80800204 	addi	r2,r16,8
 4004e1c:	003f7106 	br	4004be4 <__alt_mem_onchip_memory2_0+0xfbfffa24>
 4004e20:	00c00504 	movi	r3,20
 4004e24:	18804a2e 	bgeu	r3,r2,4004f50 <_malloc_r+0x610>
 4004e28:	00c01504 	movi	r3,84
 4004e2c:	18806e36 	bltu	r3,r2,4004fe8 <_malloc_r+0x6a8>
 4004e30:	8804d33a 	srli	r2,r17,12
 4004e34:	12001bc4 	addi	r8,r2,111
 4004e38:	11c01b84 	addi	r7,r2,110
 4004e3c:	4209883a 	add	r4,r8,r8
 4004e40:	003edd06 	br	40049b8 <__alt_mem_onchip_memory2_0+0xfbfff7f8>
 4004e44:	3804d27a 	srli	r2,r7,9
 4004e48:	00c00104 	movi	r3,4
 4004e4c:	1880442e 	bgeu	r3,r2,4004f60 <_malloc_r+0x620>
 4004e50:	00c00504 	movi	r3,20
 4004e54:	18808136 	bltu	r3,r2,400505c <_malloc_r+0x71c>
 4004e58:	11401704 	addi	r5,r2,92
 4004e5c:	10c016c4 	addi	r3,r2,91
 4004e60:	294b883a 	add	r5,r5,r5
 4004e64:	294b883a 	add	r5,r5,r5
 4004e68:	294b883a 	add	r5,r5,r5
 4004e6c:	994b883a 	add	r5,r19,r5
 4004e70:	28800017 	ldw	r2,0(r5)
 4004e74:	01810074 	movhi	r6,1025
 4004e78:	297ffe04 	addi	r5,r5,-8
 4004e7c:	31bb0e04 	addi	r6,r6,-5064
 4004e80:	28806526 	beq	r5,r2,4005018 <_malloc_r+0x6d8>
 4004e84:	01bfff04 	movi	r6,-4
 4004e88:	10c00117 	ldw	r3,4(r2)
 4004e8c:	1986703a 	and	r3,r3,r6
 4004e90:	38c0022e 	bgeu	r7,r3,4004e9c <_malloc_r+0x55c>
 4004e94:	10800217 	ldw	r2,8(r2)
 4004e98:	28bffb1e 	bne	r5,r2,4004e88 <__alt_mem_onchip_memory2_0+0xfbfffcc8>
 4004e9c:	11400317 	ldw	r5,12(r2)
 4004ea0:	98c00117 	ldw	r3,4(r19)
 4004ea4:	81400315 	stw	r5,12(r16)
 4004ea8:	80800215 	stw	r2,8(r16)
 4004eac:	2c000215 	stw	r16,8(r5)
 4004eb0:	14000315 	stw	r16,12(r2)
 4004eb4:	003ef806 	br	4004a98 <__alt_mem_onchip_memory2_0+0xfbfff8d8>
 4004eb8:	88c00054 	ori	r3,r17,1
 4004ebc:	80c00115 	stw	r3,4(r16)
 4004ec0:	8463883a 	add	r17,r16,r17
 4004ec4:	34400515 	stw	r17,20(r6)
 4004ec8:	34400415 	stw	r17,16(r6)
 4004ecc:	10c00054 	ori	r3,r2,1
 4004ed0:	8a000315 	stw	r8,12(r17)
 4004ed4:	8a000215 	stw	r8,8(r17)
 4004ed8:	88c00115 	stw	r3,4(r17)
 4004edc:	88a3883a 	add	r17,r17,r2
 4004ee0:	88800015 	stw	r2,0(r17)
 4004ee4:	9009883a 	mov	r4,r18
 4004ee8:	400bf380 	call	400bf38 <__malloc_unlock>
 4004eec:	80800204 	addi	r2,r16,8
 4004ef0:	003f3c06 	br	4004be4 <__alt_mem_onchip_memory2_0+0xfbfffa24>
 4004ef4:	30c00117 	ldw	r3,4(r6)
 4004ef8:	003ee706 	br	4004a98 <__alt_mem_onchip_memory2_0+0xfbfff8d8>
 4004efc:	5ac00044 	addi	r11,r11,1
 4004f00:	588000cc 	andi	r2,r11,3
 4004f04:	31800204 	addi	r6,r6,8
 4004f08:	103efd1e 	bne	r2,zero,4004b00 <__alt_mem_onchip_memory2_0+0xfbfff940>
 4004f0c:	00002406 	br	4004fa0 <_malloc_r+0x660>
 4004f10:	14000317 	ldw	r16,12(r2)
 4004f14:	143f251e 	bne	r2,r16,4004bac <__alt_mem_onchip_memory2_0+0xfbfff9ec>
 4004f18:	21000084 	addi	r4,r4,2
 4004f1c:	003ebc06 	br	4004a10 <__alt_mem_onchip_memory2_0+0xfbfff850>
 4004f20:	8085883a 	add	r2,r16,r2
 4004f24:	10c00117 	ldw	r3,4(r2)
 4004f28:	81000317 	ldw	r4,12(r16)
 4004f2c:	81400217 	ldw	r5,8(r16)
 4004f30:	18c00054 	ori	r3,r3,1
 4004f34:	10c00115 	stw	r3,4(r2)
 4004f38:	29000315 	stw	r4,12(r5)
 4004f3c:	21400215 	stw	r5,8(r4)
 4004f40:	9009883a 	mov	r4,r18
 4004f44:	400bf380 	call	400bf38 <__malloc_unlock>
 4004f48:	80800204 	addi	r2,r16,8
 4004f4c:	003f2506 	br	4004be4 <__alt_mem_onchip_memory2_0+0xfbfffa24>
 4004f50:	12001704 	addi	r8,r2,92
 4004f54:	11c016c4 	addi	r7,r2,91
 4004f58:	4209883a 	add	r4,r8,r8
 4004f5c:	003e9606 	br	40049b8 <__alt_mem_onchip_memory2_0+0xfbfff7f8>
 4004f60:	3804d1ba 	srli	r2,r7,6
 4004f64:	11400e44 	addi	r5,r2,57
 4004f68:	10c00e04 	addi	r3,r2,56
 4004f6c:	294b883a 	add	r5,r5,r5
 4004f70:	003fbc06 	br	4004e64 <__alt_mem_onchip_memory2_0+0xfbfffca4>
 4004f74:	84ff5926 	beq	r16,r19,4004cdc <__alt_mem_onchip_memory2_0+0xfbfffb1c>
 4004f78:	00810074 	movhi	r2,1025
 4004f7c:	10bb0e04 	addi	r2,r2,-5064
 4004f80:	14000217 	ldw	r16,8(r2)
 4004f84:	00bfff04 	movi	r2,-4
 4004f88:	80c00117 	ldw	r3,4(r16)
 4004f8c:	1886703a 	and	r3,r3,r2
 4004f90:	003f9106 	br	4004dd8 <__alt_mem_onchip_memory2_0+0xfbfffc18>
 4004f94:	60800217 	ldw	r2,8(r12)
 4004f98:	213fffc4 	addi	r4,r4,-1
 4004f9c:	1300651e 	bne	r2,r12,4005134 <_malloc_r+0x7f4>
 4004fa0:	208000cc 	andi	r2,r4,3
 4004fa4:	633ffe04 	addi	r12,r12,-8
 4004fa8:	103ffa1e 	bne	r2,zero,4004f94 <__alt_mem_onchip_memory2_0+0xfbfffdd4>
 4004fac:	98800117 	ldw	r2,4(r19)
 4004fb0:	0146303a 	nor	r3,zero,r5
 4004fb4:	1884703a 	and	r2,r3,r2
 4004fb8:	98800115 	stw	r2,4(r19)
 4004fbc:	294b883a 	add	r5,r5,r5
 4004fc0:	117f2836 	bltu	r2,r5,4004c64 <__alt_mem_onchip_memory2_0+0xfbfffaa4>
 4004fc4:	283f2726 	beq	r5,zero,4004c64 <__alt_mem_onchip_memory2_0+0xfbfffaa4>
 4004fc8:	2886703a 	and	r3,r5,r2
 4004fcc:	5809883a 	mov	r4,r11
 4004fd0:	183ec31e 	bne	r3,zero,4004ae0 <__alt_mem_onchip_memory2_0+0xfbfff920>
 4004fd4:	294b883a 	add	r5,r5,r5
 4004fd8:	2886703a 	and	r3,r5,r2
 4004fdc:	21000104 	addi	r4,r4,4
 4004fe0:	183ffc26 	beq	r3,zero,4004fd4 <__alt_mem_onchip_memory2_0+0xfbfffe14>
 4004fe4:	003ebe06 	br	4004ae0 <__alt_mem_onchip_memory2_0+0xfbfff920>
 4004fe8:	00c05504 	movi	r3,340
 4004fec:	18801236 	bltu	r3,r2,4005038 <_malloc_r+0x6f8>
 4004ff0:	8804d3fa 	srli	r2,r17,15
 4004ff4:	12001e04 	addi	r8,r2,120
 4004ff8:	11c01dc4 	addi	r7,r2,119
 4004ffc:	4209883a 	add	r4,r8,r8
 4005000:	003e6d06 	br	40049b8 <__alt_mem_onchip_memory2_0+0xfbfff7f8>
 4005004:	00c40004 	movi	r3,4096
 4005008:	003f4606 	br	4004d24 <__alt_mem_onchip_memory2_0+0xfbfffb64>
 400500c:	00800044 	movi	r2,1
 4005010:	a0800115 	stw	r2,4(r20)
 4005014:	003f7406 	br	4004de8 <__alt_mem_onchip_memory2_0+0xfbfffc28>
 4005018:	1805d0ba 	srai	r2,r3,2
 400501c:	01c00044 	movi	r7,1
 4005020:	30c00117 	ldw	r3,4(r6)
 4005024:	388e983a 	sll	r7,r7,r2
 4005028:	2805883a 	mov	r2,r5
 400502c:	38c6b03a 	or	r3,r7,r3
 4005030:	30c00115 	stw	r3,4(r6)
 4005034:	003f9b06 	br	4004ea4 <__alt_mem_onchip_memory2_0+0xfbfffce4>
 4005038:	00c15504 	movi	r3,1364
 400503c:	18801a36 	bltu	r3,r2,40050a8 <_malloc_r+0x768>
 4005040:	8804d4ba 	srli	r2,r17,18
 4005044:	12001f44 	addi	r8,r2,125
 4005048:	11c01f04 	addi	r7,r2,124
 400504c:	4209883a 	add	r4,r8,r8
 4005050:	003e5906 	br	40049b8 <__alt_mem_onchip_memory2_0+0xfbfff7f8>
 4005054:	ad400404 	addi	r21,r21,16
 4005058:	003f1706 	br	4004cb8 <__alt_mem_onchip_memory2_0+0xfbfffaf8>
 400505c:	00c01504 	movi	r3,84
 4005060:	18802336 	bltu	r3,r2,40050f0 <_malloc_r+0x7b0>
 4005064:	3804d33a 	srli	r2,r7,12
 4005068:	11401bc4 	addi	r5,r2,111
 400506c:	10c01b84 	addi	r3,r2,110
 4005070:	294b883a 	add	r5,r5,r5
 4005074:	003f7b06 	br	4004e64 <__alt_mem_onchip_memory2_0+0xfbfffca4>
 4005078:	9c000217 	ldw	r16,8(r19)
 400507c:	00bfff04 	movi	r2,-4
 4005080:	80c00117 	ldw	r3,4(r16)
 4005084:	1886703a 	and	r3,r3,r2
 4005088:	003f5306 	br	4004dd8 <__alt_mem_onchip_memory2_0+0xfbfffc18>
 400508c:	3083ffcc 	andi	r2,r6,4095
 4005090:	103f181e 	bne	r2,zero,4004cf4 <__alt_mem_onchip_memory2_0+0xfbfffb34>
 4005094:	99000217 	ldw	r4,8(r19)
 4005098:	b545883a 	add	r2,r22,r21
 400509c:	10800054 	ori	r2,r2,1
 40050a0:	20800115 	stw	r2,4(r4)
 40050a4:	003f3e06 	br	4004da0 <__alt_mem_onchip_memory2_0+0xfbfffbe0>
 40050a8:	01003f84 	movi	r4,254
 40050ac:	02001fc4 	movi	r8,127
 40050b0:	01c01f84 	movi	r7,126
 40050b4:	003e4006 	br	40049b8 <__alt_mem_onchip_memory2_0+0xfbfff7f8>
 40050b8:	00810074 	movhi	r2,1025
 40050bc:	10809704 	addi	r2,r2,604
 40050c0:	15000015 	stw	r20,0(r2)
 40050c4:	003f1106 	br	4004d0c <__alt_mem_onchip_memory2_0+0xfbfffb4c>
 40050c8:	00800044 	movi	r2,1
 40050cc:	002b883a 	mov	r21,zero
 40050d0:	003f1f06 	br	4004d50 <__alt_mem_onchip_memory2_0+0xfbfffb90>
 40050d4:	81400204 	addi	r5,r16,8
 40050d8:	9009883a 	mov	r4,r18
 40050dc:	4007d440 	call	4007d44 <_free_r>
 40050e0:	00810074 	movhi	r2,1025
 40050e4:	10882504 	addi	r2,r2,8340
 40050e8:	10c00017 	ldw	r3,0(r2)
 40050ec:	003f2c06 	br	4004da0 <__alt_mem_onchip_memory2_0+0xfbfffbe0>
 40050f0:	00c05504 	movi	r3,340
 40050f4:	18800536 	bltu	r3,r2,400510c <_malloc_r+0x7cc>
 40050f8:	3804d3fa 	srli	r2,r7,15
 40050fc:	11401e04 	addi	r5,r2,120
 4005100:	10c01dc4 	addi	r3,r2,119
 4005104:	294b883a 	add	r5,r5,r5
 4005108:	003f5606 	br	4004e64 <__alt_mem_onchip_memory2_0+0xfbfffca4>
 400510c:	00c15504 	movi	r3,1364
 4005110:	18800536 	bltu	r3,r2,4005128 <_malloc_r+0x7e8>
 4005114:	3804d4ba 	srli	r2,r7,18
 4005118:	11401f44 	addi	r5,r2,125
 400511c:	10c01f04 	addi	r3,r2,124
 4005120:	294b883a 	add	r5,r5,r5
 4005124:	003f4f06 	br	4004e64 <__alt_mem_onchip_memory2_0+0xfbfffca4>
 4005128:	01403f84 	movi	r5,254
 400512c:	00c01f84 	movi	r3,126
 4005130:	003f4c06 	br	4004e64 <__alt_mem_onchip_memory2_0+0xfbfffca4>
 4005134:	98800117 	ldw	r2,4(r19)
 4005138:	003fa006 	br	4004fbc <__alt_mem_onchip_memory2_0+0xfbfffdfc>
 400513c:	8808d0fa 	srli	r4,r17,3
 4005140:	20800044 	addi	r2,r4,1
 4005144:	1085883a 	add	r2,r2,r2
 4005148:	003e9006 	br	4004b8c <__alt_mem_onchip_memory2_0+0xfbfff9cc>

0400514c <memchr>:
 400514c:	208000cc 	andi	r2,r4,3
 4005150:	280f883a 	mov	r7,r5
 4005154:	10003426 	beq	r2,zero,4005228 <memchr+0xdc>
 4005158:	30bfffc4 	addi	r2,r6,-1
 400515c:	30001a26 	beq	r6,zero,40051c8 <memchr+0x7c>
 4005160:	20c00003 	ldbu	r3,0(r4)
 4005164:	29803fcc 	andi	r6,r5,255
 4005168:	30c0051e 	bne	r6,r3,4005180 <memchr+0x34>
 400516c:	00001806 	br	40051d0 <memchr+0x84>
 4005170:	10001526 	beq	r2,zero,40051c8 <memchr+0x7c>
 4005174:	20c00003 	ldbu	r3,0(r4)
 4005178:	10bfffc4 	addi	r2,r2,-1
 400517c:	30c01426 	beq	r6,r3,40051d0 <memchr+0x84>
 4005180:	21000044 	addi	r4,r4,1
 4005184:	20c000cc 	andi	r3,r4,3
 4005188:	183ff91e 	bne	r3,zero,4005170 <__alt_mem_onchip_memory2_0+0xfbffffb0>
 400518c:	020000c4 	movi	r8,3
 4005190:	40801136 	bltu	r8,r2,40051d8 <memchr+0x8c>
 4005194:	10000c26 	beq	r2,zero,40051c8 <memchr+0x7c>
 4005198:	20c00003 	ldbu	r3,0(r4)
 400519c:	29403fcc 	andi	r5,r5,255
 40051a0:	28c00b26 	beq	r5,r3,40051d0 <memchr+0x84>
 40051a4:	20c00044 	addi	r3,r4,1
 40051a8:	39803fcc 	andi	r6,r7,255
 40051ac:	2089883a 	add	r4,r4,r2
 40051b0:	00000306 	br	40051c0 <memchr+0x74>
 40051b4:	18c00044 	addi	r3,r3,1
 40051b8:	197fffc3 	ldbu	r5,-1(r3)
 40051bc:	31400526 	beq	r6,r5,40051d4 <memchr+0x88>
 40051c0:	1805883a 	mov	r2,r3
 40051c4:	20fffb1e 	bne	r4,r3,40051b4 <__alt_mem_onchip_memory2_0+0xfbfffff4>
 40051c8:	0005883a 	mov	r2,zero
 40051cc:	f800283a 	ret
 40051d0:	2005883a 	mov	r2,r4
 40051d4:	f800283a 	ret
 40051d8:	28c03fcc 	andi	r3,r5,255
 40051dc:	1812923a 	slli	r9,r3,8
 40051e0:	02ffbff4 	movhi	r11,65279
 40051e4:	02a02074 	movhi	r10,32897
 40051e8:	48d2b03a 	or	r9,r9,r3
 40051ec:	4806943a 	slli	r3,r9,16
 40051f0:	5affbfc4 	addi	r11,r11,-257
 40051f4:	52a02004 	addi	r10,r10,-32640
 40051f8:	48d2b03a 	or	r9,r9,r3
 40051fc:	20c00017 	ldw	r3,0(r4)
 4005200:	48c6f03a 	xor	r3,r9,r3
 4005204:	1acd883a 	add	r6,r3,r11
 4005208:	00c6303a 	nor	r3,zero,r3
 400520c:	30c6703a 	and	r3,r6,r3
 4005210:	1a86703a 	and	r3,r3,r10
 4005214:	183fe01e 	bne	r3,zero,4005198 <__alt_mem_onchip_memory2_0+0xfbffffd8>
 4005218:	10bfff04 	addi	r2,r2,-4
 400521c:	21000104 	addi	r4,r4,4
 4005220:	40bff636 	bltu	r8,r2,40051fc <__alt_mem_onchip_memory2_0+0xfc00003c>
 4005224:	003fdb06 	br	4005194 <__alt_mem_onchip_memory2_0+0xfbffffd4>
 4005228:	3005883a 	mov	r2,r6
 400522c:	003fd706 	br	400518c <__alt_mem_onchip_memory2_0+0xfbffffcc>

04005230 <memcpy>:
 4005230:	defffd04 	addi	sp,sp,-12
 4005234:	dfc00215 	stw	ra,8(sp)
 4005238:	dc400115 	stw	r17,4(sp)
 400523c:	dc000015 	stw	r16,0(sp)
 4005240:	00c003c4 	movi	r3,15
 4005244:	2005883a 	mov	r2,r4
 4005248:	1980452e 	bgeu	r3,r6,4005360 <memcpy+0x130>
 400524c:	2906b03a 	or	r3,r5,r4
 4005250:	18c000cc 	andi	r3,r3,3
 4005254:	1800441e 	bne	r3,zero,4005368 <memcpy+0x138>
 4005258:	347ffc04 	addi	r17,r6,-16
 400525c:	8822d13a 	srli	r17,r17,4
 4005260:	28c00104 	addi	r3,r5,4
 4005264:	23400104 	addi	r13,r4,4
 4005268:	8820913a 	slli	r16,r17,4
 400526c:	2b000204 	addi	r12,r5,8
 4005270:	22c00204 	addi	r11,r4,8
 4005274:	84000504 	addi	r16,r16,20
 4005278:	2a800304 	addi	r10,r5,12
 400527c:	22400304 	addi	r9,r4,12
 4005280:	2c21883a 	add	r16,r5,r16
 4005284:	2811883a 	mov	r8,r5
 4005288:	200f883a 	mov	r7,r4
 400528c:	41000017 	ldw	r4,0(r8)
 4005290:	1fc00017 	ldw	ra,0(r3)
 4005294:	63c00017 	ldw	r15,0(r12)
 4005298:	39000015 	stw	r4,0(r7)
 400529c:	53800017 	ldw	r14,0(r10)
 40052a0:	6fc00015 	stw	ra,0(r13)
 40052a4:	5bc00015 	stw	r15,0(r11)
 40052a8:	4b800015 	stw	r14,0(r9)
 40052ac:	18c00404 	addi	r3,r3,16
 40052b0:	39c00404 	addi	r7,r7,16
 40052b4:	42000404 	addi	r8,r8,16
 40052b8:	6b400404 	addi	r13,r13,16
 40052bc:	63000404 	addi	r12,r12,16
 40052c0:	5ac00404 	addi	r11,r11,16
 40052c4:	52800404 	addi	r10,r10,16
 40052c8:	4a400404 	addi	r9,r9,16
 40052cc:	1c3fef1e 	bne	r3,r16,400528c <__alt_mem_onchip_memory2_0+0xfc0000cc>
 40052d0:	89c00044 	addi	r7,r17,1
 40052d4:	380e913a 	slli	r7,r7,4
 40052d8:	310003cc 	andi	r4,r6,15
 40052dc:	02c000c4 	movi	r11,3
 40052e0:	11c7883a 	add	r3,r2,r7
 40052e4:	29cb883a 	add	r5,r5,r7
 40052e8:	5900212e 	bgeu	r11,r4,4005370 <memcpy+0x140>
 40052ec:	1813883a 	mov	r9,r3
 40052f0:	2811883a 	mov	r8,r5
 40052f4:	200f883a 	mov	r7,r4
 40052f8:	42800017 	ldw	r10,0(r8)
 40052fc:	4a400104 	addi	r9,r9,4
 4005300:	39ffff04 	addi	r7,r7,-4
 4005304:	4abfff15 	stw	r10,-4(r9)
 4005308:	42000104 	addi	r8,r8,4
 400530c:	59fffa36 	bltu	r11,r7,40052f8 <__alt_mem_onchip_memory2_0+0xfc000138>
 4005310:	213fff04 	addi	r4,r4,-4
 4005314:	2008d0ba 	srli	r4,r4,2
 4005318:	318000cc 	andi	r6,r6,3
 400531c:	21000044 	addi	r4,r4,1
 4005320:	2109883a 	add	r4,r4,r4
 4005324:	2109883a 	add	r4,r4,r4
 4005328:	1907883a 	add	r3,r3,r4
 400532c:	290b883a 	add	r5,r5,r4
 4005330:	30000626 	beq	r6,zero,400534c <memcpy+0x11c>
 4005334:	198d883a 	add	r6,r3,r6
 4005338:	29c00003 	ldbu	r7,0(r5)
 400533c:	18c00044 	addi	r3,r3,1
 4005340:	29400044 	addi	r5,r5,1
 4005344:	19ffffc5 	stb	r7,-1(r3)
 4005348:	19bffb1e 	bne	r3,r6,4005338 <__alt_mem_onchip_memory2_0+0xfc000178>
 400534c:	dfc00217 	ldw	ra,8(sp)
 4005350:	dc400117 	ldw	r17,4(sp)
 4005354:	dc000017 	ldw	r16,0(sp)
 4005358:	dec00304 	addi	sp,sp,12
 400535c:	f800283a 	ret
 4005360:	2007883a 	mov	r3,r4
 4005364:	003ff206 	br	4005330 <__alt_mem_onchip_memory2_0+0xfc000170>
 4005368:	2007883a 	mov	r3,r4
 400536c:	003ff106 	br	4005334 <__alt_mem_onchip_memory2_0+0xfc000174>
 4005370:	200d883a 	mov	r6,r4
 4005374:	003fee06 	br	4005330 <__alt_mem_onchip_memory2_0+0xfc000170>

04005378 <_Balloc>:
 4005378:	20801317 	ldw	r2,76(r4)
 400537c:	defffc04 	addi	sp,sp,-16
 4005380:	dc400115 	stw	r17,4(sp)
 4005384:	dc000015 	stw	r16,0(sp)
 4005388:	dfc00315 	stw	ra,12(sp)
 400538c:	dc800215 	stw	r18,8(sp)
 4005390:	2023883a 	mov	r17,r4
 4005394:	2821883a 	mov	r16,r5
 4005398:	10000f26 	beq	r2,zero,40053d8 <_Balloc+0x60>
 400539c:	8407883a 	add	r3,r16,r16
 40053a0:	18c7883a 	add	r3,r3,r3
 40053a4:	10c7883a 	add	r3,r2,r3
 40053a8:	18800017 	ldw	r2,0(r3)
 40053ac:	10001126 	beq	r2,zero,40053f4 <_Balloc+0x7c>
 40053b0:	11000017 	ldw	r4,0(r2)
 40053b4:	19000015 	stw	r4,0(r3)
 40053b8:	10000415 	stw	zero,16(r2)
 40053bc:	10000315 	stw	zero,12(r2)
 40053c0:	dfc00317 	ldw	ra,12(sp)
 40053c4:	dc800217 	ldw	r18,8(sp)
 40053c8:	dc400117 	ldw	r17,4(sp)
 40053cc:	dc000017 	ldw	r16,0(sp)
 40053d0:	dec00404 	addi	sp,sp,16
 40053d4:	f800283a 	ret
 40053d8:	01800844 	movi	r6,33
 40053dc:	01400104 	movi	r5,4
 40053e0:	4007b440 	call	4007b44 <_calloc_r>
 40053e4:	88801315 	stw	r2,76(r17)
 40053e8:	103fec1e 	bne	r2,zero,400539c <__alt_mem_onchip_memory2_0+0xfc0001dc>
 40053ec:	0005883a 	mov	r2,zero
 40053f0:	003ff306 	br	40053c0 <__alt_mem_onchip_memory2_0+0xfc000200>
 40053f4:	01400044 	movi	r5,1
 40053f8:	2c24983a 	sll	r18,r5,r16
 40053fc:	8809883a 	mov	r4,r17
 4005400:	91800144 	addi	r6,r18,5
 4005404:	318d883a 	add	r6,r6,r6
 4005408:	318d883a 	add	r6,r6,r6
 400540c:	4007b440 	call	4007b44 <_calloc_r>
 4005410:	103ff626 	beq	r2,zero,40053ec <__alt_mem_onchip_memory2_0+0xfc00022c>
 4005414:	14000115 	stw	r16,4(r2)
 4005418:	14800215 	stw	r18,8(r2)
 400541c:	003fe606 	br	40053b8 <__alt_mem_onchip_memory2_0+0xfc0001f8>

04005420 <_Bfree>:
 4005420:	28000826 	beq	r5,zero,4005444 <_Bfree+0x24>
 4005424:	28c00117 	ldw	r3,4(r5)
 4005428:	20801317 	ldw	r2,76(r4)
 400542c:	18c7883a 	add	r3,r3,r3
 4005430:	18c7883a 	add	r3,r3,r3
 4005434:	10c5883a 	add	r2,r2,r3
 4005438:	10c00017 	ldw	r3,0(r2)
 400543c:	28c00015 	stw	r3,0(r5)
 4005440:	11400015 	stw	r5,0(r2)
 4005444:	f800283a 	ret

04005448 <__multadd>:
 4005448:	defff704 	addi	sp,sp,-36
 400544c:	dc800215 	stw	r18,8(sp)
 4005450:	2c800417 	ldw	r18,16(r5)
 4005454:	dd800615 	stw	r22,24(sp)
 4005458:	dd400515 	stw	r21,20(sp)
 400545c:	dd000415 	stw	r20,16(sp)
 4005460:	dcc00315 	stw	r19,12(sp)
 4005464:	dc400115 	stw	r17,4(sp)
 4005468:	dc000015 	stw	r16,0(sp)
 400546c:	dfc00815 	stw	ra,32(sp)
 4005470:	ddc00715 	stw	r23,28(sp)
 4005474:	2827883a 	mov	r19,r5
 4005478:	2029883a 	mov	r20,r4
 400547c:	3023883a 	mov	r17,r6
 4005480:	3821883a 	mov	r16,r7
 4005484:	2d400504 	addi	r21,r5,20
 4005488:	002d883a 	mov	r22,zero
 400548c:	adc00017 	ldw	r23,0(r21)
 4005490:	880b883a 	mov	r5,r17
 4005494:	ad400104 	addi	r21,r21,4
 4005498:	b93fffcc 	andi	r4,r23,65535
 400549c:	4000af80 	call	4000af8 <__mulsi3>
 40054a0:	b808d43a 	srli	r4,r23,16
 40054a4:	880b883a 	mov	r5,r17
 40054a8:	1421883a 	add	r16,r2,r16
 40054ac:	4000af80 	call	4000af8 <__mulsi3>
 40054b0:	800ed43a 	srli	r7,r16,16
 40054b4:	80ffffcc 	andi	r3,r16,65535
 40054b8:	b5800044 	addi	r22,r22,1
 40054bc:	11c5883a 	add	r2,r2,r7
 40054c0:	100e943a 	slli	r7,r2,16
 40054c4:	1020d43a 	srli	r16,r2,16
 40054c8:	38c7883a 	add	r3,r7,r3
 40054cc:	a8ffff15 	stw	r3,-4(r21)
 40054d0:	b4bfee16 	blt	r22,r18,400548c <__alt_mem_onchip_memory2_0+0xfc0002cc>
 40054d4:	80000926 	beq	r16,zero,40054fc <__multadd+0xb4>
 40054d8:	98800217 	ldw	r2,8(r19)
 40054dc:	9080130e 	bge	r18,r2,400552c <__multadd+0xe4>
 40054e0:	90800144 	addi	r2,r18,5
 40054e4:	1085883a 	add	r2,r2,r2
 40054e8:	1085883a 	add	r2,r2,r2
 40054ec:	9885883a 	add	r2,r19,r2
 40054f0:	14000015 	stw	r16,0(r2)
 40054f4:	94800044 	addi	r18,r18,1
 40054f8:	9c800415 	stw	r18,16(r19)
 40054fc:	9805883a 	mov	r2,r19
 4005500:	dfc00817 	ldw	ra,32(sp)
 4005504:	ddc00717 	ldw	r23,28(sp)
 4005508:	dd800617 	ldw	r22,24(sp)
 400550c:	dd400517 	ldw	r21,20(sp)
 4005510:	dd000417 	ldw	r20,16(sp)
 4005514:	dcc00317 	ldw	r19,12(sp)
 4005518:	dc800217 	ldw	r18,8(sp)
 400551c:	dc400117 	ldw	r17,4(sp)
 4005520:	dc000017 	ldw	r16,0(sp)
 4005524:	dec00904 	addi	sp,sp,36
 4005528:	f800283a 	ret
 400552c:	99400117 	ldw	r5,4(r19)
 4005530:	a009883a 	mov	r4,r20
 4005534:	29400044 	addi	r5,r5,1
 4005538:	40053780 	call	4005378 <_Balloc>
 400553c:	99800417 	ldw	r6,16(r19)
 4005540:	99400304 	addi	r5,r19,12
 4005544:	11000304 	addi	r4,r2,12
 4005548:	31800084 	addi	r6,r6,2
 400554c:	318d883a 	add	r6,r6,r6
 4005550:	318d883a 	add	r6,r6,r6
 4005554:	1023883a 	mov	r17,r2
 4005558:	40052300 	call	4005230 <memcpy>
 400555c:	98000a26 	beq	r19,zero,4005588 <__multadd+0x140>
 4005560:	98c00117 	ldw	r3,4(r19)
 4005564:	a0801317 	ldw	r2,76(r20)
 4005568:	18c7883a 	add	r3,r3,r3
 400556c:	18c7883a 	add	r3,r3,r3
 4005570:	10c5883a 	add	r2,r2,r3
 4005574:	10c00017 	ldw	r3,0(r2)
 4005578:	98c00015 	stw	r3,0(r19)
 400557c:	14c00015 	stw	r19,0(r2)
 4005580:	8827883a 	mov	r19,r17
 4005584:	003fd606 	br	40054e0 <__alt_mem_onchip_memory2_0+0xfc000320>
 4005588:	8827883a 	mov	r19,r17
 400558c:	003fd406 	br	40054e0 <__alt_mem_onchip_memory2_0+0xfc000320>

04005590 <__s2b>:
 4005590:	defff904 	addi	sp,sp,-28
 4005594:	dc400115 	stw	r17,4(sp)
 4005598:	dc000015 	stw	r16,0(sp)
 400559c:	2023883a 	mov	r17,r4
 40055a0:	2821883a 	mov	r16,r5
 40055a4:	39000204 	addi	r4,r7,8
 40055a8:	01400244 	movi	r5,9
 40055ac:	dcc00315 	stw	r19,12(sp)
 40055b0:	dc800215 	stw	r18,8(sp)
 40055b4:	dfc00615 	stw	ra,24(sp)
 40055b8:	dd400515 	stw	r21,20(sp)
 40055bc:	dd000415 	stw	r20,16(sp)
 40055c0:	3825883a 	mov	r18,r7
 40055c4:	3027883a 	mov	r19,r6
 40055c8:	40009440 	call	4000944 <__divsi3>
 40055cc:	00c00044 	movi	r3,1
 40055d0:	000b883a 	mov	r5,zero
 40055d4:	1880030e 	bge	r3,r2,40055e4 <__s2b+0x54>
 40055d8:	18c7883a 	add	r3,r3,r3
 40055dc:	29400044 	addi	r5,r5,1
 40055e0:	18bffd16 	blt	r3,r2,40055d8 <__alt_mem_onchip_memory2_0+0xfc000418>
 40055e4:	8809883a 	mov	r4,r17
 40055e8:	40053780 	call	4005378 <_Balloc>
 40055ec:	d8c00717 	ldw	r3,28(sp)
 40055f0:	10c00515 	stw	r3,20(r2)
 40055f4:	00c00044 	movi	r3,1
 40055f8:	10c00415 	stw	r3,16(r2)
 40055fc:	00c00244 	movi	r3,9
 4005600:	1cc0210e 	bge	r3,r19,4005688 <__s2b+0xf8>
 4005604:	80eb883a 	add	r21,r16,r3
 4005608:	a829883a 	mov	r20,r21
 400560c:	84e1883a 	add	r16,r16,r19
 4005610:	a1c00007 	ldb	r7,0(r20)
 4005614:	01800284 	movi	r6,10
 4005618:	a5000044 	addi	r20,r20,1
 400561c:	100b883a 	mov	r5,r2
 4005620:	39fff404 	addi	r7,r7,-48
 4005624:	8809883a 	mov	r4,r17
 4005628:	40054480 	call	4005448 <__multadd>
 400562c:	a43ff81e 	bne	r20,r16,4005610 <__alt_mem_onchip_memory2_0+0xfc000450>
 4005630:	ace1883a 	add	r16,r21,r19
 4005634:	843ffe04 	addi	r16,r16,-8
 4005638:	9c800a0e 	bge	r19,r18,4005664 <__s2b+0xd4>
 400563c:	94e5c83a 	sub	r18,r18,r19
 4005640:	84a5883a 	add	r18,r16,r18
 4005644:	81c00007 	ldb	r7,0(r16)
 4005648:	01800284 	movi	r6,10
 400564c:	84000044 	addi	r16,r16,1
 4005650:	100b883a 	mov	r5,r2
 4005654:	39fff404 	addi	r7,r7,-48
 4005658:	8809883a 	mov	r4,r17
 400565c:	40054480 	call	4005448 <__multadd>
 4005660:	84bff81e 	bne	r16,r18,4005644 <__alt_mem_onchip_memory2_0+0xfc000484>
 4005664:	dfc00617 	ldw	ra,24(sp)
 4005668:	dd400517 	ldw	r21,20(sp)
 400566c:	dd000417 	ldw	r20,16(sp)
 4005670:	dcc00317 	ldw	r19,12(sp)
 4005674:	dc800217 	ldw	r18,8(sp)
 4005678:	dc400117 	ldw	r17,4(sp)
 400567c:	dc000017 	ldw	r16,0(sp)
 4005680:	dec00704 	addi	sp,sp,28
 4005684:	f800283a 	ret
 4005688:	84000284 	addi	r16,r16,10
 400568c:	1827883a 	mov	r19,r3
 4005690:	003fe906 	br	4005638 <__alt_mem_onchip_memory2_0+0xfc000478>

04005694 <__hi0bits>:
 4005694:	20bfffec 	andhi	r2,r4,65535
 4005698:	1000141e 	bne	r2,zero,40056ec <__hi0bits+0x58>
 400569c:	2008943a 	slli	r4,r4,16
 40056a0:	00800404 	movi	r2,16
 40056a4:	20ffc02c 	andhi	r3,r4,65280
 40056a8:	1800021e 	bne	r3,zero,40056b4 <__hi0bits+0x20>
 40056ac:	2008923a 	slli	r4,r4,8
 40056b0:	10800204 	addi	r2,r2,8
 40056b4:	20fc002c 	andhi	r3,r4,61440
 40056b8:	1800021e 	bne	r3,zero,40056c4 <__hi0bits+0x30>
 40056bc:	2008913a 	slli	r4,r4,4
 40056c0:	10800104 	addi	r2,r2,4
 40056c4:	20f0002c 	andhi	r3,r4,49152
 40056c8:	1800031e 	bne	r3,zero,40056d8 <__hi0bits+0x44>
 40056cc:	2109883a 	add	r4,r4,r4
 40056d0:	10800084 	addi	r2,r2,2
 40056d4:	2109883a 	add	r4,r4,r4
 40056d8:	20000316 	blt	r4,zero,40056e8 <__hi0bits+0x54>
 40056dc:	2110002c 	andhi	r4,r4,16384
 40056e0:	2000041e 	bne	r4,zero,40056f4 <__hi0bits+0x60>
 40056e4:	00800804 	movi	r2,32
 40056e8:	f800283a 	ret
 40056ec:	0005883a 	mov	r2,zero
 40056f0:	003fec06 	br	40056a4 <__alt_mem_onchip_memory2_0+0xfc0004e4>
 40056f4:	10800044 	addi	r2,r2,1
 40056f8:	f800283a 	ret

040056fc <__lo0bits>:
 40056fc:	20c00017 	ldw	r3,0(r4)
 4005700:	188001cc 	andi	r2,r3,7
 4005704:	10000826 	beq	r2,zero,4005728 <__lo0bits+0x2c>
 4005708:	1880004c 	andi	r2,r3,1
 400570c:	1000211e 	bne	r2,zero,4005794 <__lo0bits+0x98>
 4005710:	1880008c 	andi	r2,r3,2
 4005714:	1000211e 	bne	r2,zero,400579c <__lo0bits+0xa0>
 4005718:	1806d0ba 	srli	r3,r3,2
 400571c:	00800084 	movi	r2,2
 4005720:	20c00015 	stw	r3,0(r4)
 4005724:	f800283a 	ret
 4005728:	18bfffcc 	andi	r2,r3,65535
 400572c:	10001326 	beq	r2,zero,400577c <__lo0bits+0x80>
 4005730:	0005883a 	mov	r2,zero
 4005734:	19403fcc 	andi	r5,r3,255
 4005738:	2800021e 	bne	r5,zero,4005744 <__lo0bits+0x48>
 400573c:	1806d23a 	srli	r3,r3,8
 4005740:	10800204 	addi	r2,r2,8
 4005744:	194003cc 	andi	r5,r3,15
 4005748:	2800021e 	bne	r5,zero,4005754 <__lo0bits+0x58>
 400574c:	1806d13a 	srli	r3,r3,4
 4005750:	10800104 	addi	r2,r2,4
 4005754:	194000cc 	andi	r5,r3,3
 4005758:	2800021e 	bne	r5,zero,4005764 <__lo0bits+0x68>
 400575c:	1806d0ba 	srli	r3,r3,2
 4005760:	10800084 	addi	r2,r2,2
 4005764:	1940004c 	andi	r5,r3,1
 4005768:	2800081e 	bne	r5,zero,400578c <__lo0bits+0x90>
 400576c:	1806d07a 	srli	r3,r3,1
 4005770:	1800051e 	bne	r3,zero,4005788 <__lo0bits+0x8c>
 4005774:	00800804 	movi	r2,32
 4005778:	f800283a 	ret
 400577c:	1806d43a 	srli	r3,r3,16
 4005780:	00800404 	movi	r2,16
 4005784:	003feb06 	br	4005734 <__alt_mem_onchip_memory2_0+0xfc000574>
 4005788:	10800044 	addi	r2,r2,1
 400578c:	20c00015 	stw	r3,0(r4)
 4005790:	f800283a 	ret
 4005794:	0005883a 	mov	r2,zero
 4005798:	f800283a 	ret
 400579c:	1806d07a 	srli	r3,r3,1
 40057a0:	00800044 	movi	r2,1
 40057a4:	20c00015 	stw	r3,0(r4)
 40057a8:	f800283a 	ret

040057ac <__i2b>:
 40057ac:	defffd04 	addi	sp,sp,-12
 40057b0:	dc000015 	stw	r16,0(sp)
 40057b4:	04000044 	movi	r16,1
 40057b8:	dc400115 	stw	r17,4(sp)
 40057bc:	2823883a 	mov	r17,r5
 40057c0:	800b883a 	mov	r5,r16
 40057c4:	dfc00215 	stw	ra,8(sp)
 40057c8:	40053780 	call	4005378 <_Balloc>
 40057cc:	14400515 	stw	r17,20(r2)
 40057d0:	14000415 	stw	r16,16(r2)
 40057d4:	dfc00217 	ldw	ra,8(sp)
 40057d8:	dc400117 	ldw	r17,4(sp)
 40057dc:	dc000017 	ldw	r16,0(sp)
 40057e0:	dec00304 	addi	sp,sp,12
 40057e4:	f800283a 	ret

040057e8 <__multiply>:
 40057e8:	deffef04 	addi	sp,sp,-68
 40057ec:	dc400815 	stw	r17,32(sp)
 40057f0:	dc000715 	stw	r16,28(sp)
 40057f4:	34400417 	ldw	r17,16(r6)
 40057f8:	2c000417 	ldw	r16,16(r5)
 40057fc:	dd800d15 	stw	r22,52(sp)
 4005800:	dc800915 	stw	r18,36(sp)
 4005804:	dfc01015 	stw	ra,64(sp)
 4005808:	df000f15 	stw	fp,60(sp)
 400580c:	ddc00e15 	stw	r23,56(sp)
 4005810:	dd400c15 	stw	r21,48(sp)
 4005814:	dd000b15 	stw	r20,44(sp)
 4005818:	dcc00a15 	stw	r19,40(sp)
 400581c:	2825883a 	mov	r18,r5
 4005820:	302d883a 	mov	r22,r6
 4005824:	8440050e 	bge	r16,r17,400583c <__multiply+0x54>
 4005828:	8007883a 	mov	r3,r16
 400582c:	3025883a 	mov	r18,r6
 4005830:	8821883a 	mov	r16,r17
 4005834:	282d883a 	mov	r22,r5
 4005838:	1823883a 	mov	r17,r3
 400583c:	90800217 	ldw	r2,8(r18)
 4005840:	8447883a 	add	r3,r16,r17
 4005844:	d8c00215 	stw	r3,8(sp)
 4005848:	91400117 	ldw	r5,4(r18)
 400584c:	10c0010e 	bge	r2,r3,4005854 <__multiply+0x6c>
 4005850:	29400044 	addi	r5,r5,1
 4005854:	40053780 	call	4005378 <_Balloc>
 4005858:	d8c00217 	ldw	r3,8(sp)
 400585c:	d8800615 	stw	r2,24(sp)
 4005860:	18eb883a 	add	r21,r3,r3
 4005864:	ad6b883a 	add	r21,r21,r21
 4005868:	10c00504 	addi	r3,r2,20
 400586c:	1d6b883a 	add	r21,r3,r21
 4005870:	d8c00115 	stw	r3,4(sp)
 4005874:	dd400315 	stw	r21,12(sp)
 4005878:	1805883a 	mov	r2,r3
 400587c:	1d40042e 	bgeu	r3,r21,4005890 <__multiply+0xa8>
 4005880:	d8c00317 	ldw	r3,12(sp)
 4005884:	10000015 	stw	zero,0(r2)
 4005888:	10800104 	addi	r2,r2,4
 400588c:	10fffc36 	bltu	r2,r3,4005880 <__alt_mem_onchip_memory2_0+0xfc0006c0>
 4005890:	8c63883a 	add	r17,r17,r17
 4005894:	b5800504 	addi	r22,r22,20
 4005898:	8c63883a 	add	r17,r17,r17
 400589c:	94800504 	addi	r18,r18,20
 40058a0:	8421883a 	add	r16,r16,r16
 40058a4:	b463883a 	add	r17,r22,r17
 40058a8:	8421883a 	add	r16,r16,r16
 40058ac:	dd800015 	stw	r22,0(sp)
 40058b0:	dc800415 	stw	r18,16(sp)
 40058b4:	dc400515 	stw	r17,20(sp)
 40058b8:	9429883a 	add	r20,r18,r16
 40058bc:	b4404f2e 	bgeu	r22,r17,40059fc <__multiply+0x214>
 40058c0:	d8c00017 	ldw	r3,0(sp)
 40058c4:	1c800017 	ldw	r18,0(r3)
 40058c8:	947fffcc 	andi	r17,r18,65535
 40058cc:	88001e26 	beq	r17,zero,4005948 <__multiply+0x160>
 40058d0:	dd800117 	ldw	r22,4(sp)
 40058d4:	dd400417 	ldw	r21,16(sp)
 40058d8:	0027883a 	mov	r19,zero
 40058dc:	ac800017 	ldw	r18,0(r21)
 40058e0:	b4000017 	ldw	r16,0(r22)
 40058e4:	880b883a 	mov	r5,r17
 40058e8:	913fffcc 	andi	r4,r18,65535
 40058ec:	4000af80 	call	4000af8 <__mulsi3>
 40058f0:	9008d43a 	srli	r4,r18,16
 40058f4:	84bfffcc 	andi	r18,r16,65535
 40058f8:	1485883a 	add	r2,r2,r18
 40058fc:	14e5883a 	add	r18,r2,r19
 4005900:	8020d43a 	srli	r16,r16,16
 4005904:	9026d43a 	srli	r19,r18,16
 4005908:	880b883a 	mov	r5,r17
 400590c:	4000af80 	call	4000af8 <__mulsi3>
 4005910:	1405883a 	add	r2,r2,r16
 4005914:	14e1883a 	add	r16,r2,r19
 4005918:	90ffffcc 	andi	r3,r18,65535
 400591c:	8024943a 	slli	r18,r16,16
 4005920:	ad400104 	addi	r21,r21,4
 4005924:	b005883a 	mov	r2,r22
 4005928:	90c6b03a 	or	r3,r18,r3
 400592c:	b0c00015 	stw	r3,0(r22)
 4005930:	8026d43a 	srli	r19,r16,16
 4005934:	b5800104 	addi	r22,r22,4
 4005938:	ad3fe836 	bltu	r21,r20,40058dc <__alt_mem_onchip_memory2_0+0xfc00071c>
 400593c:	d8c00017 	ldw	r3,0(sp)
 4005940:	14c00115 	stw	r19,4(r2)
 4005944:	1c800017 	ldw	r18,0(r3)
 4005948:	9024d43a 	srli	r18,r18,16
 400594c:	90002226 	beq	r18,zero,40059d8 <__multiply+0x1f0>
 4005950:	d8c00117 	ldw	r3,4(sp)
 4005954:	dd800417 	ldw	r22,16(sp)
 4005958:	002f883a 	mov	r23,zero
 400595c:	1f000017 	ldw	fp,0(r3)
 4005960:	1823883a 	mov	r17,r3
 4005964:	182b883a 	mov	r21,r3
 4005968:	e021883a 	mov	r16,fp
 400596c:	00000106 	br	4005974 <__multiply+0x18c>
 4005970:	982b883a 	mov	r21,r19
 4005974:	b100000b 	ldhu	r4,0(r22)
 4005978:	8020d43a 	srli	r16,r16,16
 400597c:	900b883a 	mov	r5,r18
 4005980:	4000af80 	call	4000af8 <__mulsi3>
 4005984:	1405883a 	add	r2,r2,r16
 4005988:	15ef883a 	add	r23,r2,r23
 400598c:	b804943a 	slli	r2,r23,16
 4005990:	e0ffffcc 	andi	r3,fp,65535
 4005994:	8c400104 	addi	r17,r17,4
 4005998:	10c6b03a 	or	r3,r2,r3
 400599c:	88ffff15 	stw	r3,-4(r17)
 40059a0:	b5800104 	addi	r22,r22,4
 40059a4:	b13fff17 	ldw	r4,-4(r22)
 40059a8:	acc00104 	addi	r19,r21,4
 40059ac:	900b883a 	mov	r5,r18
 40059b0:	2008d43a 	srli	r4,r4,16
 40059b4:	9c000017 	ldw	r16,0(r19)
 40059b8:	4000af80 	call	4000af8 <__mulsi3>
 40059bc:	b806d43a 	srli	r3,r23,16
 40059c0:	813fffcc 	andi	r4,r16,65535
 40059c4:	1105883a 	add	r2,r2,r4
 40059c8:	10f9883a 	add	fp,r2,r3
 40059cc:	e02ed43a 	srli	r23,fp,16
 40059d0:	b53fe736 	bltu	r22,r20,4005970 <__alt_mem_onchip_memory2_0+0xfc0007b0>
 40059d4:	af000115 	stw	fp,4(r21)
 40059d8:	d8c00017 	ldw	r3,0(sp)
 40059dc:	d9000517 	ldw	r4,20(sp)
 40059e0:	18c00104 	addi	r3,r3,4
 40059e4:	d8c00015 	stw	r3,0(sp)
 40059e8:	d8c00117 	ldw	r3,4(sp)
 40059ec:	18c00104 	addi	r3,r3,4
 40059f0:	d8c00115 	stw	r3,4(sp)
 40059f4:	d8c00017 	ldw	r3,0(sp)
 40059f8:	193fb136 	bltu	r3,r4,40058c0 <__alt_mem_onchip_memory2_0+0xfc000700>
 40059fc:	d8c00217 	ldw	r3,8(sp)
 4005a00:	00c00c0e 	bge	zero,r3,4005a34 <__multiply+0x24c>
 4005a04:	d8c00317 	ldw	r3,12(sp)
 4005a08:	18bfff17 	ldw	r2,-4(r3)
 4005a0c:	1d7fff04 	addi	r21,r3,-4
 4005a10:	10000326 	beq	r2,zero,4005a20 <__multiply+0x238>
 4005a14:	00000706 	br	4005a34 <__multiply+0x24c>
 4005a18:	a8800017 	ldw	r2,0(r21)
 4005a1c:	1000051e 	bne	r2,zero,4005a34 <__multiply+0x24c>
 4005a20:	d8c00217 	ldw	r3,8(sp)
 4005a24:	ad7fff04 	addi	r21,r21,-4
 4005a28:	18ffffc4 	addi	r3,r3,-1
 4005a2c:	d8c00215 	stw	r3,8(sp)
 4005a30:	183ff91e 	bne	r3,zero,4005a18 <__alt_mem_onchip_memory2_0+0xfc000858>
 4005a34:	d8c00617 	ldw	r3,24(sp)
 4005a38:	d9000217 	ldw	r4,8(sp)
 4005a3c:	1805883a 	mov	r2,r3
 4005a40:	19000415 	stw	r4,16(r3)
 4005a44:	dfc01017 	ldw	ra,64(sp)
 4005a48:	df000f17 	ldw	fp,60(sp)
 4005a4c:	ddc00e17 	ldw	r23,56(sp)
 4005a50:	dd800d17 	ldw	r22,52(sp)
 4005a54:	dd400c17 	ldw	r21,48(sp)
 4005a58:	dd000b17 	ldw	r20,44(sp)
 4005a5c:	dcc00a17 	ldw	r19,40(sp)
 4005a60:	dc800917 	ldw	r18,36(sp)
 4005a64:	dc400817 	ldw	r17,32(sp)
 4005a68:	dc000717 	ldw	r16,28(sp)
 4005a6c:	dec01104 	addi	sp,sp,68
 4005a70:	f800283a 	ret

04005a74 <__pow5mult>:
 4005a74:	defffa04 	addi	sp,sp,-24
 4005a78:	dcc00315 	stw	r19,12(sp)
 4005a7c:	dc000015 	stw	r16,0(sp)
 4005a80:	dfc00515 	stw	ra,20(sp)
 4005a84:	dd000415 	stw	r20,16(sp)
 4005a88:	dc800215 	stw	r18,8(sp)
 4005a8c:	dc400115 	stw	r17,4(sp)
 4005a90:	308000cc 	andi	r2,r6,3
 4005a94:	3021883a 	mov	r16,r6
 4005a98:	2027883a 	mov	r19,r4
 4005a9c:	10002f1e 	bne	r2,zero,4005b5c <__pow5mult+0xe8>
 4005aa0:	2825883a 	mov	r18,r5
 4005aa4:	8021d0ba 	srai	r16,r16,2
 4005aa8:	80001a26 	beq	r16,zero,4005b14 <__pow5mult+0xa0>
 4005aac:	9c401217 	ldw	r17,72(r19)
 4005ab0:	8800061e 	bne	r17,zero,4005acc <__pow5mult+0x58>
 4005ab4:	00003406 	br	4005b88 <__pow5mult+0x114>
 4005ab8:	8021d07a 	srai	r16,r16,1
 4005abc:	80001526 	beq	r16,zero,4005b14 <__pow5mult+0xa0>
 4005ac0:	88800017 	ldw	r2,0(r17)
 4005ac4:	10001c26 	beq	r2,zero,4005b38 <__pow5mult+0xc4>
 4005ac8:	1023883a 	mov	r17,r2
 4005acc:	8080004c 	andi	r2,r16,1
 4005ad0:	103ff926 	beq	r2,zero,4005ab8 <__alt_mem_onchip_memory2_0+0xfc0008f8>
 4005ad4:	880d883a 	mov	r6,r17
 4005ad8:	900b883a 	mov	r5,r18
 4005adc:	9809883a 	mov	r4,r19
 4005ae0:	40057e80 	call	40057e8 <__multiply>
 4005ae4:	90001b26 	beq	r18,zero,4005b54 <__pow5mult+0xe0>
 4005ae8:	91000117 	ldw	r4,4(r18)
 4005aec:	98c01317 	ldw	r3,76(r19)
 4005af0:	8021d07a 	srai	r16,r16,1
 4005af4:	2109883a 	add	r4,r4,r4
 4005af8:	2109883a 	add	r4,r4,r4
 4005afc:	1907883a 	add	r3,r3,r4
 4005b00:	19000017 	ldw	r4,0(r3)
 4005b04:	91000015 	stw	r4,0(r18)
 4005b08:	1c800015 	stw	r18,0(r3)
 4005b0c:	1025883a 	mov	r18,r2
 4005b10:	803feb1e 	bne	r16,zero,4005ac0 <__alt_mem_onchip_memory2_0+0xfc000900>
 4005b14:	9005883a 	mov	r2,r18
 4005b18:	dfc00517 	ldw	ra,20(sp)
 4005b1c:	dd000417 	ldw	r20,16(sp)
 4005b20:	dcc00317 	ldw	r19,12(sp)
 4005b24:	dc800217 	ldw	r18,8(sp)
 4005b28:	dc400117 	ldw	r17,4(sp)
 4005b2c:	dc000017 	ldw	r16,0(sp)
 4005b30:	dec00604 	addi	sp,sp,24
 4005b34:	f800283a 	ret
 4005b38:	880d883a 	mov	r6,r17
 4005b3c:	880b883a 	mov	r5,r17
 4005b40:	9809883a 	mov	r4,r19
 4005b44:	40057e80 	call	40057e8 <__multiply>
 4005b48:	88800015 	stw	r2,0(r17)
 4005b4c:	10000015 	stw	zero,0(r2)
 4005b50:	003fdd06 	br	4005ac8 <__alt_mem_onchip_memory2_0+0xfc000908>
 4005b54:	1025883a 	mov	r18,r2
 4005b58:	003fd706 	br	4005ab8 <__alt_mem_onchip_memory2_0+0xfc0008f8>
 4005b5c:	10bfffc4 	addi	r2,r2,-1
 4005b60:	1085883a 	add	r2,r2,r2
 4005b64:	00c10074 	movhi	r3,1025
 4005b68:	18f89104 	addi	r3,r3,-7612
 4005b6c:	1085883a 	add	r2,r2,r2
 4005b70:	1885883a 	add	r2,r3,r2
 4005b74:	11800017 	ldw	r6,0(r2)
 4005b78:	000f883a 	mov	r7,zero
 4005b7c:	40054480 	call	4005448 <__multadd>
 4005b80:	1025883a 	mov	r18,r2
 4005b84:	003fc706 	br	4005aa4 <__alt_mem_onchip_memory2_0+0xfc0008e4>
 4005b88:	05000044 	movi	r20,1
 4005b8c:	a00b883a 	mov	r5,r20
 4005b90:	9809883a 	mov	r4,r19
 4005b94:	40053780 	call	4005378 <_Balloc>
 4005b98:	1023883a 	mov	r17,r2
 4005b9c:	00809c44 	movi	r2,625
 4005ba0:	88800515 	stw	r2,20(r17)
 4005ba4:	8d000415 	stw	r20,16(r17)
 4005ba8:	9c401215 	stw	r17,72(r19)
 4005bac:	88000015 	stw	zero,0(r17)
 4005bb0:	003fc606 	br	4005acc <__alt_mem_onchip_memory2_0+0xfc00090c>

04005bb4 <__lshift>:
 4005bb4:	defff904 	addi	sp,sp,-28
 4005bb8:	dd400515 	stw	r21,20(sp)
 4005bbc:	dcc00315 	stw	r19,12(sp)
 4005bc0:	302bd17a 	srai	r21,r6,5
 4005bc4:	2cc00417 	ldw	r19,16(r5)
 4005bc8:	28800217 	ldw	r2,8(r5)
 4005bcc:	dd000415 	stw	r20,16(sp)
 4005bd0:	ace7883a 	add	r19,r21,r19
 4005bd4:	dc800215 	stw	r18,8(sp)
 4005bd8:	dc400115 	stw	r17,4(sp)
 4005bdc:	dc000015 	stw	r16,0(sp)
 4005be0:	dfc00615 	stw	ra,24(sp)
 4005be4:	9c000044 	addi	r16,r19,1
 4005be8:	2823883a 	mov	r17,r5
 4005bec:	3029883a 	mov	r20,r6
 4005bf0:	2025883a 	mov	r18,r4
 4005bf4:	29400117 	ldw	r5,4(r5)
 4005bf8:	1400030e 	bge	r2,r16,4005c08 <__lshift+0x54>
 4005bfc:	1085883a 	add	r2,r2,r2
 4005c00:	29400044 	addi	r5,r5,1
 4005c04:	143ffd16 	blt	r2,r16,4005bfc <__alt_mem_onchip_memory2_0+0xfc000a3c>
 4005c08:	9009883a 	mov	r4,r18
 4005c0c:	40053780 	call	4005378 <_Balloc>
 4005c10:	10c00504 	addi	r3,r2,20
 4005c14:	0540070e 	bge	zero,r21,4005c34 <__lshift+0x80>
 4005c18:	ad6b883a 	add	r21,r21,r21
 4005c1c:	ad6b883a 	add	r21,r21,r21
 4005c20:	1809883a 	mov	r4,r3
 4005c24:	1d47883a 	add	r3,r3,r21
 4005c28:	20000015 	stw	zero,0(r4)
 4005c2c:	21000104 	addi	r4,r4,4
 4005c30:	193ffd1e 	bne	r3,r4,4005c28 <__alt_mem_onchip_memory2_0+0xfc000a68>
 4005c34:	8a000417 	ldw	r8,16(r17)
 4005c38:	89000504 	addi	r4,r17,20
 4005c3c:	a18007cc 	andi	r6,r20,31
 4005c40:	4211883a 	add	r8,r8,r8
 4005c44:	4211883a 	add	r8,r8,r8
 4005c48:	2211883a 	add	r8,r4,r8
 4005c4c:	30002326 	beq	r6,zero,4005cdc <__lshift+0x128>
 4005c50:	02400804 	movi	r9,32
 4005c54:	4993c83a 	sub	r9,r9,r6
 4005c58:	000b883a 	mov	r5,zero
 4005c5c:	21c00017 	ldw	r7,0(r4)
 4005c60:	1815883a 	mov	r10,r3
 4005c64:	18c00104 	addi	r3,r3,4
 4005c68:	398e983a 	sll	r7,r7,r6
 4005c6c:	21000104 	addi	r4,r4,4
 4005c70:	394ab03a 	or	r5,r7,r5
 4005c74:	197fff15 	stw	r5,-4(r3)
 4005c78:	217fff17 	ldw	r5,-4(r4)
 4005c7c:	2a4ad83a 	srl	r5,r5,r9
 4005c80:	223ff636 	bltu	r4,r8,4005c5c <__alt_mem_onchip_memory2_0+0xfc000a9c>
 4005c84:	51400115 	stw	r5,4(r10)
 4005c88:	28001a1e 	bne	r5,zero,4005cf4 <__lshift+0x140>
 4005c8c:	843fffc4 	addi	r16,r16,-1
 4005c90:	14000415 	stw	r16,16(r2)
 4005c94:	88000826 	beq	r17,zero,4005cb8 <__lshift+0x104>
 4005c98:	89000117 	ldw	r4,4(r17)
 4005c9c:	90c01317 	ldw	r3,76(r18)
 4005ca0:	2109883a 	add	r4,r4,r4
 4005ca4:	2109883a 	add	r4,r4,r4
 4005ca8:	1907883a 	add	r3,r3,r4
 4005cac:	19000017 	ldw	r4,0(r3)
 4005cb0:	89000015 	stw	r4,0(r17)
 4005cb4:	1c400015 	stw	r17,0(r3)
 4005cb8:	dfc00617 	ldw	ra,24(sp)
 4005cbc:	dd400517 	ldw	r21,20(sp)
 4005cc0:	dd000417 	ldw	r20,16(sp)
 4005cc4:	dcc00317 	ldw	r19,12(sp)
 4005cc8:	dc800217 	ldw	r18,8(sp)
 4005ccc:	dc400117 	ldw	r17,4(sp)
 4005cd0:	dc000017 	ldw	r16,0(sp)
 4005cd4:	dec00704 	addi	sp,sp,28
 4005cd8:	f800283a 	ret
 4005cdc:	21400017 	ldw	r5,0(r4)
 4005ce0:	18c00104 	addi	r3,r3,4
 4005ce4:	21000104 	addi	r4,r4,4
 4005ce8:	197fff15 	stw	r5,-4(r3)
 4005cec:	223ffb36 	bltu	r4,r8,4005cdc <__alt_mem_onchip_memory2_0+0xfc000b1c>
 4005cf0:	003fe606 	br	4005c8c <__alt_mem_onchip_memory2_0+0xfc000acc>
 4005cf4:	9c000084 	addi	r16,r19,2
 4005cf8:	003fe406 	br	4005c8c <__alt_mem_onchip_memory2_0+0xfc000acc>

04005cfc <__mcmp>:
 4005cfc:	20800417 	ldw	r2,16(r4)
 4005d00:	28c00417 	ldw	r3,16(r5)
 4005d04:	10c5c83a 	sub	r2,r2,r3
 4005d08:	1000111e 	bne	r2,zero,4005d50 <__mcmp+0x54>
 4005d0c:	18c7883a 	add	r3,r3,r3
 4005d10:	18c7883a 	add	r3,r3,r3
 4005d14:	21000504 	addi	r4,r4,20
 4005d18:	29400504 	addi	r5,r5,20
 4005d1c:	20c5883a 	add	r2,r4,r3
 4005d20:	28cb883a 	add	r5,r5,r3
 4005d24:	00000106 	br	4005d2c <__mcmp+0x30>
 4005d28:	20800a2e 	bgeu	r4,r2,4005d54 <__mcmp+0x58>
 4005d2c:	10bfff04 	addi	r2,r2,-4
 4005d30:	297fff04 	addi	r5,r5,-4
 4005d34:	11800017 	ldw	r6,0(r2)
 4005d38:	28c00017 	ldw	r3,0(r5)
 4005d3c:	30fffa26 	beq	r6,r3,4005d28 <__alt_mem_onchip_memory2_0+0xfc000b68>
 4005d40:	30c00236 	bltu	r6,r3,4005d4c <__mcmp+0x50>
 4005d44:	00800044 	movi	r2,1
 4005d48:	f800283a 	ret
 4005d4c:	00bfffc4 	movi	r2,-1
 4005d50:	f800283a 	ret
 4005d54:	0005883a 	mov	r2,zero
 4005d58:	f800283a 	ret

04005d5c <__mdiff>:
 4005d5c:	28c00417 	ldw	r3,16(r5)
 4005d60:	30800417 	ldw	r2,16(r6)
 4005d64:	defffa04 	addi	sp,sp,-24
 4005d68:	dcc00315 	stw	r19,12(sp)
 4005d6c:	dc800215 	stw	r18,8(sp)
 4005d70:	dfc00515 	stw	ra,20(sp)
 4005d74:	dd000415 	stw	r20,16(sp)
 4005d78:	dc400115 	stw	r17,4(sp)
 4005d7c:	dc000015 	stw	r16,0(sp)
 4005d80:	1887c83a 	sub	r3,r3,r2
 4005d84:	2825883a 	mov	r18,r5
 4005d88:	3027883a 	mov	r19,r6
 4005d8c:	1800141e 	bne	r3,zero,4005de0 <__mdiff+0x84>
 4005d90:	1085883a 	add	r2,r2,r2
 4005d94:	1085883a 	add	r2,r2,r2
 4005d98:	2a000504 	addi	r8,r5,20
 4005d9c:	34000504 	addi	r16,r6,20
 4005da0:	4087883a 	add	r3,r8,r2
 4005da4:	8085883a 	add	r2,r16,r2
 4005da8:	00000106 	br	4005db0 <__mdiff+0x54>
 4005dac:	40c0592e 	bgeu	r8,r3,4005f14 <__mdiff+0x1b8>
 4005db0:	18ffff04 	addi	r3,r3,-4
 4005db4:	10bfff04 	addi	r2,r2,-4
 4005db8:	19c00017 	ldw	r7,0(r3)
 4005dbc:	11400017 	ldw	r5,0(r2)
 4005dc0:	397ffa26 	beq	r7,r5,4005dac <__alt_mem_onchip_memory2_0+0xfc000bec>
 4005dc4:	3940592e 	bgeu	r7,r5,4005f2c <__mdiff+0x1d0>
 4005dc8:	9005883a 	mov	r2,r18
 4005dcc:	4023883a 	mov	r17,r8
 4005dd0:	9825883a 	mov	r18,r19
 4005dd4:	05000044 	movi	r20,1
 4005dd8:	1027883a 	mov	r19,r2
 4005ddc:	00000406 	br	4005df0 <__mdiff+0x94>
 4005de0:	18005616 	blt	r3,zero,4005f3c <__mdiff+0x1e0>
 4005de4:	34400504 	addi	r17,r6,20
 4005de8:	2c000504 	addi	r16,r5,20
 4005dec:	0029883a 	mov	r20,zero
 4005df0:	91400117 	ldw	r5,4(r18)
 4005df4:	40053780 	call	4005378 <_Balloc>
 4005df8:	92400417 	ldw	r9,16(r18)
 4005dfc:	9b000417 	ldw	r12,16(r19)
 4005e00:	12c00504 	addi	r11,r2,20
 4005e04:	4a51883a 	add	r8,r9,r9
 4005e08:	6319883a 	add	r12,r12,r12
 4005e0c:	4211883a 	add	r8,r8,r8
 4005e10:	6319883a 	add	r12,r12,r12
 4005e14:	15000315 	stw	r20,12(r2)
 4005e18:	8211883a 	add	r8,r16,r8
 4005e1c:	8b19883a 	add	r12,r17,r12
 4005e20:	0007883a 	mov	r3,zero
 4005e24:	81400017 	ldw	r5,0(r16)
 4005e28:	89c00017 	ldw	r7,0(r17)
 4005e2c:	59800104 	addi	r6,r11,4
 4005e30:	293fffcc 	andi	r4,r5,65535
 4005e34:	20c7883a 	add	r3,r4,r3
 4005e38:	393fffcc 	andi	r4,r7,65535
 4005e3c:	1909c83a 	sub	r4,r3,r4
 4005e40:	280ad43a 	srli	r5,r5,16
 4005e44:	380ed43a 	srli	r7,r7,16
 4005e48:	2007d43a 	srai	r3,r4,16
 4005e4c:	213fffcc 	andi	r4,r4,65535
 4005e50:	29cbc83a 	sub	r5,r5,r7
 4005e54:	28c7883a 	add	r3,r5,r3
 4005e58:	180a943a 	slli	r5,r3,16
 4005e5c:	8c400104 	addi	r17,r17,4
 4005e60:	84000104 	addi	r16,r16,4
 4005e64:	2908b03a 	or	r4,r5,r4
 4005e68:	59000015 	stw	r4,0(r11)
 4005e6c:	1807d43a 	srai	r3,r3,16
 4005e70:	3015883a 	mov	r10,r6
 4005e74:	3017883a 	mov	r11,r6
 4005e78:	8b3fea36 	bltu	r17,r12,4005e24 <__alt_mem_onchip_memory2_0+0xfc000c64>
 4005e7c:	8200162e 	bgeu	r16,r8,4005ed8 <__mdiff+0x17c>
 4005e80:	8017883a 	mov	r11,r16
 4005e84:	59400017 	ldw	r5,0(r11)
 4005e88:	31800104 	addi	r6,r6,4
 4005e8c:	5ac00104 	addi	r11,r11,4
 4005e90:	293fffcc 	andi	r4,r5,65535
 4005e94:	20c7883a 	add	r3,r4,r3
 4005e98:	280ed43a 	srli	r7,r5,16
 4005e9c:	180bd43a 	srai	r5,r3,16
 4005ea0:	193fffcc 	andi	r4,r3,65535
 4005ea4:	3947883a 	add	r3,r7,r5
 4005ea8:	180a943a 	slli	r5,r3,16
 4005eac:	1807d43a 	srai	r3,r3,16
 4005eb0:	2908b03a 	or	r4,r5,r4
 4005eb4:	313fff15 	stw	r4,-4(r6)
 4005eb8:	5a3ff236 	bltu	r11,r8,4005e84 <__alt_mem_onchip_memory2_0+0xfc000cc4>
 4005ebc:	0406303a 	nor	r3,zero,r16
 4005ec0:	1a07883a 	add	r3,r3,r8
 4005ec4:	1806d0ba 	srli	r3,r3,2
 4005ec8:	18c00044 	addi	r3,r3,1
 4005ecc:	18c7883a 	add	r3,r3,r3
 4005ed0:	18c7883a 	add	r3,r3,r3
 4005ed4:	50d5883a 	add	r10,r10,r3
 4005ed8:	50ffff04 	addi	r3,r10,-4
 4005edc:	2000041e 	bne	r4,zero,4005ef0 <__mdiff+0x194>
 4005ee0:	18ffff04 	addi	r3,r3,-4
 4005ee4:	19000017 	ldw	r4,0(r3)
 4005ee8:	4a7fffc4 	addi	r9,r9,-1
 4005eec:	203ffc26 	beq	r4,zero,4005ee0 <__alt_mem_onchip_memory2_0+0xfc000d20>
 4005ef0:	12400415 	stw	r9,16(r2)
 4005ef4:	dfc00517 	ldw	ra,20(sp)
 4005ef8:	dd000417 	ldw	r20,16(sp)
 4005efc:	dcc00317 	ldw	r19,12(sp)
 4005f00:	dc800217 	ldw	r18,8(sp)
 4005f04:	dc400117 	ldw	r17,4(sp)
 4005f08:	dc000017 	ldw	r16,0(sp)
 4005f0c:	dec00604 	addi	sp,sp,24
 4005f10:	f800283a 	ret
 4005f14:	000b883a 	mov	r5,zero
 4005f18:	40053780 	call	4005378 <_Balloc>
 4005f1c:	00c00044 	movi	r3,1
 4005f20:	10c00415 	stw	r3,16(r2)
 4005f24:	10000515 	stw	zero,20(r2)
 4005f28:	003ff206 	br	4005ef4 <__alt_mem_onchip_memory2_0+0xfc000d34>
 4005f2c:	8023883a 	mov	r17,r16
 4005f30:	0029883a 	mov	r20,zero
 4005f34:	4021883a 	mov	r16,r8
 4005f38:	003fad06 	br	4005df0 <__alt_mem_onchip_memory2_0+0xfc000c30>
 4005f3c:	9005883a 	mov	r2,r18
 4005f40:	94400504 	addi	r17,r18,20
 4005f44:	9c000504 	addi	r16,r19,20
 4005f48:	9825883a 	mov	r18,r19
 4005f4c:	05000044 	movi	r20,1
 4005f50:	1027883a 	mov	r19,r2
 4005f54:	003fa606 	br	4005df0 <__alt_mem_onchip_memory2_0+0xfc000c30>

04005f58 <__ulp>:
 4005f58:	295ffc2c 	andhi	r5,r5,32752
 4005f5c:	00bf3034 	movhi	r2,64704
 4005f60:	2887883a 	add	r3,r5,r2
 4005f64:	00c0020e 	bge	zero,r3,4005f70 <__ulp+0x18>
 4005f68:	0005883a 	mov	r2,zero
 4005f6c:	f800283a 	ret
 4005f70:	00c7c83a 	sub	r3,zero,r3
 4005f74:	1807d53a 	srai	r3,r3,20
 4005f78:	008004c4 	movi	r2,19
 4005f7c:	10c00b0e 	bge	r2,r3,4005fac <__ulp+0x54>
 4005f80:	18bffb04 	addi	r2,r3,-20
 4005f84:	01000784 	movi	r4,30
 4005f88:	0007883a 	mov	r3,zero
 4005f8c:	20800516 	blt	r4,r2,4005fa4 <__ulp+0x4c>
 4005f90:	010007c4 	movi	r4,31
 4005f94:	2089c83a 	sub	r4,r4,r2
 4005f98:	00800044 	movi	r2,1
 4005f9c:	1104983a 	sll	r2,r2,r4
 4005fa0:	f800283a 	ret
 4005fa4:	00800044 	movi	r2,1
 4005fa8:	f800283a 	ret
 4005fac:	01400234 	movhi	r5,8
 4005fb0:	28c7d83a 	sra	r3,r5,r3
 4005fb4:	0005883a 	mov	r2,zero
 4005fb8:	f800283a 	ret

04005fbc <__b2d>:
 4005fbc:	defffa04 	addi	sp,sp,-24
 4005fc0:	dc000015 	stw	r16,0(sp)
 4005fc4:	24000417 	ldw	r16,16(r4)
 4005fc8:	dc400115 	stw	r17,4(sp)
 4005fcc:	24400504 	addi	r17,r4,20
 4005fd0:	8421883a 	add	r16,r16,r16
 4005fd4:	8421883a 	add	r16,r16,r16
 4005fd8:	8c21883a 	add	r16,r17,r16
 4005fdc:	dc800215 	stw	r18,8(sp)
 4005fe0:	84bfff17 	ldw	r18,-4(r16)
 4005fe4:	dd000415 	stw	r20,16(sp)
 4005fe8:	dcc00315 	stw	r19,12(sp)
 4005fec:	9009883a 	mov	r4,r18
 4005ff0:	2829883a 	mov	r20,r5
 4005ff4:	dfc00515 	stw	ra,20(sp)
 4005ff8:	40056940 	call	4005694 <__hi0bits>
 4005ffc:	00c00804 	movi	r3,32
 4006000:	1889c83a 	sub	r4,r3,r2
 4006004:	a1000015 	stw	r4,0(r20)
 4006008:	01000284 	movi	r4,10
 400600c:	84ffff04 	addi	r19,r16,-4
 4006010:	20801216 	blt	r4,r2,400605c <__b2d+0xa0>
 4006014:	018002c4 	movi	r6,11
 4006018:	308dc83a 	sub	r6,r6,r2
 400601c:	9186d83a 	srl	r3,r18,r6
 4006020:	18cffc34 	orhi	r3,r3,16368
 4006024:	8cc0212e 	bgeu	r17,r19,40060ac <__b2d+0xf0>
 4006028:	813ffe17 	ldw	r4,-8(r16)
 400602c:	218cd83a 	srl	r6,r4,r6
 4006030:	10800544 	addi	r2,r2,21
 4006034:	9084983a 	sll	r2,r18,r2
 4006038:	1184b03a 	or	r2,r2,r6
 400603c:	dfc00517 	ldw	ra,20(sp)
 4006040:	dd000417 	ldw	r20,16(sp)
 4006044:	dcc00317 	ldw	r19,12(sp)
 4006048:	dc800217 	ldw	r18,8(sp)
 400604c:	dc400117 	ldw	r17,4(sp)
 4006050:	dc000017 	ldw	r16,0(sp)
 4006054:	dec00604 	addi	sp,sp,24
 4006058:	f800283a 	ret
 400605c:	8cc00f2e 	bgeu	r17,r19,400609c <__b2d+0xe0>
 4006060:	117ffd44 	addi	r5,r2,-11
 4006064:	80bffe17 	ldw	r2,-8(r16)
 4006068:	28000e26 	beq	r5,zero,40060a4 <__b2d+0xe8>
 400606c:	1949c83a 	sub	r4,r3,r5
 4006070:	9164983a 	sll	r18,r18,r5
 4006074:	1106d83a 	srl	r3,r2,r4
 4006078:	81bffe04 	addi	r6,r16,-8
 400607c:	948ffc34 	orhi	r18,r18,16368
 4006080:	90c6b03a 	or	r3,r18,r3
 4006084:	89800e2e 	bgeu	r17,r6,40060c0 <__b2d+0x104>
 4006088:	81bffd17 	ldw	r6,-12(r16)
 400608c:	1144983a 	sll	r2,r2,r5
 4006090:	310ad83a 	srl	r5,r6,r4
 4006094:	2884b03a 	or	r2,r5,r2
 4006098:	003fe806 	br	400603c <__alt_mem_onchip_memory2_0+0xfc000e7c>
 400609c:	10bffd44 	addi	r2,r2,-11
 40060a0:	1000041e 	bne	r2,zero,40060b4 <__b2d+0xf8>
 40060a4:	90cffc34 	orhi	r3,r18,16368
 40060a8:	003fe406 	br	400603c <__alt_mem_onchip_memory2_0+0xfc000e7c>
 40060ac:	000d883a 	mov	r6,zero
 40060b0:	003fdf06 	br	4006030 <__alt_mem_onchip_memory2_0+0xfc000e70>
 40060b4:	90a4983a 	sll	r18,r18,r2
 40060b8:	0005883a 	mov	r2,zero
 40060bc:	003ff906 	br	40060a4 <__alt_mem_onchip_memory2_0+0xfc000ee4>
 40060c0:	1144983a 	sll	r2,r2,r5
 40060c4:	003fdd06 	br	400603c <__alt_mem_onchip_memory2_0+0xfc000e7c>

040060c8 <__d2b>:
 40060c8:	defff804 	addi	sp,sp,-32
 40060cc:	dc000215 	stw	r16,8(sp)
 40060d0:	3021883a 	mov	r16,r6
 40060d4:	dc400315 	stw	r17,12(sp)
 40060d8:	8022907a 	slli	r17,r16,1
 40060dc:	dd000615 	stw	r20,24(sp)
 40060e0:	2829883a 	mov	r20,r5
 40060e4:	01400044 	movi	r5,1
 40060e8:	dcc00515 	stw	r19,20(sp)
 40060ec:	dc800415 	stw	r18,16(sp)
 40060f0:	dfc00715 	stw	ra,28(sp)
 40060f4:	3825883a 	mov	r18,r7
 40060f8:	8822d57a 	srli	r17,r17,21
 40060fc:	40053780 	call	4005378 <_Balloc>
 4006100:	1027883a 	mov	r19,r2
 4006104:	00800434 	movhi	r2,16
 4006108:	10bfffc4 	addi	r2,r2,-1
 400610c:	808c703a 	and	r6,r16,r2
 4006110:	88000126 	beq	r17,zero,4006118 <__d2b+0x50>
 4006114:	31800434 	orhi	r6,r6,16
 4006118:	d9800015 	stw	r6,0(sp)
 400611c:	a0002426 	beq	r20,zero,40061b0 <__d2b+0xe8>
 4006120:	d9000104 	addi	r4,sp,4
 4006124:	dd000115 	stw	r20,4(sp)
 4006128:	40056fc0 	call	40056fc <__lo0bits>
 400612c:	d8c00017 	ldw	r3,0(sp)
 4006130:	10002f1e 	bne	r2,zero,40061f0 <__d2b+0x128>
 4006134:	d9000117 	ldw	r4,4(sp)
 4006138:	99000515 	stw	r4,20(r19)
 400613c:	1821003a 	cmpeq	r16,r3,zero
 4006140:	01000084 	movi	r4,2
 4006144:	2421c83a 	sub	r16,r4,r16
 4006148:	98c00615 	stw	r3,24(r19)
 400614c:	9c000415 	stw	r16,16(r19)
 4006150:	88001f1e 	bne	r17,zero,40061d0 <__d2b+0x108>
 4006154:	10bef384 	addi	r2,r2,-1074
 4006158:	90800015 	stw	r2,0(r18)
 400615c:	00900034 	movhi	r2,16384
 4006160:	10bfffc4 	addi	r2,r2,-1
 4006164:	8085883a 	add	r2,r16,r2
 4006168:	1085883a 	add	r2,r2,r2
 400616c:	1085883a 	add	r2,r2,r2
 4006170:	9885883a 	add	r2,r19,r2
 4006174:	11000517 	ldw	r4,20(r2)
 4006178:	8020917a 	slli	r16,r16,5
 400617c:	40056940 	call	4005694 <__hi0bits>
 4006180:	d8c00817 	ldw	r3,32(sp)
 4006184:	8085c83a 	sub	r2,r16,r2
 4006188:	18800015 	stw	r2,0(r3)
 400618c:	9805883a 	mov	r2,r19
 4006190:	dfc00717 	ldw	ra,28(sp)
 4006194:	dd000617 	ldw	r20,24(sp)
 4006198:	dcc00517 	ldw	r19,20(sp)
 400619c:	dc800417 	ldw	r18,16(sp)
 40061a0:	dc400317 	ldw	r17,12(sp)
 40061a4:	dc000217 	ldw	r16,8(sp)
 40061a8:	dec00804 	addi	sp,sp,32
 40061ac:	f800283a 	ret
 40061b0:	d809883a 	mov	r4,sp
 40061b4:	40056fc0 	call	40056fc <__lo0bits>
 40061b8:	d8c00017 	ldw	r3,0(sp)
 40061bc:	04000044 	movi	r16,1
 40061c0:	9c000415 	stw	r16,16(r19)
 40061c4:	98c00515 	stw	r3,20(r19)
 40061c8:	10800804 	addi	r2,r2,32
 40061cc:	883fe126 	beq	r17,zero,4006154 <__alt_mem_onchip_memory2_0+0xfc000f94>
 40061d0:	00c00d44 	movi	r3,53
 40061d4:	8c7ef344 	addi	r17,r17,-1075
 40061d8:	88a3883a 	add	r17,r17,r2
 40061dc:	1885c83a 	sub	r2,r3,r2
 40061e0:	d8c00817 	ldw	r3,32(sp)
 40061e4:	94400015 	stw	r17,0(r18)
 40061e8:	18800015 	stw	r2,0(r3)
 40061ec:	003fe706 	br	400618c <__alt_mem_onchip_memory2_0+0xfc000fcc>
 40061f0:	01000804 	movi	r4,32
 40061f4:	2089c83a 	sub	r4,r4,r2
 40061f8:	1908983a 	sll	r4,r3,r4
 40061fc:	d9400117 	ldw	r5,4(sp)
 4006200:	1886d83a 	srl	r3,r3,r2
 4006204:	2148b03a 	or	r4,r4,r5
 4006208:	99000515 	stw	r4,20(r19)
 400620c:	d8c00015 	stw	r3,0(sp)
 4006210:	003fca06 	br	400613c <__alt_mem_onchip_memory2_0+0xfc000f7c>

04006214 <__ratio>:
 4006214:	defff904 	addi	sp,sp,-28
 4006218:	dc400315 	stw	r17,12(sp)
 400621c:	2823883a 	mov	r17,r5
 4006220:	d9400104 	addi	r5,sp,4
 4006224:	dfc00615 	stw	ra,24(sp)
 4006228:	dcc00515 	stw	r19,20(sp)
 400622c:	dc800415 	stw	r18,16(sp)
 4006230:	2027883a 	mov	r19,r4
 4006234:	dc000215 	stw	r16,8(sp)
 4006238:	4005fbc0 	call	4005fbc <__b2d>
 400623c:	d80b883a 	mov	r5,sp
 4006240:	8809883a 	mov	r4,r17
 4006244:	1025883a 	mov	r18,r2
 4006248:	1821883a 	mov	r16,r3
 400624c:	4005fbc0 	call	4005fbc <__b2d>
 4006250:	8a000417 	ldw	r8,16(r17)
 4006254:	99000417 	ldw	r4,16(r19)
 4006258:	d9400117 	ldw	r5,4(sp)
 400625c:	2209c83a 	sub	r4,r4,r8
 4006260:	2010917a 	slli	r8,r4,5
 4006264:	d9000017 	ldw	r4,0(sp)
 4006268:	2909c83a 	sub	r4,r5,r4
 400626c:	4109883a 	add	r4,r8,r4
 4006270:	01000e0e 	bge	zero,r4,40062ac <__ratio+0x98>
 4006274:	2008953a 	slli	r4,r4,20
 4006278:	2421883a 	add	r16,r4,r16
 400627c:	100d883a 	mov	r6,r2
 4006280:	180f883a 	mov	r7,r3
 4006284:	9009883a 	mov	r4,r18
 4006288:	800b883a 	mov	r5,r16
 400628c:	4009db40 	call	4009db4 <__divdf3>
 4006290:	dfc00617 	ldw	ra,24(sp)
 4006294:	dcc00517 	ldw	r19,20(sp)
 4006298:	dc800417 	ldw	r18,16(sp)
 400629c:	dc400317 	ldw	r17,12(sp)
 40062a0:	dc000217 	ldw	r16,8(sp)
 40062a4:	dec00704 	addi	sp,sp,28
 40062a8:	f800283a 	ret
 40062ac:	2008953a 	slli	r4,r4,20
 40062b0:	1907c83a 	sub	r3,r3,r4
 40062b4:	003ff106 	br	400627c <__alt_mem_onchip_memory2_0+0xfc0010bc>

040062b8 <_mprec_log10>:
 40062b8:	defffe04 	addi	sp,sp,-8
 40062bc:	dc000015 	stw	r16,0(sp)
 40062c0:	dfc00115 	stw	ra,4(sp)
 40062c4:	008005c4 	movi	r2,23
 40062c8:	2021883a 	mov	r16,r4
 40062cc:	11000d0e 	bge	r2,r4,4006304 <_mprec_log10+0x4c>
 40062d0:	0005883a 	mov	r2,zero
 40062d4:	00cffc34 	movhi	r3,16368
 40062d8:	843fffc4 	addi	r16,r16,-1
 40062dc:	000d883a 	mov	r6,zero
 40062e0:	01d00934 	movhi	r7,16420
 40062e4:	1009883a 	mov	r4,r2
 40062e8:	180b883a 	mov	r5,r3
 40062ec:	400a9dc0 	call	400a9dc <__muldf3>
 40062f0:	803ff91e 	bne	r16,zero,40062d8 <__alt_mem_onchip_memory2_0+0xfc001118>
 40062f4:	dfc00117 	ldw	ra,4(sp)
 40062f8:	dc000017 	ldw	r16,0(sp)
 40062fc:	dec00204 	addi	sp,sp,8
 4006300:	f800283a 	ret
 4006304:	202090fa 	slli	r16,r4,3
 4006308:	00810074 	movhi	r2,1025
 400630c:	10b8a804 	addi	r2,r2,-7520
 4006310:	1421883a 	add	r16,r2,r16
 4006314:	80800017 	ldw	r2,0(r16)
 4006318:	80c00117 	ldw	r3,4(r16)
 400631c:	dfc00117 	ldw	ra,4(sp)
 4006320:	dc000017 	ldw	r16,0(sp)
 4006324:	dec00204 	addi	sp,sp,8
 4006328:	f800283a 	ret

0400632c <__copybits>:
 400632c:	297fffc4 	addi	r5,r5,-1
 4006330:	280fd17a 	srai	r7,r5,5
 4006334:	30c00417 	ldw	r3,16(r6)
 4006338:	30800504 	addi	r2,r6,20
 400633c:	39c00044 	addi	r7,r7,1
 4006340:	18c7883a 	add	r3,r3,r3
 4006344:	39cf883a 	add	r7,r7,r7
 4006348:	18c7883a 	add	r3,r3,r3
 400634c:	39cf883a 	add	r7,r7,r7
 4006350:	10c7883a 	add	r3,r2,r3
 4006354:	21cf883a 	add	r7,r4,r7
 4006358:	10c00d2e 	bgeu	r2,r3,4006390 <__copybits+0x64>
 400635c:	200b883a 	mov	r5,r4
 4006360:	12000017 	ldw	r8,0(r2)
 4006364:	29400104 	addi	r5,r5,4
 4006368:	10800104 	addi	r2,r2,4
 400636c:	2a3fff15 	stw	r8,-4(r5)
 4006370:	10fffb36 	bltu	r2,r3,4006360 <__alt_mem_onchip_memory2_0+0xfc0011a0>
 4006374:	1985c83a 	sub	r2,r3,r6
 4006378:	10bffac4 	addi	r2,r2,-21
 400637c:	1004d0ba 	srli	r2,r2,2
 4006380:	10800044 	addi	r2,r2,1
 4006384:	1085883a 	add	r2,r2,r2
 4006388:	1085883a 	add	r2,r2,r2
 400638c:	2089883a 	add	r4,r4,r2
 4006390:	21c0032e 	bgeu	r4,r7,40063a0 <__copybits+0x74>
 4006394:	20000015 	stw	zero,0(r4)
 4006398:	21000104 	addi	r4,r4,4
 400639c:	21fffd36 	bltu	r4,r7,4006394 <__alt_mem_onchip_memory2_0+0xfc0011d4>
 40063a0:	f800283a 	ret

040063a4 <__any_on>:
 40063a4:	20c00417 	ldw	r3,16(r4)
 40063a8:	2805d17a 	srai	r2,r5,5
 40063ac:	21000504 	addi	r4,r4,20
 40063b0:	18800d0e 	bge	r3,r2,40063e8 <__any_on+0x44>
 40063b4:	18c7883a 	add	r3,r3,r3
 40063b8:	18c7883a 	add	r3,r3,r3
 40063bc:	20c7883a 	add	r3,r4,r3
 40063c0:	20c0192e 	bgeu	r4,r3,4006428 <__any_on+0x84>
 40063c4:	18bfff17 	ldw	r2,-4(r3)
 40063c8:	18ffff04 	addi	r3,r3,-4
 40063cc:	1000041e 	bne	r2,zero,40063e0 <__any_on+0x3c>
 40063d0:	20c0142e 	bgeu	r4,r3,4006424 <__any_on+0x80>
 40063d4:	18ffff04 	addi	r3,r3,-4
 40063d8:	19400017 	ldw	r5,0(r3)
 40063dc:	283ffc26 	beq	r5,zero,40063d0 <__alt_mem_onchip_memory2_0+0xfc001210>
 40063e0:	00800044 	movi	r2,1
 40063e4:	f800283a 	ret
 40063e8:	10c00a0e 	bge	r2,r3,4006414 <__any_on+0x70>
 40063ec:	1085883a 	add	r2,r2,r2
 40063f0:	1085883a 	add	r2,r2,r2
 40063f4:	294007cc 	andi	r5,r5,31
 40063f8:	2087883a 	add	r3,r4,r2
 40063fc:	283ff026 	beq	r5,zero,40063c0 <__alt_mem_onchip_memory2_0+0xfc001200>
 4006400:	19800017 	ldw	r6,0(r3)
 4006404:	3144d83a 	srl	r2,r6,r5
 4006408:	114a983a 	sll	r5,r2,r5
 400640c:	317ff41e 	bne	r6,r5,40063e0 <__alt_mem_onchip_memory2_0+0xfc001220>
 4006410:	003feb06 	br	40063c0 <__alt_mem_onchip_memory2_0+0xfc001200>
 4006414:	1085883a 	add	r2,r2,r2
 4006418:	1085883a 	add	r2,r2,r2
 400641c:	2087883a 	add	r3,r4,r2
 4006420:	003fe706 	br	40063c0 <__alt_mem_onchip_memory2_0+0xfc001200>
 4006424:	f800283a 	ret
 4006428:	0005883a 	mov	r2,zero
 400642c:	f800283a 	ret

04006430 <__fpclassifyd>:
 4006430:	00a00034 	movhi	r2,32768
 4006434:	10bfffc4 	addi	r2,r2,-1
 4006438:	2884703a 	and	r2,r5,r2
 400643c:	10000726 	beq	r2,zero,400645c <__fpclassifyd+0x2c>
 4006440:	00fffc34 	movhi	r3,65520
 4006444:	019ff834 	movhi	r6,32736
 4006448:	28c7883a 	add	r3,r5,r3
 400644c:	31bfffc4 	addi	r6,r6,-1
 4006450:	30c00536 	bltu	r6,r3,4006468 <__fpclassifyd+0x38>
 4006454:	00800104 	movi	r2,4
 4006458:	f800283a 	ret
 400645c:	2000021e 	bne	r4,zero,4006468 <__fpclassifyd+0x38>
 4006460:	00800084 	movi	r2,2
 4006464:	f800283a 	ret
 4006468:	00dffc34 	movhi	r3,32752
 400646c:	019ff834 	movhi	r6,32736
 4006470:	28cb883a 	add	r5,r5,r3
 4006474:	31bfffc4 	addi	r6,r6,-1
 4006478:	317ff62e 	bgeu	r6,r5,4006454 <__alt_mem_onchip_memory2_0+0xfc001294>
 400647c:	01400434 	movhi	r5,16
 4006480:	297fffc4 	addi	r5,r5,-1
 4006484:	28800236 	bltu	r5,r2,4006490 <__fpclassifyd+0x60>
 4006488:	008000c4 	movi	r2,3
 400648c:	f800283a 	ret
 4006490:	10c00226 	beq	r2,r3,400649c <__fpclassifyd+0x6c>
 4006494:	0005883a 	mov	r2,zero
 4006498:	f800283a 	ret
 400649c:	2005003a 	cmpeq	r2,r4,zero
 40064a0:	f800283a 	ret

040064a4 <_sbrk_r>:
 40064a4:	defffd04 	addi	sp,sp,-12
 40064a8:	dc000015 	stw	r16,0(sp)
 40064ac:	04010074 	movhi	r16,1025
 40064b0:	dc400115 	stw	r17,4(sp)
 40064b4:	84081d04 	addi	r16,r16,8308
 40064b8:	2023883a 	mov	r17,r4
 40064bc:	2809883a 	mov	r4,r5
 40064c0:	dfc00215 	stw	ra,8(sp)
 40064c4:	80000015 	stw	zero,0(r16)
 40064c8:	400bf5c0 	call	400bf5c <sbrk>
 40064cc:	00ffffc4 	movi	r3,-1
 40064d0:	10c00526 	beq	r2,r3,40064e8 <_sbrk_r+0x44>
 40064d4:	dfc00217 	ldw	ra,8(sp)
 40064d8:	dc400117 	ldw	r17,4(sp)
 40064dc:	dc000017 	ldw	r16,0(sp)
 40064e0:	dec00304 	addi	sp,sp,12
 40064e4:	f800283a 	ret
 40064e8:	80c00017 	ldw	r3,0(r16)
 40064ec:	183ff926 	beq	r3,zero,40064d4 <__alt_mem_onchip_memory2_0+0xfc001314>
 40064f0:	88c00015 	stw	r3,0(r17)
 40064f4:	003ff706 	br	40064d4 <__alt_mem_onchip_memory2_0+0xfc001314>

040064f8 <strcmp>:
 40064f8:	2144b03a 	or	r2,r4,r5
 40064fc:	108000cc 	andi	r2,r2,3
 4006500:	1000171e 	bne	r2,zero,4006560 <strcmp+0x68>
 4006504:	20800017 	ldw	r2,0(r4)
 4006508:	28c00017 	ldw	r3,0(r5)
 400650c:	10c0141e 	bne	r2,r3,4006560 <strcmp+0x68>
 4006510:	027fbff4 	movhi	r9,65279
 4006514:	4a7fbfc4 	addi	r9,r9,-257
 4006518:	0086303a 	nor	r3,zero,r2
 400651c:	02202074 	movhi	r8,32897
 4006520:	1245883a 	add	r2,r2,r9
 4006524:	42202004 	addi	r8,r8,-32640
 4006528:	10c4703a 	and	r2,r2,r3
 400652c:	1204703a 	and	r2,r2,r8
 4006530:	10000226 	beq	r2,zero,400653c <strcmp+0x44>
 4006534:	00002306 	br	40065c4 <strcmp+0xcc>
 4006538:	1000221e 	bne	r2,zero,40065c4 <strcmp+0xcc>
 400653c:	21000104 	addi	r4,r4,4
 4006540:	20c00017 	ldw	r3,0(r4)
 4006544:	29400104 	addi	r5,r5,4
 4006548:	29800017 	ldw	r6,0(r5)
 400654c:	1a4f883a 	add	r7,r3,r9
 4006550:	00c4303a 	nor	r2,zero,r3
 4006554:	3884703a 	and	r2,r7,r2
 4006558:	1204703a 	and	r2,r2,r8
 400655c:	19bff626 	beq	r3,r6,4006538 <__alt_mem_onchip_memory2_0+0xfc001378>
 4006560:	20800003 	ldbu	r2,0(r4)
 4006564:	10c03fcc 	andi	r3,r2,255
 4006568:	18c0201c 	xori	r3,r3,128
 400656c:	18ffe004 	addi	r3,r3,-128
 4006570:	18000c26 	beq	r3,zero,40065a4 <strcmp+0xac>
 4006574:	29800007 	ldb	r6,0(r5)
 4006578:	19800326 	beq	r3,r6,4006588 <strcmp+0x90>
 400657c:	00001306 	br	40065cc <strcmp+0xd4>
 4006580:	29800007 	ldb	r6,0(r5)
 4006584:	11800b1e 	bne	r2,r6,40065b4 <strcmp+0xbc>
 4006588:	21000044 	addi	r4,r4,1
 400658c:	20c00003 	ldbu	r3,0(r4)
 4006590:	29400044 	addi	r5,r5,1
 4006594:	18803fcc 	andi	r2,r3,255
 4006598:	1080201c 	xori	r2,r2,128
 400659c:	10bfe004 	addi	r2,r2,-128
 40065a0:	103ff71e 	bne	r2,zero,4006580 <__alt_mem_onchip_memory2_0+0xfc0013c0>
 40065a4:	0007883a 	mov	r3,zero
 40065a8:	28800003 	ldbu	r2,0(r5)
 40065ac:	1885c83a 	sub	r2,r3,r2
 40065b0:	f800283a 	ret
 40065b4:	28800003 	ldbu	r2,0(r5)
 40065b8:	18c03fcc 	andi	r3,r3,255
 40065bc:	1885c83a 	sub	r2,r3,r2
 40065c0:	f800283a 	ret
 40065c4:	0005883a 	mov	r2,zero
 40065c8:	f800283a 	ret
 40065cc:	10c03fcc 	andi	r3,r2,255
 40065d0:	003ff506 	br	40065a8 <__alt_mem_onchip_memory2_0+0xfc0013e8>

040065d4 <__ssprint_r>:
 40065d4:	30800217 	ldw	r2,8(r6)
 40065d8:	defff604 	addi	sp,sp,-40
 40065dc:	dc800215 	stw	r18,8(sp)
 40065e0:	dfc00915 	stw	ra,36(sp)
 40065e4:	df000815 	stw	fp,32(sp)
 40065e8:	ddc00715 	stw	r23,28(sp)
 40065ec:	dd800615 	stw	r22,24(sp)
 40065f0:	dd400515 	stw	r21,20(sp)
 40065f4:	dd000415 	stw	r20,16(sp)
 40065f8:	dcc00315 	stw	r19,12(sp)
 40065fc:	dc400115 	stw	r17,4(sp)
 4006600:	dc000015 	stw	r16,0(sp)
 4006604:	3025883a 	mov	r18,r6
 4006608:	10005826 	beq	r2,zero,400676c <__ssprint_r+0x198>
 400660c:	2027883a 	mov	r19,r4
 4006610:	35c00017 	ldw	r23,0(r6)
 4006614:	29000017 	ldw	r4,0(r5)
 4006618:	28800217 	ldw	r2,8(r5)
 400661c:	2823883a 	mov	r17,r5
 4006620:	0039883a 	mov	fp,zero
 4006624:	0021883a 	mov	r16,zero
 4006628:	80003926 	beq	r16,zero,4006710 <__ssprint_r+0x13c>
 400662c:	102b883a 	mov	r21,r2
 4006630:	102d883a 	mov	r22,r2
 4006634:	80803a36 	bltu	r16,r2,4006720 <__ssprint_r+0x14c>
 4006638:	88c0030b 	ldhu	r3,12(r17)
 400663c:	1881200c 	andi	r2,r3,1152
 4006640:	10002626 	beq	r2,zero,40066dc <__ssprint_r+0x108>
 4006644:	88800517 	ldw	r2,20(r17)
 4006648:	89400417 	ldw	r5,16(r17)
 400664c:	81800044 	addi	r6,r16,1
 4006650:	108f883a 	add	r7,r2,r2
 4006654:	3885883a 	add	r2,r7,r2
 4006658:	100ed7fa 	srli	r7,r2,31
 400665c:	216dc83a 	sub	r22,r4,r5
 4006660:	3589883a 	add	r4,r6,r22
 4006664:	3885883a 	add	r2,r7,r2
 4006668:	102bd07a 	srai	r21,r2,1
 400666c:	a80d883a 	mov	r6,r21
 4006670:	a900022e 	bgeu	r21,r4,400667c <__ssprint_r+0xa8>
 4006674:	202b883a 	mov	r21,r4
 4006678:	200d883a 	mov	r6,r4
 400667c:	18c1000c 	andi	r3,r3,1024
 4006680:	18002a26 	beq	r3,zero,400672c <__ssprint_r+0x158>
 4006684:	300b883a 	mov	r5,r6
 4006688:	9809883a 	mov	r4,r19
 400668c:	40049400 	call	4004940 <_malloc_r>
 4006690:	1029883a 	mov	r20,r2
 4006694:	10002c26 	beq	r2,zero,4006748 <__ssprint_r+0x174>
 4006698:	89400417 	ldw	r5,16(r17)
 400669c:	b00d883a 	mov	r6,r22
 40066a0:	1009883a 	mov	r4,r2
 40066a4:	40052300 	call	4005230 <memcpy>
 40066a8:	8880030b 	ldhu	r2,12(r17)
 40066ac:	00fedfc4 	movi	r3,-1153
 40066b0:	10c4703a 	and	r2,r2,r3
 40066b4:	10802014 	ori	r2,r2,128
 40066b8:	8880030d 	sth	r2,12(r17)
 40066bc:	a589883a 	add	r4,r20,r22
 40066c0:	adadc83a 	sub	r22,r21,r22
 40066c4:	8d400515 	stw	r21,20(r17)
 40066c8:	8d800215 	stw	r22,8(r17)
 40066cc:	8d000415 	stw	r20,16(r17)
 40066d0:	89000015 	stw	r4,0(r17)
 40066d4:	802b883a 	mov	r21,r16
 40066d8:	802d883a 	mov	r22,r16
 40066dc:	b00d883a 	mov	r6,r22
 40066e0:	e00b883a 	mov	r5,fp
 40066e4:	40080540 	call	4008054 <memmove>
 40066e8:	88800217 	ldw	r2,8(r17)
 40066ec:	89000017 	ldw	r4,0(r17)
 40066f0:	90c00217 	ldw	r3,8(r18)
 40066f4:	1545c83a 	sub	r2,r2,r21
 40066f8:	2589883a 	add	r4,r4,r22
 40066fc:	88800215 	stw	r2,8(r17)
 4006700:	89000015 	stw	r4,0(r17)
 4006704:	1c21c83a 	sub	r16,r3,r16
 4006708:	94000215 	stw	r16,8(r18)
 400670c:	80001726 	beq	r16,zero,400676c <__ssprint_r+0x198>
 4006710:	bf000017 	ldw	fp,0(r23)
 4006714:	bc000117 	ldw	r16,4(r23)
 4006718:	bdc00204 	addi	r23,r23,8
 400671c:	003fc206 	br	4006628 <__alt_mem_onchip_memory2_0+0xfc001468>
 4006720:	802b883a 	mov	r21,r16
 4006724:	802d883a 	mov	r22,r16
 4006728:	003fec06 	br	40066dc <__alt_mem_onchip_memory2_0+0xfc00151c>
 400672c:	9809883a 	mov	r4,r19
 4006730:	40082d80 	call	40082d8 <_realloc_r>
 4006734:	1029883a 	mov	r20,r2
 4006738:	103fe01e 	bne	r2,zero,40066bc <__alt_mem_onchip_memory2_0+0xfc0014fc>
 400673c:	89400417 	ldw	r5,16(r17)
 4006740:	9809883a 	mov	r4,r19
 4006744:	4007d440 	call	4007d44 <_free_r>
 4006748:	88c0030b 	ldhu	r3,12(r17)
 400674c:	00800304 	movi	r2,12
 4006750:	98800015 	stw	r2,0(r19)
 4006754:	18c01014 	ori	r3,r3,64
 4006758:	88c0030d 	sth	r3,12(r17)
 400675c:	00bfffc4 	movi	r2,-1
 4006760:	90000215 	stw	zero,8(r18)
 4006764:	90000115 	stw	zero,4(r18)
 4006768:	00000206 	br	4006774 <__ssprint_r+0x1a0>
 400676c:	90000115 	stw	zero,4(r18)
 4006770:	0005883a 	mov	r2,zero
 4006774:	dfc00917 	ldw	ra,36(sp)
 4006778:	df000817 	ldw	fp,32(sp)
 400677c:	ddc00717 	ldw	r23,28(sp)
 4006780:	dd800617 	ldw	r22,24(sp)
 4006784:	dd400517 	ldw	r21,20(sp)
 4006788:	dd000417 	ldw	r20,16(sp)
 400678c:	dcc00317 	ldw	r19,12(sp)
 4006790:	dc800217 	ldw	r18,8(sp)
 4006794:	dc400117 	ldw	r17,4(sp)
 4006798:	dc000017 	ldw	r16,0(sp)
 400679c:	dec00a04 	addi	sp,sp,40
 40067a0:	f800283a 	ret

040067a4 <___svfiprintf_internal_r>:
 40067a4:	2880030b 	ldhu	r2,12(r5)
 40067a8:	deffc804 	addi	sp,sp,-224
 40067ac:	dcc03115 	stw	r19,196(sp)
 40067b0:	dfc03715 	stw	ra,220(sp)
 40067b4:	df003615 	stw	fp,216(sp)
 40067b8:	ddc03515 	stw	r23,212(sp)
 40067bc:	dd803415 	stw	r22,208(sp)
 40067c0:	dd403315 	stw	r21,204(sp)
 40067c4:	dd003215 	stw	r20,200(sp)
 40067c8:	dc803015 	stw	r18,192(sp)
 40067cc:	dc402f15 	stw	r17,188(sp)
 40067d0:	dc002e15 	stw	r16,184(sp)
 40067d4:	d9402315 	stw	r5,140(sp)
 40067d8:	d9002715 	stw	r4,156(sp)
 40067dc:	1080200c 	andi	r2,r2,128
 40067e0:	d9c02415 	stw	r7,144(sp)
 40067e4:	3027883a 	mov	r19,r6
 40067e8:	10000226 	beq	r2,zero,40067f4 <___svfiprintf_internal_r+0x50>
 40067ec:	28800417 	ldw	r2,16(r5)
 40067f0:	10046d26 	beq	r2,zero,40079a8 <___svfiprintf_internal_r+0x1204>
 40067f4:	d8801a04 	addi	r2,sp,104
 40067f8:	d8c019c4 	addi	r3,sp,103
 40067fc:	05810074 	movhi	r22,1025
 4006800:	10c9c83a 	sub	r4,r2,r3
 4006804:	b5b8da04 	addi	r22,r22,-7320
 4006808:	d8801e15 	stw	r2,120(sp)
 400680c:	d8c01f15 	stw	r3,124(sp)
 4006810:	dec01a15 	stw	sp,104(sp)
 4006814:	d8001c15 	stw	zero,112(sp)
 4006818:	d8001b15 	stw	zero,108(sp)
 400681c:	d811883a 	mov	r8,sp
 4006820:	d8002915 	stw	zero,164(sp)
 4006824:	d8002615 	stw	zero,152(sp)
 4006828:	d9002c15 	stw	r4,176(sp)
 400682c:	98800007 	ldb	r2,0(r19)
 4006830:	10031426 	beq	r2,zero,4007484 <___svfiprintf_internal_r+0xce0>
 4006834:	00c00944 	movi	r3,37
 4006838:	9825883a 	mov	r18,r19
 400683c:	10c0021e 	bne	r2,r3,4006848 <___svfiprintf_internal_r+0xa4>
 4006840:	00001406 	br	4006894 <___svfiprintf_internal_r+0xf0>
 4006844:	10c00326 	beq	r2,r3,4006854 <___svfiprintf_internal_r+0xb0>
 4006848:	94800044 	addi	r18,r18,1
 400684c:	90800007 	ldb	r2,0(r18)
 4006850:	103ffc1e 	bne	r2,zero,4006844 <__alt_mem_onchip_memory2_0+0xfc001684>
 4006854:	94e1c83a 	sub	r16,r18,r19
 4006858:	80000e26 	beq	r16,zero,4006894 <___svfiprintf_internal_r+0xf0>
 400685c:	d8c01c17 	ldw	r3,112(sp)
 4006860:	d8801b17 	ldw	r2,108(sp)
 4006864:	44c00015 	stw	r19,0(r8)
 4006868:	1c07883a 	add	r3,r3,r16
 400686c:	10800044 	addi	r2,r2,1
 4006870:	d8c01c15 	stw	r3,112(sp)
 4006874:	44000115 	stw	r16,4(r8)
 4006878:	d8801b15 	stw	r2,108(sp)
 400687c:	00c001c4 	movi	r3,7
 4006880:	18835c16 	blt	r3,r2,40075f4 <___svfiprintf_internal_r+0xe50>
 4006884:	42000204 	addi	r8,r8,8
 4006888:	d9402617 	ldw	r5,152(sp)
 400688c:	2c0b883a 	add	r5,r5,r16
 4006890:	d9402615 	stw	r5,152(sp)
 4006894:	90800007 	ldb	r2,0(r18)
 4006898:	1002fc26 	beq	r2,zero,400748c <___svfiprintf_internal_r+0xce8>
 400689c:	0023883a 	mov	r17,zero
 40068a0:	00bfffc4 	movi	r2,-1
 40068a4:	0021883a 	mov	r16,zero
 40068a8:	94c00044 	addi	r19,r18,1
 40068ac:	90c00047 	ldb	r3,1(r18)
 40068b0:	dc402105 	stb	r17,132(sp)
 40068b4:	d8001d85 	stb	zero,118(sp)
 40068b8:	002b883a 	mov	r21,zero
 40068bc:	d8802015 	stw	r2,128(sp)
 40068c0:	d8002515 	stw	zero,148(sp)
 40068c4:	04801604 	movi	r18,88
 40068c8:	05000244 	movi	r20,9
 40068cc:	402f883a 	mov	r23,r8
 40068d0:	8023883a 	mov	r17,r16
 40068d4:	9cc00044 	addi	r19,r19,1
 40068d8:	18bff804 	addi	r2,r3,-32
 40068dc:	9081fb36 	bltu	r18,r2,40070cc <___svfiprintf_internal_r+0x928>
 40068e0:	100490ba 	slli	r2,r2,2
 40068e4:	01010034 	movhi	r4,1024
 40068e8:	211a3e04 	addi	r4,r4,26872
 40068ec:	1105883a 	add	r2,r2,r4
 40068f0:	10800017 	ldw	r2,0(r2)
 40068f4:	1000683a 	jmp	r2
 40068f8:	04006af8 	rdprs	r16,zero,427
 40068fc:	040070cc 	andi	r16,zero,451
 4006900:	040070cc 	andi	r16,zero,451
 4006904:	04006aec 	andhi	r16,zero,427
 4006908:	040070cc 	andi	r16,zero,451
 400690c:	040070cc 	andi	r16,zero,451
 4006910:	040070cc 	andi	r16,zero,451
 4006914:	040070cc 	andi	r16,zero,451
 4006918:	040070cc 	andi	r16,zero,451
 400691c:	040070cc 	andi	r16,zero,451
 4006920:	04006a5c 	xori	r16,zero,425
 4006924:	04006c58 	cmpnei	r16,zero,433
 4006928:	040070cc 	andi	r16,zero,451
 400692c:	04006a84 	movi	r16,426
 4006930:	04007108 	cmpgei	r16,zero,452
 4006934:	040070cc 	andi	r16,zero,451
 4006938:	040070fc 	xorhi	r16,zero,451
 400693c:	04007090 	cmplti	r16,zero,450
 4006940:	04007090 	cmplti	r16,zero,450
 4006944:	04007090 	cmplti	r16,zero,450
 4006948:	04007090 	cmplti	r16,zero,450
 400694c:	04007090 	cmplti	r16,zero,450
 4006950:	04007090 	cmplti	r16,zero,450
 4006954:	04007090 	cmplti	r16,zero,450
 4006958:	04007090 	cmplti	r16,zero,450
 400695c:	04007090 	cmplti	r16,zero,450
 4006960:	040070cc 	andi	r16,zero,451
 4006964:	040070cc 	andi	r16,zero,451
 4006968:	040070cc 	andi	r16,zero,451
 400696c:	040070cc 	andi	r16,zero,451
 4006970:	040070cc 	andi	r16,zero,451
 4006974:	040070cc 	andi	r16,zero,451
 4006978:	040070cc 	andi	r16,zero,451
 400697c:	040070cc 	andi	r16,zero,451
 4006980:	040070cc 	andi	r16,zero,451
 4006984:	040070cc 	andi	r16,zero,451
 4006988:	04007014 	movui	r16,448
 400698c:	040070cc 	andi	r16,zero,451
 4006990:	040070cc 	andi	r16,zero,451
 4006994:	040070cc 	andi	r16,zero,451
 4006998:	040070cc 	andi	r16,zero,451
 400699c:	040070cc 	andi	r16,zero,451
 40069a0:	040070cc 	andi	r16,zero,451
 40069a4:	040070cc 	andi	r16,zero,451
 40069a8:	040070cc 	andi	r16,zero,451
 40069ac:	040070cc 	andi	r16,zero,451
 40069b0:	040070cc 	andi	r16,zero,451
 40069b4:	040071c4 	movi	r16,455
 40069b8:	040070cc 	andi	r16,zero,451
 40069bc:	040070cc 	andi	r16,zero,451
 40069c0:	040070cc 	andi	r16,zero,451
 40069c4:	040070cc 	andi	r16,zero,451
 40069c8:	040070cc 	andi	r16,zero,451
 40069cc:	04007150 	cmplti	r16,zero,453
 40069d0:	040070cc 	andi	r16,zero,451
 40069d4:	040070cc 	andi	r16,zero,451
 40069d8:	04006e50 	cmplti	r16,zero,441
 40069dc:	040070cc 	andi	r16,zero,451
 40069e0:	040070cc 	andi	r16,zero,451
 40069e4:	040070cc 	andi	r16,zero,451
 40069e8:	040070cc 	andi	r16,zero,451
 40069ec:	040070cc 	andi	r16,zero,451
 40069f0:	040070cc 	andi	r16,zero,451
 40069f4:	040070cc 	andi	r16,zero,451
 40069f8:	040070cc 	andi	r16,zero,451
 40069fc:	040070cc 	andi	r16,zero,451
 4006a00:	040070cc 	andi	r16,zero,451
 4006a04:	04006d1c 	xori	r16,zero,436
 4006a08:	04006f00 	call	4006f0 <__reset-0x3bff910>
 4006a0c:	040070cc 	andi	r16,zero,451
 4006a10:	040070cc 	andi	r16,zero,451
 4006a14:	040070cc 	andi	r16,zero,451
 4006a18:	04006ef4 	movhi	r16,443
 4006a1c:	04006f00 	call	4006f0 <__reset-0x3bff910>
 4006a20:	040070cc 	andi	r16,zero,451
 4006a24:	040070cc 	andi	r16,zero,451
 4006a28:	04006ee0 	cmpeqi	r16,zero,443
 4006a2c:	040070cc 	andi	r16,zero,451
 4006a30:	04006ea0 	cmpeqi	r16,zero,442
 4006a34:	04006c6c 	andhi	r16,zero,433
 4006a38:	04006a90 	cmplti	r16,zero,426
 4006a3c:	04007008 	cmpgei	r16,zero,448
 4006a40:	040070cc 	andi	r16,zero,451
 4006a44:	04006fb4 	movhi	r16,446
 4006a48:	040070cc 	andi	r16,zero,451
 4006a4c:	04006bd0 	cmplti	r16,zero,431
 4006a50:	040070cc 	andi	r16,zero,451
 4006a54:	040070cc 	andi	r16,zero,451
 4006a58:	04006b1c 	xori	r16,zero,428
 4006a5c:	d9002417 	ldw	r4,144(sp)
 4006a60:	d9402417 	ldw	r5,144(sp)
 4006a64:	21000017 	ldw	r4,0(r4)
 4006a68:	28800104 	addi	r2,r5,4
 4006a6c:	d9002515 	stw	r4,148(sp)
 4006a70:	20032b0e 	bge	r4,zero,4007720 <___svfiprintf_internal_r+0xf7c>
 4006a74:	d8c02517 	ldw	r3,148(sp)
 4006a78:	d8802415 	stw	r2,144(sp)
 4006a7c:	00c7c83a 	sub	r3,zero,r3
 4006a80:	d8c02515 	stw	r3,148(sp)
 4006a84:	8c400114 	ori	r17,r17,4
 4006a88:	98c00007 	ldb	r3,0(r19)
 4006a8c:	003f9106 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 4006a90:	00800c04 	movi	r2,48
 4006a94:	d9402417 	ldw	r5,144(sp)
 4006a98:	d9002017 	ldw	r4,128(sp)
 4006a9c:	d8801d05 	stb	r2,116(sp)
 4006aa0:	00801e04 	movi	r2,120
 4006aa4:	d8801d45 	stb	r2,117(sp)
 4006aa8:	d8001d85 	stb	zero,118(sp)
 4006aac:	b811883a 	mov	r8,r23
 4006ab0:	28c00104 	addi	r3,r5,4
 4006ab4:	2c800017 	ldw	r18,0(r5)
 4006ab8:	0029883a 	mov	r20,zero
 4006abc:	88800094 	ori	r2,r17,2
 4006ac0:	20036316 	blt	r4,zero,4007850 <___svfiprintf_internal_r+0x10ac>
 4006ac4:	00bfdfc4 	movi	r2,-129
 4006ac8:	88a0703a 	and	r16,r17,r2
 4006acc:	d8c02415 	stw	r3,144(sp)
 4006ad0:	84000094 	ori	r16,r16,2
 4006ad4:	90031c26 	beq	r18,zero,4007748 <___svfiprintf_internal_r+0xfa4>
 4006ad8:	01410074 	movhi	r5,1025
 4006adc:	29787904 	addi	r5,r5,-7708
 4006ae0:	002b883a 	mov	r21,zero
 4006ae4:	d9402915 	stw	r5,164(sp)
 4006ae8:	00002906 	br	4006b90 <___svfiprintf_internal_r+0x3ec>
 4006aec:	8c400054 	ori	r17,r17,1
 4006af0:	98c00007 	ldb	r3,0(r19)
 4006af4:	003f7706 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 4006af8:	a8803fcc 	andi	r2,r21,255
 4006afc:	1080201c 	xori	r2,r2,128
 4006b00:	10bfe004 	addi	r2,r2,-128
 4006b04:	10032a1e 	bne	r2,zero,40077b0 <___svfiprintf_internal_r+0x100c>
 4006b08:	00c00044 	movi	r3,1
 4006b0c:	d8c02105 	stb	r3,132(sp)
 4006b10:	05400804 	movi	r21,32
 4006b14:	98c00007 	ldb	r3,0(r19)
 4006b18:	003f6e06 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 4006b1c:	8821883a 	mov	r16,r17
 4006b20:	dc402103 	ldbu	r17,132(sp)
 4006b24:	b811883a 	mov	r8,r23
 4006b28:	8c403fcc 	andi	r17,r17,255
 4006b2c:	8803f01e 	bne	r17,zero,4007af0 <___svfiprintf_internal_r+0x134c>
 4006b30:	00810074 	movhi	r2,1025
 4006b34:	10b87904 	addi	r2,r2,-7708
 4006b38:	d8802915 	stw	r2,164(sp)
 4006b3c:	8080080c 	andi	r2,r16,32
 4006b40:	1000cd26 	beq	r2,zero,4006e78 <___svfiprintf_internal_r+0x6d4>
 4006b44:	d9002417 	ldw	r4,144(sp)
 4006b48:	24800017 	ldw	r18,0(r4)
 4006b4c:	25000117 	ldw	r20,4(r4)
 4006b50:	21000204 	addi	r4,r4,8
 4006b54:	d9002415 	stw	r4,144(sp)
 4006b58:	8080004c 	andi	r2,r16,1
 4006b5c:	1002c726 	beq	r2,zero,400767c <___svfiprintf_internal_r+0xed8>
 4006b60:	9504b03a 	or	r2,r18,r20
 4006b64:	1003061e 	bne	r2,zero,4007780 <___svfiprintf_internal_r+0xfdc>
 4006b68:	d9002017 	ldw	r4,128(sp)
 4006b6c:	d8001d85 	stb	zero,118(sp)
 4006b70:	20033e16 	blt	r4,zero,400786c <___svfiprintf_internal_r+0x10c8>
 4006b74:	00bfdfc4 	movi	r2,-129
 4006b78:	80a0703a 	and	r16,r16,r2
 4006b7c:	d9402017 	ldw	r5,128(sp)
 4006b80:	002b883a 	mov	r21,zero
 4006b84:	28002826 	beq	r5,zero,4006c28 <___svfiprintf_internal_r+0x484>
 4006b88:	0025883a 	mov	r18,zero
 4006b8c:	0029883a 	mov	r20,zero
 4006b90:	d9002917 	ldw	r4,164(sp)
 4006b94:	dc401a04 	addi	r17,sp,104
 4006b98:	908003cc 	andi	r2,r18,15
 4006b9c:	a006973a 	slli	r3,r20,28
 4006ba0:	2085883a 	add	r2,r4,r2
 4006ba4:	9024d13a 	srli	r18,r18,4
 4006ba8:	10800003 	ldbu	r2,0(r2)
 4006bac:	a028d13a 	srli	r20,r20,4
 4006bb0:	8c7fffc4 	addi	r17,r17,-1
 4006bb4:	1ca4b03a 	or	r18,r3,r18
 4006bb8:	88800005 	stb	r2,0(r17)
 4006bbc:	9504b03a 	or	r2,r18,r20
 4006bc0:	103ff51e 	bne	r2,zero,4006b98 <__alt_mem_onchip_memory2_0+0xfc0019d8>
 4006bc4:	d8801e17 	ldw	r2,120(sp)
 4006bc8:	1469c83a 	sub	r20,r2,r17
 4006bcc:	00001906 	br	4006c34 <___svfiprintf_internal_r+0x490>
 4006bd0:	8821883a 	mov	r16,r17
 4006bd4:	dc402103 	ldbu	r17,132(sp)
 4006bd8:	b811883a 	mov	r8,r23
 4006bdc:	8c403fcc 	andi	r17,r17,255
 4006be0:	8803d01e 	bne	r17,zero,4007b24 <___svfiprintf_internal_r+0x1380>
 4006be4:	8080080c 	andi	r2,r16,32
 4006be8:	10016126 	beq	r2,zero,4007170 <___svfiprintf_internal_r+0x9cc>
 4006bec:	d9002417 	ldw	r4,144(sp)
 4006bf0:	d9402017 	ldw	r5,128(sp)
 4006bf4:	d8001d85 	stb	zero,118(sp)
 4006bf8:	20c00204 	addi	r3,r4,8
 4006bfc:	24800017 	ldw	r18,0(r4)
 4006c00:	25000117 	ldw	r20,4(r4)
 4006c04:	28030f16 	blt	r5,zero,4007844 <___svfiprintf_internal_r+0x10a0>
 4006c08:	013fdfc4 	movi	r4,-129
 4006c0c:	9504b03a 	or	r2,r18,r20
 4006c10:	d8c02415 	stw	r3,144(sp)
 4006c14:	8120703a 	and	r16,r16,r4
 4006c18:	002b883a 	mov	r21,zero
 4006c1c:	1000cd1e 	bne	r2,zero,4006f54 <___svfiprintf_internal_r+0x7b0>
 4006c20:	d8c02017 	ldw	r3,128(sp)
 4006c24:	1803141e 	bne	r3,zero,4007878 <___svfiprintf_internal_r+0x10d4>
 4006c28:	d8002015 	stw	zero,128(sp)
 4006c2c:	0029883a 	mov	r20,zero
 4006c30:	dc401a04 	addi	r17,sp,104
 4006c34:	dc802017 	ldw	r18,128(sp)
 4006c38:	9500010e 	bge	r18,r20,4006c40 <___svfiprintf_internal_r+0x49c>
 4006c3c:	a025883a 	mov	r18,r20
 4006c40:	ad403fcc 	andi	r21,r21,255
 4006c44:	ad40201c 	xori	r21,r21,128
 4006c48:	ad7fe004 	addi	r21,r21,-128
 4006c4c:	a8003f26 	beq	r21,zero,4006d4c <___svfiprintf_internal_r+0x5a8>
 4006c50:	94800044 	addi	r18,r18,1
 4006c54:	00003d06 	br	4006d4c <___svfiprintf_internal_r+0x5a8>
 4006c58:	00c00044 	movi	r3,1
 4006c5c:	d8c02105 	stb	r3,132(sp)
 4006c60:	05400ac4 	movi	r21,43
 4006c64:	98c00007 	ldb	r3,0(r19)
 4006c68:	003f1a06 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 4006c6c:	8821883a 	mov	r16,r17
 4006c70:	dc402103 	ldbu	r17,132(sp)
 4006c74:	b811883a 	mov	r8,r23
 4006c78:	8c403fcc 	andi	r17,r17,255
 4006c7c:	8803a71e 	bne	r17,zero,4007b1c <___svfiprintf_internal_r+0x1378>
 4006c80:	8080080c 	andi	r2,r16,32
 4006c84:	10015726 	beq	r2,zero,40071e4 <___svfiprintf_internal_r+0xa40>
 4006c88:	d8c02417 	ldw	r3,144(sp)
 4006c8c:	d9002017 	ldw	r4,128(sp)
 4006c90:	d8001d85 	stb	zero,118(sp)
 4006c94:	18800204 	addi	r2,r3,8
 4006c98:	1c800017 	ldw	r18,0(r3)
 4006c9c:	1d000117 	ldw	r20,4(r3)
 4006ca0:	2002db16 	blt	r4,zero,4007810 <___svfiprintf_internal_r+0x106c>
 4006ca4:	013fdfc4 	movi	r4,-129
 4006ca8:	9506b03a 	or	r3,r18,r20
 4006cac:	d8802415 	stw	r2,144(sp)
 4006cb0:	8120703a 	and	r16,r16,r4
 4006cb4:	18015826 	beq	r3,zero,4007218 <___svfiprintf_internal_r+0xa74>
 4006cb8:	002b883a 	mov	r21,zero
 4006cbc:	dc401a04 	addi	r17,sp,104
 4006cc0:	9006d0fa 	srli	r3,r18,3
 4006cc4:	a008977a 	slli	r4,r20,29
 4006cc8:	a028d0fa 	srli	r20,r20,3
 4006ccc:	948001cc 	andi	r18,r18,7
 4006cd0:	90800c04 	addi	r2,r18,48
 4006cd4:	8c7fffc4 	addi	r17,r17,-1
 4006cd8:	20e4b03a 	or	r18,r4,r3
 4006cdc:	88800005 	stb	r2,0(r17)
 4006ce0:	9506b03a 	or	r3,r18,r20
 4006ce4:	183ff61e 	bne	r3,zero,4006cc0 <__alt_mem_onchip_memory2_0+0xfc001b00>
 4006ce8:	80c0004c 	andi	r3,r16,1
 4006cec:	18028926 	beq	r3,zero,4007714 <___svfiprintf_internal_r+0xf70>
 4006cf0:	10803fcc 	andi	r2,r2,255
 4006cf4:	1080201c 	xori	r2,r2,128
 4006cf8:	10bfe004 	addi	r2,r2,-128
 4006cfc:	00c00c04 	movi	r3,48
 4006d00:	10ffb026 	beq	r2,r3,4006bc4 <__alt_mem_onchip_memory2_0+0xfc001a04>
 4006d04:	88ffffc5 	stb	r3,-1(r17)
 4006d08:	d8c01e17 	ldw	r3,120(sp)
 4006d0c:	88bfffc4 	addi	r2,r17,-1
 4006d10:	1023883a 	mov	r17,r2
 4006d14:	18a9c83a 	sub	r20,r3,r2
 4006d18:	003fc606 	br	4006c34 <__alt_mem_onchip_memory2_0+0xfc001a74>
 4006d1c:	d8c02417 	ldw	r3,144(sp)
 4006d20:	04800044 	movi	r18,1
 4006d24:	8821883a 	mov	r16,r17
 4006d28:	18800017 	ldw	r2,0(r3)
 4006d2c:	18c00104 	addi	r3,r3,4
 4006d30:	b811883a 	mov	r8,r23
 4006d34:	d8001d85 	stb	zero,118(sp)
 4006d38:	d8801005 	stb	r2,64(sp)
 4006d3c:	d8c02415 	stw	r3,144(sp)
 4006d40:	9029883a 	mov	r20,r18
 4006d44:	dc401004 	addi	r17,sp,64
 4006d48:	d8002015 	stw	zero,128(sp)
 4006d4c:	80c0008c 	andi	r3,r16,2
 4006d50:	d8c02115 	stw	r3,132(sp)
 4006d54:	18000126 	beq	r3,zero,4006d5c <___svfiprintf_internal_r+0x5b8>
 4006d58:	94800084 	addi	r18,r18,2
 4006d5c:	80c0210c 	andi	r3,r16,132
 4006d60:	d8c02215 	stw	r3,136(sp)
 4006d64:	1801321e 	bne	r3,zero,4007230 <___svfiprintf_internal_r+0xa8c>
 4006d68:	d9002517 	ldw	r4,148(sp)
 4006d6c:	24b9c83a 	sub	fp,r4,r18
 4006d70:	07012f0e 	bge	zero,fp,4007230 <___svfiprintf_internal_r+0xa8c>
 4006d74:	02400404 	movi	r9,16
 4006d78:	d8c01c17 	ldw	r3,112(sp)
 4006d7c:	d8801b17 	ldw	r2,108(sp)
 4006d80:	4f03250e 	bge	r9,fp,4007a18 <___svfiprintf_internal_r+0x1274>
 4006d84:	01010074 	movhi	r4,1025
 4006d88:	2138de04 	addi	r4,r4,-7304
 4006d8c:	dc002a15 	stw	r16,168(sp)
 4006d90:	dc402b15 	stw	r17,172(sp)
 4006d94:	d9002815 	stw	r4,160(sp)
 4006d98:	e023883a 	mov	r17,fp
 4006d9c:	482f883a 	mov	r23,r9
 4006da0:	9839883a 	mov	fp,r19
 4006da4:	054001c4 	movi	r21,7
 4006da8:	9027883a 	mov	r19,r18
 4006dac:	dc002717 	ldw	r16,156(sp)
 4006db0:	dc802317 	ldw	r18,140(sp)
 4006db4:	00000306 	br	4006dc4 <___svfiprintf_internal_r+0x620>
 4006db8:	8c7ffc04 	addi	r17,r17,-16
 4006dbc:	42000204 	addi	r8,r8,8
 4006dc0:	bc40130e 	bge	r23,r17,4006e10 <___svfiprintf_internal_r+0x66c>
 4006dc4:	01410074 	movhi	r5,1025
 4006dc8:	18c00404 	addi	r3,r3,16
 4006dcc:	10800044 	addi	r2,r2,1
 4006dd0:	2978de04 	addi	r5,r5,-7304
 4006dd4:	41400015 	stw	r5,0(r8)
 4006dd8:	45c00115 	stw	r23,4(r8)
 4006ddc:	d8c01c15 	stw	r3,112(sp)
 4006de0:	d8801b15 	stw	r2,108(sp)
 4006de4:	a8bff40e 	bge	r21,r2,4006db8 <__alt_mem_onchip_memory2_0+0xfc001bf8>
 4006de8:	d9801a04 	addi	r6,sp,104
 4006dec:	900b883a 	mov	r5,r18
 4006df0:	8009883a 	mov	r4,r16
 4006df4:	40065d40 	call	40065d4 <__ssprint_r>
 4006df8:	1001aa1e 	bne	r2,zero,40074a4 <___svfiprintf_internal_r+0xd00>
 4006dfc:	8c7ffc04 	addi	r17,r17,-16
 4006e00:	d8c01c17 	ldw	r3,112(sp)
 4006e04:	d8801b17 	ldw	r2,108(sp)
 4006e08:	d811883a 	mov	r8,sp
 4006e0c:	bc7fed16 	blt	r23,r17,4006dc4 <__alt_mem_onchip_memory2_0+0xfc001c04>
 4006e10:	9825883a 	mov	r18,r19
 4006e14:	dc002a17 	ldw	r16,168(sp)
 4006e18:	e027883a 	mov	r19,fp
 4006e1c:	8839883a 	mov	fp,r17
 4006e20:	dc402b17 	ldw	r17,172(sp)
 4006e24:	d9002817 	ldw	r4,160(sp)
 4006e28:	e0c7883a 	add	r3,fp,r3
 4006e2c:	10800044 	addi	r2,r2,1
 4006e30:	41000015 	stw	r4,0(r8)
 4006e34:	47000115 	stw	fp,4(r8)
 4006e38:	d8c01c15 	stw	r3,112(sp)
 4006e3c:	d8801b15 	stw	r2,108(sp)
 4006e40:	010001c4 	movi	r4,7
 4006e44:	20821616 	blt	r4,r2,40076a0 <___svfiprintf_internal_r+0xefc>
 4006e48:	42000204 	addi	r8,r8,8
 4006e4c:	0000fa06 	br	4007238 <___svfiprintf_internal_r+0xa94>
 4006e50:	8821883a 	mov	r16,r17
 4006e54:	dc402103 	ldbu	r17,132(sp)
 4006e58:	b811883a 	mov	r8,r23
 4006e5c:	8c403fcc 	andi	r17,r17,255
 4006e60:	8803361e 	bne	r17,zero,4007b3c <___svfiprintf_internal_r+0x1398>
 4006e64:	01410074 	movhi	r5,1025
 4006e68:	29787404 	addi	r5,r5,-7728
 4006e6c:	d9402915 	stw	r5,164(sp)
 4006e70:	8080080c 	andi	r2,r16,32
 4006e74:	103f331e 	bne	r2,zero,4006b44 <__alt_mem_onchip_memory2_0+0xfc001984>
 4006e78:	8080040c 	andi	r2,r16,16
 4006e7c:	1002551e 	bne	r2,zero,40077d4 <___svfiprintf_internal_r+0x1030>
 4006e80:	8080100c 	andi	r2,r16,64
 4006e84:	1002a626 	beq	r2,zero,4007920 <___svfiprintf_internal_r+0x117c>
 4006e88:	d8802417 	ldw	r2,144(sp)
 4006e8c:	0029883a 	mov	r20,zero
 4006e90:	1480000b 	ldhu	r18,0(r2)
 4006e94:	10800104 	addi	r2,r2,4
 4006e98:	d8802415 	stw	r2,144(sp)
 4006e9c:	003f2e06 	br	4006b58 <__alt_mem_onchip_memory2_0+0xfc001998>
 4006ea0:	8821883a 	mov	r16,r17
 4006ea4:	dc402103 	ldbu	r17,132(sp)
 4006ea8:	b811883a 	mov	r8,r23
 4006eac:	8c403fcc 	andi	r17,r17,255
 4006eb0:	88030b1e 	bne	r17,zero,4007ae0 <___svfiprintf_internal_r+0x133c>
 4006eb4:	8080080c 	andi	r2,r16,32
 4006eb8:	1002271e 	bne	r2,zero,4007758 <___svfiprintf_internal_r+0xfb4>
 4006ebc:	8080040c 	andi	r2,r16,16
 4006ec0:	10028e26 	beq	r2,zero,40078fc <___svfiprintf_internal_r+0x1158>
 4006ec4:	d8c02417 	ldw	r3,144(sp)
 4006ec8:	d9002617 	ldw	r4,152(sp)
 4006ecc:	18800017 	ldw	r2,0(r3)
 4006ed0:	18c00104 	addi	r3,r3,4
 4006ed4:	d8c02415 	stw	r3,144(sp)
 4006ed8:	11000015 	stw	r4,0(r2)
 4006edc:	003e5306 	br	400682c <__alt_mem_onchip_memory2_0+0xfc00166c>
 4006ee0:	98c00007 	ldb	r3,0(r19)
 4006ee4:	01401b04 	movi	r5,108
 4006ee8:	19424f26 	beq	r3,r5,4007828 <___svfiprintf_internal_r+0x1084>
 4006eec:	8c400414 	ori	r17,r17,16
 4006ef0:	003e7806 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 4006ef4:	8c401014 	ori	r17,r17,64
 4006ef8:	98c00007 	ldb	r3,0(r19)
 4006efc:	003e7506 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 4006f00:	8821883a 	mov	r16,r17
 4006f04:	dc402103 	ldbu	r17,132(sp)
 4006f08:	b811883a 	mov	r8,r23
 4006f0c:	8c403fcc 	andi	r17,r17,255
 4006f10:	8802fe1e 	bne	r17,zero,4007b0c <___svfiprintf_internal_r+0x1368>
 4006f14:	8080080c 	andi	r2,r16,32
 4006f18:	10004626 	beq	r2,zero,4007034 <___svfiprintf_internal_r+0x890>
 4006f1c:	d9002417 	ldw	r4,144(sp)
 4006f20:	20800117 	ldw	r2,4(r4)
 4006f24:	24800017 	ldw	r18,0(r4)
 4006f28:	21000204 	addi	r4,r4,8
 4006f2c:	d9002415 	stw	r4,144(sp)
 4006f30:	1029883a 	mov	r20,r2
 4006f34:	10004a16 	blt	r2,zero,4007060 <___svfiprintf_internal_r+0x8bc>
 4006f38:	d9002017 	ldw	r4,128(sp)
 4006f3c:	dd401d83 	ldbu	r21,118(sp)
 4006f40:	2001eb16 	blt	r4,zero,40076f0 <___svfiprintf_internal_r+0xf4c>
 4006f44:	00ffdfc4 	movi	r3,-129
 4006f48:	9504b03a 	or	r2,r18,r20
 4006f4c:	80e0703a 	and	r16,r16,r3
 4006f50:	103f3326 	beq	r2,zero,4006c20 <__alt_mem_onchip_memory2_0+0xfc001a60>
 4006f54:	a0009426 	beq	r20,zero,40071a8 <___svfiprintf_internal_r+0xa04>
 4006f58:	dc401a04 	addi	r17,sp,104
 4006f5c:	402f883a 	mov	r23,r8
 4006f60:	9009883a 	mov	r4,r18
 4006f64:	a00b883a 	mov	r5,r20
 4006f68:	01800284 	movi	r6,10
 4006f6c:	000f883a 	mov	r7,zero
 4006f70:	4008f440 	call	4008f44 <__umoddi3>
 4006f74:	10800c04 	addi	r2,r2,48
 4006f78:	8c7fffc4 	addi	r17,r17,-1
 4006f7c:	9009883a 	mov	r4,r18
 4006f80:	a00b883a 	mov	r5,r20
 4006f84:	88800005 	stb	r2,0(r17)
 4006f88:	01800284 	movi	r6,10
 4006f8c:	000f883a 	mov	r7,zero
 4006f90:	40089480 	call	4008948 <__udivdi3>
 4006f94:	1025883a 	mov	r18,r2
 4006f98:	10c4b03a 	or	r2,r2,r3
 4006f9c:	1829883a 	mov	r20,r3
 4006fa0:	103fef1e 	bne	r2,zero,4006f60 <__alt_mem_onchip_memory2_0+0xfc001da0>
 4006fa4:	d9001e17 	ldw	r4,120(sp)
 4006fa8:	b811883a 	mov	r8,r23
 4006fac:	2469c83a 	sub	r20,r4,r17
 4006fb0:	003f2006 	br	4006c34 <__alt_mem_onchip_memory2_0+0xfc001a74>
 4006fb4:	d8802417 	ldw	r2,144(sp)
 4006fb8:	8821883a 	mov	r16,r17
 4006fbc:	d8001d85 	stb	zero,118(sp)
 4006fc0:	14400017 	ldw	r17,0(r2)
 4006fc4:	b811883a 	mov	r8,r23
 4006fc8:	15c00104 	addi	r23,r2,4
 4006fcc:	88026c26 	beq	r17,zero,4007980 <___svfiprintf_internal_r+0x11dc>
 4006fd0:	d8c02017 	ldw	r3,128(sp)
 4006fd4:	18025f16 	blt	r3,zero,4007954 <___svfiprintf_internal_r+0x11b0>
 4006fd8:	180d883a 	mov	r6,r3
 4006fdc:	000b883a 	mov	r5,zero
 4006fe0:	8809883a 	mov	r4,r17
 4006fe4:	da002d15 	stw	r8,180(sp)
 4006fe8:	400514c0 	call	400514c <memchr>
 4006fec:	da002d17 	ldw	r8,180(sp)
 4006ff0:	1002a526 	beq	r2,zero,4007a88 <___svfiprintf_internal_r+0x12e4>
 4006ff4:	1469c83a 	sub	r20,r2,r17
 4006ff8:	dd401d83 	ldbu	r21,118(sp)
 4006ffc:	ddc02415 	stw	r23,144(sp)
 4007000:	d8002015 	stw	zero,128(sp)
 4007004:	003f0b06 	br	4006c34 <__alt_mem_onchip_memory2_0+0xfc001a74>
 4007008:	8c400814 	ori	r17,r17,32
 400700c:	98c00007 	ldb	r3,0(r19)
 4007010:	003e3006 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 4007014:	8821883a 	mov	r16,r17
 4007018:	dc402103 	ldbu	r17,132(sp)
 400701c:	b811883a 	mov	r8,r23
 4007020:	8c403fcc 	andi	r17,r17,255
 4007024:	8802b01e 	bne	r17,zero,4007ae8 <___svfiprintf_internal_r+0x1344>
 4007028:	84000414 	ori	r16,r16,16
 400702c:	8080080c 	andi	r2,r16,32
 4007030:	103fba1e 	bne	r2,zero,4006f1c <__alt_mem_onchip_memory2_0+0xfc001d5c>
 4007034:	8080040c 	andi	r2,r16,16
 4007038:	1001df1e 	bne	r2,zero,40077b8 <___svfiprintf_internal_r+0x1014>
 400703c:	8080100c 	andi	r2,r16,64
 4007040:	10023d26 	beq	r2,zero,4007938 <___svfiprintf_internal_r+0x1194>
 4007044:	d8802417 	ldw	r2,144(sp)
 4007048:	1480000f 	ldh	r18,0(r2)
 400704c:	10800104 	addi	r2,r2,4
 4007050:	d8802415 	stw	r2,144(sp)
 4007054:	9029d7fa 	srai	r20,r18,31
 4007058:	a005883a 	mov	r2,r20
 400705c:	103fb60e 	bge	r2,zero,4006f38 <__alt_mem_onchip_memory2_0+0xfc001d78>
 4007060:	d9402017 	ldw	r5,128(sp)
 4007064:	04a5c83a 	sub	r18,zero,r18
 4007068:	05400b44 	movi	r21,45
 400706c:	9004c03a 	cmpne	r2,r18,zero
 4007070:	0529c83a 	sub	r20,zero,r20
 4007074:	dd401d85 	stb	r21,118(sp)
 4007078:	a0a9c83a 	sub	r20,r20,r2
 400707c:	28026c16 	blt	r5,zero,4007a30 <___svfiprintf_internal_r+0x128c>
 4007080:	00bfdfc4 	movi	r2,-129
 4007084:	80a0703a 	and	r16,r16,r2
 4007088:	a03fb31e 	bne	r20,zero,4006f58 <__alt_mem_onchip_memory2_0+0xfc001d98>
 400708c:	00004606 	br	40071a8 <___svfiprintf_internal_r+0xa04>
 4007090:	9839883a 	mov	fp,r19
 4007094:	d8002515 	stw	zero,148(sp)
 4007098:	1c3ff404 	addi	r16,r3,-48
 400709c:	0009883a 	mov	r4,zero
 40070a0:	01400284 	movi	r5,10
 40070a4:	4000af80 	call	4000af8 <__mulsi3>
 40070a8:	e0c00007 	ldb	r3,0(fp)
 40070ac:	8089883a 	add	r4,r16,r2
 40070b0:	9cc00044 	addi	r19,r19,1
 40070b4:	1c3ff404 	addi	r16,r3,-48
 40070b8:	9839883a 	mov	fp,r19
 40070bc:	a43ff82e 	bgeu	r20,r16,40070a0 <__alt_mem_onchip_memory2_0+0xfc001ee0>
 40070c0:	d9002515 	stw	r4,148(sp)
 40070c4:	18bff804 	addi	r2,r3,-32
 40070c8:	90be052e 	bgeu	r18,r2,40068e0 <__alt_mem_onchip_memory2_0+0xfc001720>
 40070cc:	8821883a 	mov	r16,r17
 40070d0:	dc402103 	ldbu	r17,132(sp)
 40070d4:	b811883a 	mov	r8,r23
 40070d8:	8c403fcc 	andi	r17,r17,255
 40070dc:	88028d1e 	bne	r17,zero,4007b14 <___svfiprintf_internal_r+0x1370>
 40070e0:	1800ea26 	beq	r3,zero,400748c <___svfiprintf_internal_r+0xce8>
 40070e4:	04800044 	movi	r18,1
 40070e8:	d8c01005 	stb	r3,64(sp)
 40070ec:	d8001d85 	stb	zero,118(sp)
 40070f0:	9029883a 	mov	r20,r18
 40070f4:	dc401004 	addi	r17,sp,64
 40070f8:	003f1306 	br	4006d48 <__alt_mem_onchip_memory2_0+0xfc001b88>
 40070fc:	8c402014 	ori	r17,r17,128
 4007100:	98c00007 	ldb	r3,0(r19)
 4007104:	003df306 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 4007108:	98c00007 	ldb	r3,0(r19)
 400710c:	01000a84 	movi	r4,42
 4007110:	9f000044 	addi	fp,r19,1
 4007114:	19026326 	beq	r3,r4,4007aa4 <___svfiprintf_internal_r+0x1300>
 4007118:	1c3ff404 	addi	r16,r3,-48
 400711c:	0009883a 	mov	r4,zero
 4007120:	a4025636 	bltu	r20,r16,4007a7c <___svfiprintf_internal_r+0x12d8>
 4007124:	01400284 	movi	r5,10
 4007128:	4000af80 	call	4000af8 <__mulsi3>
 400712c:	e0c00007 	ldb	r3,0(fp)
 4007130:	1409883a 	add	r4,r2,r16
 4007134:	e4c00044 	addi	r19,fp,1
 4007138:	1c3ff404 	addi	r16,r3,-48
 400713c:	9839883a 	mov	fp,r19
 4007140:	a43ff82e 	bgeu	r20,r16,4007124 <__alt_mem_onchip_memory2_0+0xfc001f64>
 4007144:	20020c16 	blt	r4,zero,4007978 <___svfiprintf_internal_r+0x11d4>
 4007148:	d9002015 	stw	r4,128(sp)
 400714c:	003de206 	br	40068d8 <__alt_mem_onchip_memory2_0+0xfc001718>
 4007150:	8821883a 	mov	r16,r17
 4007154:	dc402103 	ldbu	r17,132(sp)
 4007158:	b811883a 	mov	r8,r23
 400715c:	8c403fcc 	andi	r17,r17,255
 4007160:	8802721e 	bne	r17,zero,4007b2c <___svfiprintf_internal_r+0x1388>
 4007164:	84000414 	ori	r16,r16,16
 4007168:	8080080c 	andi	r2,r16,32
 400716c:	103e9f1e 	bne	r2,zero,4006bec <__alt_mem_onchip_memory2_0+0xfc001a2c>
 4007170:	8080040c 	andi	r2,r16,16
 4007174:	10015326 	beq	r2,zero,40076c4 <___svfiprintf_internal_r+0xf20>
 4007178:	d8c02417 	ldw	r3,144(sp)
 400717c:	d9002017 	ldw	r4,128(sp)
 4007180:	d8001d85 	stb	zero,118(sp)
 4007184:	18800104 	addi	r2,r3,4
 4007188:	1c800017 	ldw	r18,0(r3)
 400718c:	0029883a 	mov	r20,zero
 4007190:	20015516 	blt	r4,zero,40076e8 <___svfiprintf_internal_r+0xf44>
 4007194:	00ffdfc4 	movi	r3,-129
 4007198:	d8802415 	stw	r2,144(sp)
 400719c:	80e0703a 	and	r16,r16,r3
 40071a0:	002b883a 	mov	r21,zero
 40071a4:	903e9e26 	beq	r18,zero,4006c20 <__alt_mem_onchip_memory2_0+0xfc001a60>
 40071a8:	00800244 	movi	r2,9
 40071ac:	14bf6a36 	bltu	r2,r18,4006f58 <__alt_mem_onchip_memory2_0+0xfc001d98>
 40071b0:	94800c04 	addi	r18,r18,48
 40071b4:	dc8019c5 	stb	r18,103(sp)
 40071b8:	dd002c17 	ldw	r20,176(sp)
 40071bc:	dc4019c4 	addi	r17,sp,103
 40071c0:	003e9c06 	br	4006c34 <__alt_mem_onchip_memory2_0+0xfc001a74>
 40071c4:	8821883a 	mov	r16,r17
 40071c8:	dc402103 	ldbu	r17,132(sp)
 40071cc:	b811883a 	mov	r8,r23
 40071d0:	8c403fcc 	andi	r17,r17,255
 40071d4:	8802571e 	bne	r17,zero,4007b34 <___svfiprintf_internal_r+0x1390>
 40071d8:	84000414 	ori	r16,r16,16
 40071dc:	8080080c 	andi	r2,r16,32
 40071e0:	103ea91e 	bne	r2,zero,4006c88 <__alt_mem_onchip_memory2_0+0xfc001ac8>
 40071e4:	8080040c 	andi	r2,r16,16
 40071e8:	10018026 	beq	r2,zero,40077ec <___svfiprintf_internal_r+0x1048>
 40071ec:	d9402417 	ldw	r5,144(sp)
 40071f0:	d8c02017 	ldw	r3,128(sp)
 40071f4:	d8001d85 	stb	zero,118(sp)
 40071f8:	28800104 	addi	r2,r5,4
 40071fc:	2c800017 	ldw	r18,0(r5)
 4007200:	0029883a 	mov	r20,zero
 4007204:	18018216 	blt	r3,zero,4007810 <___svfiprintf_internal_r+0x106c>
 4007208:	00ffdfc4 	movi	r3,-129
 400720c:	d8802415 	stw	r2,144(sp)
 4007210:	80e0703a 	and	r16,r16,r3
 4007214:	903ea81e 	bne	r18,zero,4006cb8 <__alt_mem_onchip_memory2_0+0xfc001af8>
 4007218:	d8802017 	ldw	r2,128(sp)
 400721c:	002b883a 	mov	r21,zero
 4007220:	1001f226 	beq	r2,zero,40079ec <___svfiprintf_internal_r+0x1248>
 4007224:	0025883a 	mov	r18,zero
 4007228:	0029883a 	mov	r20,zero
 400722c:	003ea306 	br	4006cbc <__alt_mem_onchip_memory2_0+0xfc001afc>
 4007230:	d8c01c17 	ldw	r3,112(sp)
 4007234:	d8801b17 	ldw	r2,108(sp)
 4007238:	d9001d87 	ldb	r4,118(sp)
 400723c:	20000b26 	beq	r4,zero,400726c <___svfiprintf_internal_r+0xac8>
 4007240:	d9001d84 	addi	r4,sp,118
 4007244:	18c00044 	addi	r3,r3,1
 4007248:	10800044 	addi	r2,r2,1
 400724c:	41000015 	stw	r4,0(r8)
 4007250:	01000044 	movi	r4,1
 4007254:	41000115 	stw	r4,4(r8)
 4007258:	d8c01c15 	stw	r3,112(sp)
 400725c:	d8801b15 	stw	r2,108(sp)
 4007260:	010001c4 	movi	r4,7
 4007264:	2080f316 	blt	r4,r2,4007634 <___svfiprintf_internal_r+0xe90>
 4007268:	42000204 	addi	r8,r8,8
 400726c:	d9402117 	ldw	r5,132(sp)
 4007270:	28000b26 	beq	r5,zero,40072a0 <___svfiprintf_internal_r+0xafc>
 4007274:	d9001d04 	addi	r4,sp,116
 4007278:	18c00084 	addi	r3,r3,2
 400727c:	10800044 	addi	r2,r2,1
 4007280:	41000015 	stw	r4,0(r8)
 4007284:	01000084 	movi	r4,2
 4007288:	41000115 	stw	r4,4(r8)
 400728c:	d8c01c15 	stw	r3,112(sp)
 4007290:	d8801b15 	stw	r2,108(sp)
 4007294:	010001c4 	movi	r4,7
 4007298:	2080ef16 	blt	r4,r2,4007658 <___svfiprintf_internal_r+0xeb4>
 400729c:	42000204 	addi	r8,r8,8
 40072a0:	d9402217 	ldw	r5,136(sp)
 40072a4:	01002004 	movi	r4,128
 40072a8:	29008f26 	beq	r5,r4,40074e8 <___svfiprintf_internal_r+0xd44>
 40072ac:	d9002017 	ldw	r4,128(sp)
 40072b0:	252fc83a 	sub	r23,r4,r20
 40072b4:	05c0310e 	bge	zero,r23,400737c <___svfiprintf_internal_r+0xbd8>
 40072b8:	07000404 	movi	fp,16
 40072bc:	e5c17d0e 	bge	fp,r23,40078b4 <___svfiprintf_internal_r+0x1110>
 40072c0:	01010074 	movhi	r4,1025
 40072c4:	2138da04 	addi	r4,r4,-7320
 40072c8:	dc002015 	stw	r16,128(sp)
 40072cc:	dc402215 	stw	r17,136(sp)
 40072d0:	d9002115 	stw	r4,132(sp)
 40072d4:	b823883a 	mov	r17,r23
 40072d8:	054001c4 	movi	r21,7
 40072dc:	982f883a 	mov	r23,r19
 40072e0:	dc002717 	ldw	r16,156(sp)
 40072e4:	9027883a 	mov	r19,r18
 40072e8:	dc802317 	ldw	r18,140(sp)
 40072ec:	00000306 	br	40072fc <___svfiprintf_internal_r+0xb58>
 40072f0:	8c7ffc04 	addi	r17,r17,-16
 40072f4:	42000204 	addi	r8,r8,8
 40072f8:	e440110e 	bge	fp,r17,4007340 <___svfiprintf_internal_r+0xb9c>
 40072fc:	18c00404 	addi	r3,r3,16
 4007300:	10800044 	addi	r2,r2,1
 4007304:	45800015 	stw	r22,0(r8)
 4007308:	47000115 	stw	fp,4(r8)
 400730c:	d8c01c15 	stw	r3,112(sp)
 4007310:	d8801b15 	stw	r2,108(sp)
 4007314:	a8bff60e 	bge	r21,r2,40072f0 <__alt_mem_onchip_memory2_0+0xfc002130>
 4007318:	d9801a04 	addi	r6,sp,104
 400731c:	900b883a 	mov	r5,r18
 4007320:	8009883a 	mov	r4,r16
 4007324:	40065d40 	call	40065d4 <__ssprint_r>
 4007328:	10005e1e 	bne	r2,zero,40074a4 <___svfiprintf_internal_r+0xd00>
 400732c:	8c7ffc04 	addi	r17,r17,-16
 4007330:	d8c01c17 	ldw	r3,112(sp)
 4007334:	d8801b17 	ldw	r2,108(sp)
 4007338:	d811883a 	mov	r8,sp
 400733c:	e47fef16 	blt	fp,r17,40072fc <__alt_mem_onchip_memory2_0+0xfc00213c>
 4007340:	9825883a 	mov	r18,r19
 4007344:	dc002017 	ldw	r16,128(sp)
 4007348:	b827883a 	mov	r19,r23
 400734c:	882f883a 	mov	r23,r17
 4007350:	dc402217 	ldw	r17,136(sp)
 4007354:	d9402117 	ldw	r5,132(sp)
 4007358:	1dc7883a 	add	r3,r3,r23
 400735c:	10800044 	addi	r2,r2,1
 4007360:	41400015 	stw	r5,0(r8)
 4007364:	45c00115 	stw	r23,4(r8)
 4007368:	d8c01c15 	stw	r3,112(sp)
 400736c:	d8801b15 	stw	r2,108(sp)
 4007370:	010001c4 	movi	r4,7
 4007374:	2080a616 	blt	r4,r2,4007610 <___svfiprintf_internal_r+0xe6c>
 4007378:	42000204 	addi	r8,r8,8
 400737c:	a0c7883a 	add	r3,r20,r3
 4007380:	10800044 	addi	r2,r2,1
 4007384:	44400015 	stw	r17,0(r8)
 4007388:	45000115 	stw	r20,4(r8)
 400738c:	d8c01c15 	stw	r3,112(sp)
 4007390:	d8801b15 	stw	r2,108(sp)
 4007394:	010001c4 	movi	r4,7
 4007398:	20808816 	blt	r4,r2,40075bc <___svfiprintf_internal_r+0xe18>
 400739c:	42000204 	addi	r8,r8,8
 40073a0:	8400010c 	andi	r16,r16,4
 40073a4:	80002c26 	beq	r16,zero,4007458 <___svfiprintf_internal_r+0xcb4>
 40073a8:	d8802517 	ldw	r2,148(sp)
 40073ac:	14a1c83a 	sub	r16,r2,r18
 40073b0:	0400290e 	bge	zero,r16,4007458 <___svfiprintf_internal_r+0xcb4>
 40073b4:	04400404 	movi	r17,16
 40073b8:	d8801b17 	ldw	r2,108(sp)
 40073bc:	8c01a70e 	bge	r17,r16,4007a5c <___svfiprintf_internal_r+0x12b8>
 40073c0:	01410074 	movhi	r5,1025
 40073c4:	2978de04 	addi	r5,r5,-7304
 40073c8:	d9402815 	stw	r5,160(sp)
 40073cc:	050001c4 	movi	r20,7
 40073d0:	dd402717 	ldw	r21,156(sp)
 40073d4:	ddc02317 	ldw	r23,140(sp)
 40073d8:	00000306 	br	40073e8 <___svfiprintf_internal_r+0xc44>
 40073dc:	843ffc04 	addi	r16,r16,-16
 40073e0:	42000204 	addi	r8,r8,8
 40073e4:	8c00130e 	bge	r17,r16,4007434 <___svfiprintf_internal_r+0xc90>
 40073e8:	01010074 	movhi	r4,1025
 40073ec:	18c00404 	addi	r3,r3,16
 40073f0:	10800044 	addi	r2,r2,1
 40073f4:	2138de04 	addi	r4,r4,-7304
 40073f8:	41000015 	stw	r4,0(r8)
 40073fc:	44400115 	stw	r17,4(r8)
 4007400:	d8c01c15 	stw	r3,112(sp)
 4007404:	d8801b15 	stw	r2,108(sp)
 4007408:	a0bff40e 	bge	r20,r2,40073dc <__alt_mem_onchip_memory2_0+0xfc00221c>
 400740c:	d9801a04 	addi	r6,sp,104
 4007410:	b80b883a 	mov	r5,r23
 4007414:	a809883a 	mov	r4,r21
 4007418:	40065d40 	call	40065d4 <__ssprint_r>
 400741c:	1000211e 	bne	r2,zero,40074a4 <___svfiprintf_internal_r+0xd00>
 4007420:	843ffc04 	addi	r16,r16,-16
 4007424:	d8c01c17 	ldw	r3,112(sp)
 4007428:	d8801b17 	ldw	r2,108(sp)
 400742c:	d811883a 	mov	r8,sp
 4007430:	8c3fed16 	blt	r17,r16,40073e8 <__alt_mem_onchip_memory2_0+0xfc002228>
 4007434:	d9402817 	ldw	r5,160(sp)
 4007438:	1c07883a 	add	r3,r3,r16
 400743c:	10800044 	addi	r2,r2,1
 4007440:	41400015 	stw	r5,0(r8)
 4007444:	44000115 	stw	r16,4(r8)
 4007448:	d8c01c15 	stw	r3,112(sp)
 400744c:	d8801b15 	stw	r2,108(sp)
 4007450:	010001c4 	movi	r4,7
 4007454:	2080b516 	blt	r4,r2,400772c <___svfiprintf_internal_r+0xf88>
 4007458:	d8802517 	ldw	r2,148(sp)
 400745c:	1480010e 	bge	r2,r18,4007464 <___svfiprintf_internal_r+0xcc0>
 4007460:	9005883a 	mov	r2,r18
 4007464:	d9002617 	ldw	r4,152(sp)
 4007468:	2089883a 	add	r4,r4,r2
 400746c:	d9002615 	stw	r4,152(sp)
 4007470:	18005a1e 	bne	r3,zero,40075dc <___svfiprintf_internal_r+0xe38>
 4007474:	98800007 	ldb	r2,0(r19)
 4007478:	d8001b15 	stw	zero,108(sp)
 400747c:	d811883a 	mov	r8,sp
 4007480:	103cec1e 	bne	r2,zero,4006834 <__alt_mem_onchip_memory2_0+0xfc001674>
 4007484:	9825883a 	mov	r18,r19
 4007488:	003d0206 	br	4006894 <__alt_mem_onchip_memory2_0+0xfc0016d4>
 400748c:	d8801c17 	ldw	r2,112(sp)
 4007490:	10000426 	beq	r2,zero,40074a4 <___svfiprintf_internal_r+0xd00>
 4007494:	d9402317 	ldw	r5,140(sp)
 4007498:	d9002717 	ldw	r4,156(sp)
 400749c:	d9801a04 	addi	r6,sp,104
 40074a0:	40065d40 	call	40065d4 <__ssprint_r>
 40074a4:	d9402317 	ldw	r5,140(sp)
 40074a8:	d8802617 	ldw	r2,152(sp)
 40074ac:	28c0030b 	ldhu	r3,12(r5)
 40074b0:	18c0100c 	andi	r3,r3,64
 40074b4:	18015c1e 	bne	r3,zero,4007a28 <___svfiprintf_internal_r+0x1284>
 40074b8:	dfc03717 	ldw	ra,220(sp)
 40074bc:	df003617 	ldw	fp,216(sp)
 40074c0:	ddc03517 	ldw	r23,212(sp)
 40074c4:	dd803417 	ldw	r22,208(sp)
 40074c8:	dd403317 	ldw	r21,204(sp)
 40074cc:	dd003217 	ldw	r20,200(sp)
 40074d0:	dcc03117 	ldw	r19,196(sp)
 40074d4:	dc803017 	ldw	r18,192(sp)
 40074d8:	dc402f17 	ldw	r17,188(sp)
 40074dc:	dc002e17 	ldw	r16,184(sp)
 40074e0:	dec03804 	addi	sp,sp,224
 40074e4:	f800283a 	ret
 40074e8:	d9002517 	ldw	r4,148(sp)
 40074ec:	24afc83a 	sub	r23,r4,r18
 40074f0:	05ff6e0e 	bge	zero,r23,40072ac <__alt_mem_onchip_memory2_0+0xfc0020ec>
 40074f4:	07000404 	movi	fp,16
 40074f8:	e5c15c0e 	bge	fp,r23,4007a6c <___svfiprintf_internal_r+0x12c8>
 40074fc:	01010074 	movhi	r4,1025
 4007500:	2138da04 	addi	r4,r4,-7320
 4007504:	dc002215 	stw	r16,136(sp)
 4007508:	dc402815 	stw	r17,160(sp)
 400750c:	d9002115 	stw	r4,132(sp)
 4007510:	b823883a 	mov	r17,r23
 4007514:	054001c4 	movi	r21,7
 4007518:	982f883a 	mov	r23,r19
 400751c:	dc002717 	ldw	r16,156(sp)
 4007520:	9027883a 	mov	r19,r18
 4007524:	dc802317 	ldw	r18,140(sp)
 4007528:	00000306 	br	4007538 <___svfiprintf_internal_r+0xd94>
 400752c:	8c7ffc04 	addi	r17,r17,-16
 4007530:	42000204 	addi	r8,r8,8
 4007534:	e440110e 	bge	fp,r17,400757c <___svfiprintf_internal_r+0xdd8>
 4007538:	18c00404 	addi	r3,r3,16
 400753c:	10800044 	addi	r2,r2,1
 4007540:	45800015 	stw	r22,0(r8)
 4007544:	47000115 	stw	fp,4(r8)
 4007548:	d8c01c15 	stw	r3,112(sp)
 400754c:	d8801b15 	stw	r2,108(sp)
 4007550:	a8bff60e 	bge	r21,r2,400752c <__alt_mem_onchip_memory2_0+0xfc00236c>
 4007554:	d9801a04 	addi	r6,sp,104
 4007558:	900b883a 	mov	r5,r18
 400755c:	8009883a 	mov	r4,r16
 4007560:	40065d40 	call	40065d4 <__ssprint_r>
 4007564:	103fcf1e 	bne	r2,zero,40074a4 <__alt_mem_onchip_memory2_0+0xfc0022e4>
 4007568:	8c7ffc04 	addi	r17,r17,-16
 400756c:	d8c01c17 	ldw	r3,112(sp)
 4007570:	d8801b17 	ldw	r2,108(sp)
 4007574:	d811883a 	mov	r8,sp
 4007578:	e47fef16 	blt	fp,r17,4007538 <__alt_mem_onchip_memory2_0+0xfc002378>
 400757c:	9825883a 	mov	r18,r19
 4007580:	dc002217 	ldw	r16,136(sp)
 4007584:	b827883a 	mov	r19,r23
 4007588:	882f883a 	mov	r23,r17
 400758c:	dc402817 	ldw	r17,160(sp)
 4007590:	d9402117 	ldw	r5,132(sp)
 4007594:	1dc7883a 	add	r3,r3,r23
 4007598:	10800044 	addi	r2,r2,1
 400759c:	41400015 	stw	r5,0(r8)
 40075a0:	45c00115 	stw	r23,4(r8)
 40075a4:	d8c01c15 	stw	r3,112(sp)
 40075a8:	d8801b15 	stw	r2,108(sp)
 40075ac:	010001c4 	movi	r4,7
 40075b0:	2080b716 	blt	r4,r2,4007890 <___svfiprintf_internal_r+0x10ec>
 40075b4:	42000204 	addi	r8,r8,8
 40075b8:	003f3c06 	br	40072ac <__alt_mem_onchip_memory2_0+0xfc0020ec>
 40075bc:	d9402317 	ldw	r5,140(sp)
 40075c0:	d9002717 	ldw	r4,156(sp)
 40075c4:	d9801a04 	addi	r6,sp,104
 40075c8:	40065d40 	call	40065d4 <__ssprint_r>
 40075cc:	103fb51e 	bne	r2,zero,40074a4 <__alt_mem_onchip_memory2_0+0xfc0022e4>
 40075d0:	d8c01c17 	ldw	r3,112(sp)
 40075d4:	d811883a 	mov	r8,sp
 40075d8:	003f7106 	br	40073a0 <__alt_mem_onchip_memory2_0+0xfc0021e0>
 40075dc:	d9402317 	ldw	r5,140(sp)
 40075e0:	d9002717 	ldw	r4,156(sp)
 40075e4:	d9801a04 	addi	r6,sp,104
 40075e8:	40065d40 	call	40065d4 <__ssprint_r>
 40075ec:	103fa126 	beq	r2,zero,4007474 <__alt_mem_onchip_memory2_0+0xfc0022b4>
 40075f0:	003fac06 	br	40074a4 <__alt_mem_onchip_memory2_0+0xfc0022e4>
 40075f4:	d9402317 	ldw	r5,140(sp)
 40075f8:	d9002717 	ldw	r4,156(sp)
 40075fc:	d9801a04 	addi	r6,sp,104
 4007600:	40065d40 	call	40065d4 <__ssprint_r>
 4007604:	103fa71e 	bne	r2,zero,40074a4 <__alt_mem_onchip_memory2_0+0xfc0022e4>
 4007608:	d811883a 	mov	r8,sp
 400760c:	003c9e06 	br	4006888 <__alt_mem_onchip_memory2_0+0xfc0016c8>
 4007610:	d9402317 	ldw	r5,140(sp)
 4007614:	d9002717 	ldw	r4,156(sp)
 4007618:	d9801a04 	addi	r6,sp,104
 400761c:	40065d40 	call	40065d4 <__ssprint_r>
 4007620:	103fa01e 	bne	r2,zero,40074a4 <__alt_mem_onchip_memory2_0+0xfc0022e4>
 4007624:	d8c01c17 	ldw	r3,112(sp)
 4007628:	d8801b17 	ldw	r2,108(sp)
 400762c:	d811883a 	mov	r8,sp
 4007630:	003f5206 	br	400737c <__alt_mem_onchip_memory2_0+0xfc0021bc>
 4007634:	d9402317 	ldw	r5,140(sp)
 4007638:	d9002717 	ldw	r4,156(sp)
 400763c:	d9801a04 	addi	r6,sp,104
 4007640:	40065d40 	call	40065d4 <__ssprint_r>
 4007644:	103f971e 	bne	r2,zero,40074a4 <__alt_mem_onchip_memory2_0+0xfc0022e4>
 4007648:	d8c01c17 	ldw	r3,112(sp)
 400764c:	d8801b17 	ldw	r2,108(sp)
 4007650:	d811883a 	mov	r8,sp
 4007654:	003f0506 	br	400726c <__alt_mem_onchip_memory2_0+0xfc0020ac>
 4007658:	d9402317 	ldw	r5,140(sp)
 400765c:	d9002717 	ldw	r4,156(sp)
 4007660:	d9801a04 	addi	r6,sp,104
 4007664:	40065d40 	call	40065d4 <__ssprint_r>
 4007668:	103f8e1e 	bne	r2,zero,40074a4 <__alt_mem_onchip_memory2_0+0xfc0022e4>
 400766c:	d8c01c17 	ldw	r3,112(sp)
 4007670:	d8801b17 	ldw	r2,108(sp)
 4007674:	d811883a 	mov	r8,sp
 4007678:	003f0906 	br	40072a0 <__alt_mem_onchip_memory2_0+0xfc0020e0>
 400767c:	d9402017 	ldw	r5,128(sp)
 4007680:	d8001d85 	stb	zero,118(sp)
 4007684:	28007716 	blt	r5,zero,4007864 <___svfiprintf_internal_r+0x10c0>
 4007688:	00ffdfc4 	movi	r3,-129
 400768c:	9504b03a 	or	r2,r18,r20
 4007690:	80e0703a 	and	r16,r16,r3
 4007694:	103d3926 	beq	r2,zero,4006b7c <__alt_mem_onchip_memory2_0+0xfc0019bc>
 4007698:	002b883a 	mov	r21,zero
 400769c:	003d3c06 	br	4006b90 <__alt_mem_onchip_memory2_0+0xfc0019d0>
 40076a0:	d9402317 	ldw	r5,140(sp)
 40076a4:	d9002717 	ldw	r4,156(sp)
 40076a8:	d9801a04 	addi	r6,sp,104
 40076ac:	40065d40 	call	40065d4 <__ssprint_r>
 40076b0:	103f7c1e 	bne	r2,zero,40074a4 <__alt_mem_onchip_memory2_0+0xfc0022e4>
 40076b4:	d8c01c17 	ldw	r3,112(sp)
 40076b8:	d8801b17 	ldw	r2,108(sp)
 40076bc:	d811883a 	mov	r8,sp
 40076c0:	003edd06 	br	4007238 <__alt_mem_onchip_memory2_0+0xfc002078>
 40076c4:	8080100c 	andi	r2,r16,64
 40076c8:	d8001d85 	stb	zero,118(sp)
 40076cc:	10008426 	beq	r2,zero,40078e0 <___svfiprintf_internal_r+0x113c>
 40076d0:	d9402417 	ldw	r5,144(sp)
 40076d4:	d8c02017 	ldw	r3,128(sp)
 40076d8:	0029883a 	mov	r20,zero
 40076dc:	28800104 	addi	r2,r5,4
 40076e0:	2c80000b 	ldhu	r18,0(r5)
 40076e4:	183eab0e 	bge	r3,zero,4007194 <__alt_mem_onchip_memory2_0+0xfc001fd4>
 40076e8:	d8802415 	stw	r2,144(sp)
 40076ec:	002b883a 	mov	r21,zero
 40076f0:	9504b03a 	or	r2,r18,r20
 40076f4:	103e171e 	bne	r2,zero,4006f54 <__alt_mem_onchip_memory2_0+0xfc001d94>
 40076f8:	00800044 	movi	r2,1
 40076fc:	10803fcc 	andi	r2,r2,255
 4007700:	00c00044 	movi	r3,1
 4007704:	10c05c26 	beq	r2,r3,4007878 <___svfiprintf_internal_r+0x10d4>
 4007708:	00c00084 	movi	r3,2
 400770c:	10fd1e26 	beq	r2,r3,4006b88 <__alt_mem_onchip_memory2_0+0xfc0019c8>
 4007710:	003ec406 	br	4007224 <__alt_mem_onchip_memory2_0+0xfc002064>
 4007714:	d9401e17 	ldw	r5,120(sp)
 4007718:	2c69c83a 	sub	r20,r5,r17
 400771c:	003d4506 	br	4006c34 <__alt_mem_onchip_memory2_0+0xfc001a74>
 4007720:	d8802415 	stw	r2,144(sp)
 4007724:	98c00007 	ldb	r3,0(r19)
 4007728:	003c6a06 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 400772c:	d9402317 	ldw	r5,140(sp)
 4007730:	d9002717 	ldw	r4,156(sp)
 4007734:	d9801a04 	addi	r6,sp,104
 4007738:	40065d40 	call	40065d4 <__ssprint_r>
 400773c:	103f591e 	bne	r2,zero,40074a4 <__alt_mem_onchip_memory2_0+0xfc0022e4>
 4007740:	d8c01c17 	ldw	r3,112(sp)
 4007744:	003f4406 	br	4007458 <__alt_mem_onchip_memory2_0+0xfc002298>
 4007748:	01410074 	movhi	r5,1025
 400774c:	29787904 	addi	r5,r5,-7708
 4007750:	d9402915 	stw	r5,164(sp)
 4007754:	003d0906 	br	4006b7c <__alt_mem_onchip_memory2_0+0xfc0019bc>
 4007758:	d8c02417 	ldw	r3,144(sp)
 400775c:	d9002617 	ldw	r4,152(sp)
 4007760:	d9402417 	ldw	r5,144(sp)
 4007764:	18800017 	ldw	r2,0(r3)
 4007768:	2007d7fa 	srai	r3,r4,31
 400776c:	29400104 	addi	r5,r5,4
 4007770:	d9402415 	stw	r5,144(sp)
 4007774:	11000015 	stw	r4,0(r2)
 4007778:	10c00115 	stw	r3,4(r2)
 400777c:	003c2b06 	br	400682c <__alt_mem_onchip_memory2_0+0xfc00166c>
 4007780:	d8c01d45 	stb	r3,117(sp)
 4007784:	d8c02017 	ldw	r3,128(sp)
 4007788:	00800c04 	movi	r2,48
 400778c:	d8801d05 	stb	r2,116(sp)
 4007790:	d8001d85 	stb	zero,118(sp)
 4007794:	80800094 	ori	r2,r16,2
 4007798:	1800ac16 	blt	r3,zero,4007a4c <___svfiprintf_internal_r+0x12a8>
 400779c:	00bfdfc4 	movi	r2,-129
 40077a0:	80a0703a 	and	r16,r16,r2
 40077a4:	84000094 	ori	r16,r16,2
 40077a8:	002b883a 	mov	r21,zero
 40077ac:	003cf806 	br	4006b90 <__alt_mem_onchip_memory2_0+0xfc0019d0>
 40077b0:	98c00007 	ldb	r3,0(r19)
 40077b4:	003c4706 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 40077b8:	d9402417 	ldw	r5,144(sp)
 40077bc:	2c800017 	ldw	r18,0(r5)
 40077c0:	29400104 	addi	r5,r5,4
 40077c4:	d9402415 	stw	r5,144(sp)
 40077c8:	9029d7fa 	srai	r20,r18,31
 40077cc:	a005883a 	mov	r2,r20
 40077d0:	003dd806 	br	4006f34 <__alt_mem_onchip_memory2_0+0xfc001d74>
 40077d4:	d9402417 	ldw	r5,144(sp)
 40077d8:	0029883a 	mov	r20,zero
 40077dc:	2c800017 	ldw	r18,0(r5)
 40077e0:	29400104 	addi	r5,r5,4
 40077e4:	d9402415 	stw	r5,144(sp)
 40077e8:	003cdb06 	br	4006b58 <__alt_mem_onchip_memory2_0+0xfc001998>
 40077ec:	8080100c 	andi	r2,r16,64
 40077f0:	d8001d85 	stb	zero,118(sp)
 40077f4:	10003326 	beq	r2,zero,40078c4 <___svfiprintf_internal_r+0x1120>
 40077f8:	d9002417 	ldw	r4,144(sp)
 40077fc:	d9402017 	ldw	r5,128(sp)
 4007800:	0029883a 	mov	r20,zero
 4007804:	20800104 	addi	r2,r4,4
 4007808:	2480000b 	ldhu	r18,0(r4)
 400780c:	283e7e0e 	bge	r5,zero,4007208 <__alt_mem_onchip_memory2_0+0xfc002048>
 4007810:	9506b03a 	or	r3,r18,r20
 4007814:	d8802415 	stw	r2,144(sp)
 4007818:	183d271e 	bne	r3,zero,4006cb8 <__alt_mem_onchip_memory2_0+0xfc001af8>
 400781c:	002b883a 	mov	r21,zero
 4007820:	0005883a 	mov	r2,zero
 4007824:	003fb506 	br	40076fc <__alt_mem_onchip_memory2_0+0xfc00253c>
 4007828:	98c00043 	ldbu	r3,1(r19)
 400782c:	8c400814 	ori	r17,r17,32
 4007830:	9cc00044 	addi	r19,r19,1
 4007834:	18c03fcc 	andi	r3,r3,255
 4007838:	18c0201c 	xori	r3,r3,128
 400783c:	18ffe004 	addi	r3,r3,-128
 4007840:	003c2406 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 4007844:	d8c02415 	stw	r3,144(sp)
 4007848:	002b883a 	mov	r21,zero
 400784c:	003fa806 	br	40076f0 <__alt_mem_onchip_memory2_0+0xfc002530>
 4007850:	01010074 	movhi	r4,1025
 4007854:	21387904 	addi	r4,r4,-7708
 4007858:	d9002915 	stw	r4,164(sp)
 400785c:	d8c02415 	stw	r3,144(sp)
 4007860:	1021883a 	mov	r16,r2
 4007864:	9504b03a 	or	r2,r18,r20
 4007868:	103f8b1e 	bne	r2,zero,4007698 <__alt_mem_onchip_memory2_0+0xfc0024d8>
 400786c:	002b883a 	mov	r21,zero
 4007870:	00800084 	movi	r2,2
 4007874:	003fa106 	br	40076fc <__alt_mem_onchip_memory2_0+0xfc00253c>
 4007878:	0025883a 	mov	r18,zero
 400787c:	94800c04 	addi	r18,r18,48
 4007880:	dc8019c5 	stb	r18,103(sp)
 4007884:	dd002c17 	ldw	r20,176(sp)
 4007888:	dc4019c4 	addi	r17,sp,103
 400788c:	003ce906 	br	4006c34 <__alt_mem_onchip_memory2_0+0xfc001a74>
 4007890:	d9402317 	ldw	r5,140(sp)
 4007894:	d9002717 	ldw	r4,156(sp)
 4007898:	d9801a04 	addi	r6,sp,104
 400789c:	40065d40 	call	40065d4 <__ssprint_r>
 40078a0:	103f001e 	bne	r2,zero,40074a4 <__alt_mem_onchip_memory2_0+0xfc0022e4>
 40078a4:	d8c01c17 	ldw	r3,112(sp)
 40078a8:	d8801b17 	ldw	r2,108(sp)
 40078ac:	d811883a 	mov	r8,sp
 40078b0:	003e7e06 	br	40072ac <__alt_mem_onchip_memory2_0+0xfc0020ec>
 40078b4:	01410074 	movhi	r5,1025
 40078b8:	2978da04 	addi	r5,r5,-7320
 40078bc:	d9402115 	stw	r5,132(sp)
 40078c0:	003ea406 	br	4007354 <__alt_mem_onchip_memory2_0+0xfc002194>
 40078c4:	d8c02417 	ldw	r3,144(sp)
 40078c8:	d9002017 	ldw	r4,128(sp)
 40078cc:	0029883a 	mov	r20,zero
 40078d0:	18800104 	addi	r2,r3,4
 40078d4:	1c800017 	ldw	r18,0(r3)
 40078d8:	203e4b0e 	bge	r4,zero,4007208 <__alt_mem_onchip_memory2_0+0xfc002048>
 40078dc:	003fcc06 	br	4007810 <__alt_mem_onchip_memory2_0+0xfc002650>
 40078e0:	d9002417 	ldw	r4,144(sp)
 40078e4:	d9402017 	ldw	r5,128(sp)
 40078e8:	0029883a 	mov	r20,zero
 40078ec:	20800104 	addi	r2,r4,4
 40078f0:	24800017 	ldw	r18,0(r4)
 40078f4:	283e270e 	bge	r5,zero,4007194 <__alt_mem_onchip_memory2_0+0xfc001fd4>
 40078f8:	003f7b06 	br	40076e8 <__alt_mem_onchip_memory2_0+0xfc002528>
 40078fc:	8400100c 	andi	r16,r16,64
 4007900:	80003326 	beq	r16,zero,40079d0 <___svfiprintf_internal_r+0x122c>
 4007904:	d9402417 	ldw	r5,144(sp)
 4007908:	d8c02617 	ldw	r3,152(sp)
 400790c:	28800017 	ldw	r2,0(r5)
 4007910:	29400104 	addi	r5,r5,4
 4007914:	d9402415 	stw	r5,144(sp)
 4007918:	10c0000d 	sth	r3,0(r2)
 400791c:	003bc306 	br	400682c <__alt_mem_onchip_memory2_0+0xfc00166c>
 4007920:	d9002417 	ldw	r4,144(sp)
 4007924:	0029883a 	mov	r20,zero
 4007928:	24800017 	ldw	r18,0(r4)
 400792c:	21000104 	addi	r4,r4,4
 4007930:	d9002415 	stw	r4,144(sp)
 4007934:	003c8806 	br	4006b58 <__alt_mem_onchip_memory2_0+0xfc001998>
 4007938:	d8c02417 	ldw	r3,144(sp)
 400793c:	1c800017 	ldw	r18,0(r3)
 4007940:	18c00104 	addi	r3,r3,4
 4007944:	d8c02415 	stw	r3,144(sp)
 4007948:	9029d7fa 	srai	r20,r18,31
 400794c:	a005883a 	mov	r2,r20
 4007950:	003d7806 	br	4006f34 <__alt_mem_onchip_memory2_0+0xfc001d74>
 4007954:	8809883a 	mov	r4,r17
 4007958:	da002d15 	stw	r8,180(sp)
 400795c:	4000c600 	call	4000c60 <strlen>
 4007960:	1029883a 	mov	r20,r2
 4007964:	dd401d83 	ldbu	r21,118(sp)
 4007968:	ddc02415 	stw	r23,144(sp)
 400796c:	d8002015 	stw	zero,128(sp)
 4007970:	da002d17 	ldw	r8,180(sp)
 4007974:	003caf06 	br	4006c34 <__alt_mem_onchip_memory2_0+0xfc001a74>
 4007978:	013fffc4 	movi	r4,-1
 400797c:	003df206 	br	4007148 <__alt_mem_onchip_memory2_0+0xfc001f88>
 4007980:	dd002017 	ldw	r20,128(sp)
 4007984:	00800184 	movi	r2,6
 4007988:	1500012e 	bgeu	r2,r20,4007990 <___svfiprintf_internal_r+0x11ec>
 400798c:	1029883a 	mov	r20,r2
 4007990:	a025883a 	mov	r18,r20
 4007994:	a0004116 	blt	r20,zero,4007a9c <___svfiprintf_internal_r+0x12f8>
 4007998:	04410074 	movhi	r17,1025
 400799c:	ddc02415 	stw	r23,144(sp)
 40079a0:	8c787e04 	addi	r17,r17,-7688
 40079a4:	003ce806 	br	4006d48 <__alt_mem_onchip_memory2_0+0xfc001b88>
 40079a8:	04001004 	movi	r16,64
 40079ac:	800b883a 	mov	r5,r16
 40079b0:	40049400 	call	4004940 <_malloc_r>
 40079b4:	d8c02317 	ldw	r3,140(sp)
 40079b8:	18800015 	stw	r2,0(r3)
 40079bc:	18800415 	stw	r2,16(r3)
 40079c0:	10004d26 	beq	r2,zero,4007af8 <___svfiprintf_internal_r+0x1354>
 40079c4:	d9402317 	ldw	r5,140(sp)
 40079c8:	2c000515 	stw	r16,20(r5)
 40079cc:	003b8906 	br	40067f4 <__alt_mem_onchip_memory2_0+0xfc001634>
 40079d0:	d9002417 	ldw	r4,144(sp)
 40079d4:	d9402617 	ldw	r5,152(sp)
 40079d8:	20800017 	ldw	r2,0(r4)
 40079dc:	21000104 	addi	r4,r4,4
 40079e0:	d9002415 	stw	r4,144(sp)
 40079e4:	11400015 	stw	r5,0(r2)
 40079e8:	003b9006 	br	400682c <__alt_mem_onchip_memory2_0+0xfc00166c>
 40079ec:	8080004c 	andi	r2,r16,1
 40079f0:	002b883a 	mov	r21,zero
 40079f4:	10000526 	beq	r2,zero,4007a0c <___svfiprintf_internal_r+0x1268>
 40079f8:	00800c04 	movi	r2,48
 40079fc:	d88019c5 	stb	r2,103(sp)
 4007a00:	dd002c17 	ldw	r20,176(sp)
 4007a04:	dc4019c4 	addi	r17,sp,103
 4007a08:	003c8a06 	br	4006c34 <__alt_mem_onchip_memory2_0+0xfc001a74>
 4007a0c:	0029883a 	mov	r20,zero
 4007a10:	dc401a04 	addi	r17,sp,104
 4007a14:	003c8706 	br	4006c34 <__alt_mem_onchip_memory2_0+0xfc001a74>
 4007a18:	01410074 	movhi	r5,1025
 4007a1c:	2978de04 	addi	r5,r5,-7304
 4007a20:	d9402815 	stw	r5,160(sp)
 4007a24:	003cff06 	br	4006e24 <__alt_mem_onchip_memory2_0+0xfc001c64>
 4007a28:	00bfffc4 	movi	r2,-1
 4007a2c:	003ea206 	br	40074b8 <__alt_mem_onchip_memory2_0+0xfc0022f8>
 4007a30:	00800044 	movi	r2,1
 4007a34:	10803fcc 	andi	r2,r2,255
 4007a38:	00c00044 	movi	r3,1
 4007a3c:	10fd4526 	beq	r2,r3,4006f54 <__alt_mem_onchip_memory2_0+0xfc001d94>
 4007a40:	00c00084 	movi	r3,2
 4007a44:	10fc5226 	beq	r2,r3,4006b90 <__alt_mem_onchip_memory2_0+0xfc0019d0>
 4007a48:	003c9c06 	br	4006cbc <__alt_mem_onchip_memory2_0+0xfc001afc>
 4007a4c:	1021883a 	mov	r16,r2
 4007a50:	002b883a 	mov	r21,zero
 4007a54:	00800084 	movi	r2,2
 4007a58:	003ff606 	br	4007a34 <__alt_mem_onchip_memory2_0+0xfc002874>
 4007a5c:	01010074 	movhi	r4,1025
 4007a60:	2138de04 	addi	r4,r4,-7304
 4007a64:	d9002815 	stw	r4,160(sp)
 4007a68:	003e7206 	br	4007434 <__alt_mem_onchip_memory2_0+0xfc002274>
 4007a6c:	01410074 	movhi	r5,1025
 4007a70:	2978da04 	addi	r5,r5,-7320
 4007a74:	d9402115 	stw	r5,132(sp)
 4007a78:	003ec506 	br	4007590 <__alt_mem_onchip_memory2_0+0xfc0023d0>
 4007a7c:	e027883a 	mov	r19,fp
 4007a80:	d8002015 	stw	zero,128(sp)
 4007a84:	003b9406 	br	40068d8 <__alt_mem_onchip_memory2_0+0xfc001718>
 4007a88:	dd002017 	ldw	r20,128(sp)
 4007a8c:	dd401d83 	ldbu	r21,118(sp)
 4007a90:	ddc02415 	stw	r23,144(sp)
 4007a94:	d8002015 	stw	zero,128(sp)
 4007a98:	003c6606 	br	4006c34 <__alt_mem_onchip_memory2_0+0xfc001a74>
 4007a9c:	0025883a 	mov	r18,zero
 4007aa0:	003fbd06 	br	4007998 <__alt_mem_onchip_memory2_0+0xfc0027d8>
 4007aa4:	d9402417 	ldw	r5,144(sp)
 4007aa8:	d8c02417 	ldw	r3,144(sp)
 4007aac:	29400017 	ldw	r5,0(r5)
 4007ab0:	19000104 	addi	r4,r3,4
 4007ab4:	d9002415 	stw	r4,144(sp)
 4007ab8:	d9402015 	stw	r5,128(sp)
 4007abc:	98c00043 	ldbu	r3,1(r19)
 4007ac0:	e027883a 	mov	r19,fp
 4007ac4:	283f5b0e 	bge	r5,zero,4007834 <__alt_mem_onchip_memory2_0+0xfc002674>
 4007ac8:	18c03fcc 	andi	r3,r3,255
 4007acc:	013fffc4 	movi	r4,-1
 4007ad0:	18c0201c 	xori	r3,r3,128
 4007ad4:	d9002015 	stw	r4,128(sp)
 4007ad8:	18ffe004 	addi	r3,r3,-128
 4007adc:	003b7d06 	br	40068d4 <__alt_mem_onchip_memory2_0+0xfc001714>
 4007ae0:	dd401d85 	stb	r21,118(sp)
 4007ae4:	003cf306 	br	4006eb4 <__alt_mem_onchip_memory2_0+0xfc001cf4>
 4007ae8:	dd401d85 	stb	r21,118(sp)
 4007aec:	003d4e06 	br	4007028 <__alt_mem_onchip_memory2_0+0xfc001e68>
 4007af0:	dd401d85 	stb	r21,118(sp)
 4007af4:	003c0e06 	br	4006b30 <__alt_mem_onchip_memory2_0+0xfc001970>
 4007af8:	d9002717 	ldw	r4,156(sp)
 4007afc:	00800304 	movi	r2,12
 4007b00:	20800015 	stw	r2,0(r4)
 4007b04:	00bfffc4 	movi	r2,-1
 4007b08:	003e6b06 	br	40074b8 <__alt_mem_onchip_memory2_0+0xfc0022f8>
 4007b0c:	dd401d85 	stb	r21,118(sp)
 4007b10:	003d0006 	br	4006f14 <__alt_mem_onchip_memory2_0+0xfc001d54>
 4007b14:	dd401d85 	stb	r21,118(sp)
 4007b18:	003d7106 	br	40070e0 <__alt_mem_onchip_memory2_0+0xfc001f20>
 4007b1c:	dd401d85 	stb	r21,118(sp)
 4007b20:	003c5706 	br	4006c80 <__alt_mem_onchip_memory2_0+0xfc001ac0>
 4007b24:	dd401d85 	stb	r21,118(sp)
 4007b28:	003c2e06 	br	4006be4 <__alt_mem_onchip_memory2_0+0xfc001a24>
 4007b2c:	dd401d85 	stb	r21,118(sp)
 4007b30:	003d8c06 	br	4007164 <__alt_mem_onchip_memory2_0+0xfc001fa4>
 4007b34:	dd401d85 	stb	r21,118(sp)
 4007b38:	003da706 	br	40071d8 <__alt_mem_onchip_memory2_0+0xfc002018>
 4007b3c:	dd401d85 	stb	r21,118(sp)
 4007b40:	003cc806 	br	4006e64 <__alt_mem_onchip_memory2_0+0xfc001ca4>

04007b44 <_calloc_r>:
 4007b44:	defffe04 	addi	sp,sp,-8
 4007b48:	2805883a 	mov	r2,r5
 4007b4c:	dc000015 	stw	r16,0(sp)
 4007b50:	300b883a 	mov	r5,r6
 4007b54:	2021883a 	mov	r16,r4
 4007b58:	1009883a 	mov	r4,r2
 4007b5c:	dfc00115 	stw	ra,4(sp)
 4007b60:	4000af80 	call	4000af8 <__mulsi3>
 4007b64:	100b883a 	mov	r5,r2
 4007b68:	8009883a 	mov	r4,r16
 4007b6c:	40049400 	call	4004940 <_malloc_r>
 4007b70:	10002926 	beq	r2,zero,4007c18 <_calloc_r+0xd4>
 4007b74:	11bfff17 	ldw	r6,-4(r2)
 4007b78:	1021883a 	mov	r16,r2
 4007b7c:	00bfff04 	movi	r2,-4
 4007b80:	308c703a 	and	r6,r6,r2
 4007b84:	00c00904 	movi	r3,36
 4007b88:	308d883a 	add	r6,r6,r2
 4007b8c:	19801636 	bltu	r3,r6,4007be8 <_calloc_r+0xa4>
 4007b90:	008004c4 	movi	r2,19
 4007b94:	11800b2e 	bgeu	r2,r6,4007bc4 <_calloc_r+0x80>
 4007b98:	80000015 	stw	zero,0(r16)
 4007b9c:	80000115 	stw	zero,4(r16)
 4007ba0:	008006c4 	movi	r2,27
 4007ba4:	11801a2e 	bgeu	r2,r6,4007c10 <_calloc_r+0xcc>
 4007ba8:	80000215 	stw	zero,8(r16)
 4007bac:	80000315 	stw	zero,12(r16)
 4007bb0:	30c0151e 	bne	r6,r3,4007c08 <_calloc_r+0xc4>
 4007bb4:	80000415 	stw	zero,16(r16)
 4007bb8:	80800604 	addi	r2,r16,24
 4007bbc:	80000515 	stw	zero,20(r16)
 4007bc0:	00000106 	br	4007bc8 <_calloc_r+0x84>
 4007bc4:	8005883a 	mov	r2,r16
 4007bc8:	10000015 	stw	zero,0(r2)
 4007bcc:	10000115 	stw	zero,4(r2)
 4007bd0:	10000215 	stw	zero,8(r2)
 4007bd4:	8005883a 	mov	r2,r16
 4007bd8:	dfc00117 	ldw	ra,4(sp)
 4007bdc:	dc000017 	ldw	r16,0(sp)
 4007be0:	dec00204 	addi	sp,sp,8
 4007be4:	f800283a 	ret
 4007be8:	000b883a 	mov	r5,zero
 4007bec:	8009883a 	mov	r4,r16
 4007bf0:	40081b00 	call	40081b0 <memset>
 4007bf4:	8005883a 	mov	r2,r16
 4007bf8:	dfc00117 	ldw	ra,4(sp)
 4007bfc:	dc000017 	ldw	r16,0(sp)
 4007c00:	dec00204 	addi	sp,sp,8
 4007c04:	f800283a 	ret
 4007c08:	80800404 	addi	r2,r16,16
 4007c0c:	003fee06 	br	4007bc8 <__alt_mem_onchip_memory2_0+0xfc002a08>
 4007c10:	80800204 	addi	r2,r16,8
 4007c14:	003fec06 	br	4007bc8 <__alt_mem_onchip_memory2_0+0xfc002a08>
 4007c18:	0005883a 	mov	r2,zero
 4007c1c:	003fee06 	br	4007bd8 <__alt_mem_onchip_memory2_0+0xfc002a18>

04007c20 <_malloc_trim_r>:
 4007c20:	defffb04 	addi	sp,sp,-20
 4007c24:	dcc00315 	stw	r19,12(sp)
 4007c28:	04c10074 	movhi	r19,1025
 4007c2c:	dc800215 	stw	r18,8(sp)
 4007c30:	dc400115 	stw	r17,4(sp)
 4007c34:	dc000015 	stw	r16,0(sp)
 4007c38:	dfc00415 	stw	ra,16(sp)
 4007c3c:	2821883a 	mov	r16,r5
 4007c40:	9cfb0e04 	addi	r19,r19,-5064
 4007c44:	2025883a 	mov	r18,r4
 4007c48:	400bf140 	call	400bf14 <__malloc_lock>
 4007c4c:	98800217 	ldw	r2,8(r19)
 4007c50:	14400117 	ldw	r17,4(r2)
 4007c54:	00bfff04 	movi	r2,-4
 4007c58:	88a2703a 	and	r17,r17,r2
 4007c5c:	8c21c83a 	sub	r16,r17,r16
 4007c60:	8403fbc4 	addi	r16,r16,4079
 4007c64:	8020d33a 	srli	r16,r16,12
 4007c68:	0083ffc4 	movi	r2,4095
 4007c6c:	843fffc4 	addi	r16,r16,-1
 4007c70:	8020933a 	slli	r16,r16,12
 4007c74:	1400060e 	bge	r2,r16,4007c90 <_malloc_trim_r+0x70>
 4007c78:	000b883a 	mov	r5,zero
 4007c7c:	9009883a 	mov	r4,r18
 4007c80:	40064a40 	call	40064a4 <_sbrk_r>
 4007c84:	98c00217 	ldw	r3,8(r19)
 4007c88:	1c47883a 	add	r3,r3,r17
 4007c8c:	10c00a26 	beq	r2,r3,4007cb8 <_malloc_trim_r+0x98>
 4007c90:	9009883a 	mov	r4,r18
 4007c94:	400bf380 	call	400bf38 <__malloc_unlock>
 4007c98:	0005883a 	mov	r2,zero
 4007c9c:	dfc00417 	ldw	ra,16(sp)
 4007ca0:	dcc00317 	ldw	r19,12(sp)
 4007ca4:	dc800217 	ldw	r18,8(sp)
 4007ca8:	dc400117 	ldw	r17,4(sp)
 4007cac:	dc000017 	ldw	r16,0(sp)
 4007cb0:	dec00504 	addi	sp,sp,20
 4007cb4:	f800283a 	ret
 4007cb8:	040bc83a 	sub	r5,zero,r16
 4007cbc:	9009883a 	mov	r4,r18
 4007cc0:	40064a40 	call	40064a4 <_sbrk_r>
 4007cc4:	00ffffc4 	movi	r3,-1
 4007cc8:	10c00d26 	beq	r2,r3,4007d00 <_malloc_trim_r+0xe0>
 4007ccc:	00c10074 	movhi	r3,1025
 4007cd0:	18c82504 	addi	r3,r3,8340
 4007cd4:	18800017 	ldw	r2,0(r3)
 4007cd8:	99000217 	ldw	r4,8(r19)
 4007cdc:	8c23c83a 	sub	r17,r17,r16
 4007ce0:	8c400054 	ori	r17,r17,1
 4007ce4:	1421c83a 	sub	r16,r2,r16
 4007ce8:	24400115 	stw	r17,4(r4)
 4007cec:	9009883a 	mov	r4,r18
 4007cf0:	1c000015 	stw	r16,0(r3)
 4007cf4:	400bf380 	call	400bf38 <__malloc_unlock>
 4007cf8:	00800044 	movi	r2,1
 4007cfc:	003fe706 	br	4007c9c <__alt_mem_onchip_memory2_0+0xfc002adc>
 4007d00:	000b883a 	mov	r5,zero
 4007d04:	9009883a 	mov	r4,r18
 4007d08:	40064a40 	call	40064a4 <_sbrk_r>
 4007d0c:	99000217 	ldw	r4,8(r19)
 4007d10:	014003c4 	movi	r5,15
 4007d14:	1107c83a 	sub	r3,r2,r4
 4007d18:	28ffdd0e 	bge	r5,r3,4007c90 <__alt_mem_onchip_memory2_0+0xfc002ad0>
 4007d1c:	01410074 	movhi	r5,1025
 4007d20:	29409704 	addi	r5,r5,604
 4007d24:	29400017 	ldw	r5,0(r5)
 4007d28:	18c00054 	ori	r3,r3,1
 4007d2c:	20c00115 	stw	r3,4(r4)
 4007d30:	00c10074 	movhi	r3,1025
 4007d34:	1145c83a 	sub	r2,r2,r5
 4007d38:	18c82504 	addi	r3,r3,8340
 4007d3c:	18800015 	stw	r2,0(r3)
 4007d40:	003fd306 	br	4007c90 <__alt_mem_onchip_memory2_0+0xfc002ad0>

04007d44 <_free_r>:
 4007d44:	28004126 	beq	r5,zero,4007e4c <_free_r+0x108>
 4007d48:	defffd04 	addi	sp,sp,-12
 4007d4c:	dc400115 	stw	r17,4(sp)
 4007d50:	dc000015 	stw	r16,0(sp)
 4007d54:	2023883a 	mov	r17,r4
 4007d58:	2821883a 	mov	r16,r5
 4007d5c:	dfc00215 	stw	ra,8(sp)
 4007d60:	400bf140 	call	400bf14 <__malloc_lock>
 4007d64:	81ffff17 	ldw	r7,-4(r16)
 4007d68:	00bfff84 	movi	r2,-2
 4007d6c:	01010074 	movhi	r4,1025
 4007d70:	81bffe04 	addi	r6,r16,-8
 4007d74:	3884703a 	and	r2,r7,r2
 4007d78:	213b0e04 	addi	r4,r4,-5064
 4007d7c:	308b883a 	add	r5,r6,r2
 4007d80:	2a400117 	ldw	r9,4(r5)
 4007d84:	22000217 	ldw	r8,8(r4)
 4007d88:	00ffff04 	movi	r3,-4
 4007d8c:	48c6703a 	and	r3,r9,r3
 4007d90:	2a005726 	beq	r5,r8,4007ef0 <_free_r+0x1ac>
 4007d94:	28c00115 	stw	r3,4(r5)
 4007d98:	39c0004c 	andi	r7,r7,1
 4007d9c:	3800091e 	bne	r7,zero,4007dc4 <_free_r+0x80>
 4007da0:	823ffe17 	ldw	r8,-8(r16)
 4007da4:	22400204 	addi	r9,r4,8
 4007da8:	320dc83a 	sub	r6,r6,r8
 4007dac:	31c00217 	ldw	r7,8(r6)
 4007db0:	1205883a 	add	r2,r2,r8
 4007db4:	3a406526 	beq	r7,r9,4007f4c <_free_r+0x208>
 4007db8:	32000317 	ldw	r8,12(r6)
 4007dbc:	3a000315 	stw	r8,12(r7)
 4007dc0:	41c00215 	stw	r7,8(r8)
 4007dc4:	28cf883a 	add	r7,r5,r3
 4007dc8:	39c00117 	ldw	r7,4(r7)
 4007dcc:	39c0004c 	andi	r7,r7,1
 4007dd0:	38003a26 	beq	r7,zero,4007ebc <_free_r+0x178>
 4007dd4:	10c00054 	ori	r3,r2,1
 4007dd8:	30c00115 	stw	r3,4(r6)
 4007ddc:	3087883a 	add	r3,r6,r2
 4007de0:	18800015 	stw	r2,0(r3)
 4007de4:	00c07fc4 	movi	r3,511
 4007de8:	18801936 	bltu	r3,r2,4007e50 <_free_r+0x10c>
 4007dec:	1004d0fa 	srli	r2,r2,3
 4007df0:	01c00044 	movi	r7,1
 4007df4:	21400117 	ldw	r5,4(r4)
 4007df8:	10c00044 	addi	r3,r2,1
 4007dfc:	18c7883a 	add	r3,r3,r3
 4007e00:	1005d0ba 	srai	r2,r2,2
 4007e04:	18c7883a 	add	r3,r3,r3
 4007e08:	18c7883a 	add	r3,r3,r3
 4007e0c:	1907883a 	add	r3,r3,r4
 4007e10:	3884983a 	sll	r2,r7,r2
 4007e14:	19c00017 	ldw	r7,0(r3)
 4007e18:	1a3ffe04 	addi	r8,r3,-8
 4007e1c:	1144b03a 	or	r2,r2,r5
 4007e20:	32000315 	stw	r8,12(r6)
 4007e24:	31c00215 	stw	r7,8(r6)
 4007e28:	20800115 	stw	r2,4(r4)
 4007e2c:	19800015 	stw	r6,0(r3)
 4007e30:	39800315 	stw	r6,12(r7)
 4007e34:	8809883a 	mov	r4,r17
 4007e38:	dfc00217 	ldw	ra,8(sp)
 4007e3c:	dc400117 	ldw	r17,4(sp)
 4007e40:	dc000017 	ldw	r16,0(sp)
 4007e44:	dec00304 	addi	sp,sp,12
 4007e48:	400bf381 	jmpi	400bf38 <__malloc_unlock>
 4007e4c:	f800283a 	ret
 4007e50:	100ad27a 	srli	r5,r2,9
 4007e54:	00c00104 	movi	r3,4
 4007e58:	19404a36 	bltu	r3,r5,4007f84 <_free_r+0x240>
 4007e5c:	100ad1ba 	srli	r5,r2,6
 4007e60:	28c00e44 	addi	r3,r5,57
 4007e64:	18c7883a 	add	r3,r3,r3
 4007e68:	29400e04 	addi	r5,r5,56
 4007e6c:	18c7883a 	add	r3,r3,r3
 4007e70:	18c7883a 	add	r3,r3,r3
 4007e74:	1909883a 	add	r4,r3,r4
 4007e78:	20c00017 	ldw	r3,0(r4)
 4007e7c:	01c10074 	movhi	r7,1025
 4007e80:	213ffe04 	addi	r4,r4,-8
 4007e84:	39fb0e04 	addi	r7,r7,-5064
 4007e88:	20c04426 	beq	r4,r3,4007f9c <_free_r+0x258>
 4007e8c:	01ffff04 	movi	r7,-4
 4007e90:	19400117 	ldw	r5,4(r3)
 4007e94:	29ca703a 	and	r5,r5,r7
 4007e98:	1140022e 	bgeu	r2,r5,4007ea4 <_free_r+0x160>
 4007e9c:	18c00217 	ldw	r3,8(r3)
 4007ea0:	20fffb1e 	bne	r4,r3,4007e90 <__alt_mem_onchip_memory2_0+0xfc002cd0>
 4007ea4:	19000317 	ldw	r4,12(r3)
 4007ea8:	31000315 	stw	r4,12(r6)
 4007eac:	30c00215 	stw	r3,8(r6)
 4007eb0:	21800215 	stw	r6,8(r4)
 4007eb4:	19800315 	stw	r6,12(r3)
 4007eb8:	003fde06 	br	4007e34 <__alt_mem_onchip_memory2_0+0xfc002c74>
 4007ebc:	29c00217 	ldw	r7,8(r5)
 4007ec0:	10c5883a 	add	r2,r2,r3
 4007ec4:	00c10074 	movhi	r3,1025
 4007ec8:	18fb1004 	addi	r3,r3,-5056
 4007ecc:	38c03b26 	beq	r7,r3,4007fbc <_free_r+0x278>
 4007ed0:	2a000317 	ldw	r8,12(r5)
 4007ed4:	11400054 	ori	r5,r2,1
 4007ed8:	3087883a 	add	r3,r6,r2
 4007edc:	3a000315 	stw	r8,12(r7)
 4007ee0:	41c00215 	stw	r7,8(r8)
 4007ee4:	31400115 	stw	r5,4(r6)
 4007ee8:	18800015 	stw	r2,0(r3)
 4007eec:	003fbd06 	br	4007de4 <__alt_mem_onchip_memory2_0+0xfc002c24>
 4007ef0:	39c0004c 	andi	r7,r7,1
 4007ef4:	10c5883a 	add	r2,r2,r3
 4007ef8:	3800071e 	bne	r7,zero,4007f18 <_free_r+0x1d4>
 4007efc:	81fffe17 	ldw	r7,-8(r16)
 4007f00:	31cdc83a 	sub	r6,r6,r7
 4007f04:	30c00317 	ldw	r3,12(r6)
 4007f08:	31400217 	ldw	r5,8(r6)
 4007f0c:	11c5883a 	add	r2,r2,r7
 4007f10:	28c00315 	stw	r3,12(r5)
 4007f14:	19400215 	stw	r5,8(r3)
 4007f18:	10c00054 	ori	r3,r2,1
 4007f1c:	30c00115 	stw	r3,4(r6)
 4007f20:	00c10074 	movhi	r3,1025
 4007f24:	18c09804 	addi	r3,r3,608
 4007f28:	18c00017 	ldw	r3,0(r3)
 4007f2c:	21800215 	stw	r6,8(r4)
 4007f30:	10ffc036 	bltu	r2,r3,4007e34 <__alt_mem_onchip_memory2_0+0xfc002c74>
 4007f34:	00810074 	movhi	r2,1025
 4007f38:	10881c04 	addi	r2,r2,8304
 4007f3c:	11400017 	ldw	r5,0(r2)
 4007f40:	8809883a 	mov	r4,r17
 4007f44:	4007c200 	call	4007c20 <_malloc_trim_r>
 4007f48:	003fba06 	br	4007e34 <__alt_mem_onchip_memory2_0+0xfc002c74>
 4007f4c:	28c9883a 	add	r4,r5,r3
 4007f50:	21000117 	ldw	r4,4(r4)
 4007f54:	2100004c 	andi	r4,r4,1
 4007f58:	2000391e 	bne	r4,zero,4008040 <_free_r+0x2fc>
 4007f5c:	29c00217 	ldw	r7,8(r5)
 4007f60:	29000317 	ldw	r4,12(r5)
 4007f64:	1885883a 	add	r2,r3,r2
 4007f68:	10c00054 	ori	r3,r2,1
 4007f6c:	39000315 	stw	r4,12(r7)
 4007f70:	21c00215 	stw	r7,8(r4)
 4007f74:	30c00115 	stw	r3,4(r6)
 4007f78:	308d883a 	add	r6,r6,r2
 4007f7c:	30800015 	stw	r2,0(r6)
 4007f80:	003fac06 	br	4007e34 <__alt_mem_onchip_memory2_0+0xfc002c74>
 4007f84:	00c00504 	movi	r3,20
 4007f88:	19401536 	bltu	r3,r5,4007fe0 <_free_r+0x29c>
 4007f8c:	28c01704 	addi	r3,r5,92
 4007f90:	18c7883a 	add	r3,r3,r3
 4007f94:	294016c4 	addi	r5,r5,91
 4007f98:	003fb406 	br	4007e6c <__alt_mem_onchip_memory2_0+0xfc002cac>
 4007f9c:	280bd0ba 	srai	r5,r5,2
 4007fa0:	00c00044 	movi	r3,1
 4007fa4:	38800117 	ldw	r2,4(r7)
 4007fa8:	194a983a 	sll	r5,r3,r5
 4007fac:	2007883a 	mov	r3,r4
 4007fb0:	2884b03a 	or	r2,r5,r2
 4007fb4:	38800115 	stw	r2,4(r7)
 4007fb8:	003fbb06 	br	4007ea8 <__alt_mem_onchip_memory2_0+0xfc002ce8>
 4007fbc:	21800515 	stw	r6,20(r4)
 4007fc0:	21800415 	stw	r6,16(r4)
 4007fc4:	10c00054 	ori	r3,r2,1
 4007fc8:	31c00315 	stw	r7,12(r6)
 4007fcc:	31c00215 	stw	r7,8(r6)
 4007fd0:	30c00115 	stw	r3,4(r6)
 4007fd4:	308d883a 	add	r6,r6,r2
 4007fd8:	30800015 	stw	r2,0(r6)
 4007fdc:	003f9506 	br	4007e34 <__alt_mem_onchip_memory2_0+0xfc002c74>
 4007fe0:	00c01504 	movi	r3,84
 4007fe4:	19400536 	bltu	r3,r5,4007ffc <_free_r+0x2b8>
 4007fe8:	100ad33a 	srli	r5,r2,12
 4007fec:	28c01bc4 	addi	r3,r5,111
 4007ff0:	18c7883a 	add	r3,r3,r3
 4007ff4:	29401b84 	addi	r5,r5,110
 4007ff8:	003f9c06 	br	4007e6c <__alt_mem_onchip_memory2_0+0xfc002cac>
 4007ffc:	00c05504 	movi	r3,340
 4008000:	19400536 	bltu	r3,r5,4008018 <_free_r+0x2d4>
 4008004:	100ad3fa 	srli	r5,r2,15
 4008008:	28c01e04 	addi	r3,r5,120
 400800c:	18c7883a 	add	r3,r3,r3
 4008010:	29401dc4 	addi	r5,r5,119
 4008014:	003f9506 	br	4007e6c <__alt_mem_onchip_memory2_0+0xfc002cac>
 4008018:	00c15504 	movi	r3,1364
 400801c:	19400536 	bltu	r3,r5,4008034 <_free_r+0x2f0>
 4008020:	100ad4ba 	srli	r5,r2,18
 4008024:	28c01f44 	addi	r3,r5,125
 4008028:	18c7883a 	add	r3,r3,r3
 400802c:	29401f04 	addi	r5,r5,124
 4008030:	003f8e06 	br	4007e6c <__alt_mem_onchip_memory2_0+0xfc002cac>
 4008034:	00c03f84 	movi	r3,254
 4008038:	01401f84 	movi	r5,126
 400803c:	003f8b06 	br	4007e6c <__alt_mem_onchip_memory2_0+0xfc002cac>
 4008040:	10c00054 	ori	r3,r2,1
 4008044:	30c00115 	stw	r3,4(r6)
 4008048:	308d883a 	add	r6,r6,r2
 400804c:	30800015 	stw	r2,0(r6)
 4008050:	003f7806 	br	4007e34 <__alt_mem_onchip_memory2_0+0xfc002c74>

04008054 <memmove>:
 4008054:	2005883a 	mov	r2,r4
 4008058:	29000b2e 	bgeu	r5,r4,4008088 <memmove+0x34>
 400805c:	298f883a 	add	r7,r5,r6
 4008060:	21c0092e 	bgeu	r4,r7,4008088 <memmove+0x34>
 4008064:	2187883a 	add	r3,r4,r6
 4008068:	198bc83a 	sub	r5,r3,r6
 400806c:	30004826 	beq	r6,zero,4008190 <memmove+0x13c>
 4008070:	39ffffc4 	addi	r7,r7,-1
 4008074:	39000003 	ldbu	r4,0(r7)
 4008078:	18ffffc4 	addi	r3,r3,-1
 400807c:	19000005 	stb	r4,0(r3)
 4008080:	28fffb1e 	bne	r5,r3,4008070 <__alt_mem_onchip_memory2_0+0xfc002eb0>
 4008084:	f800283a 	ret
 4008088:	00c003c4 	movi	r3,15
 400808c:	1980412e 	bgeu	r3,r6,4008194 <memmove+0x140>
 4008090:	2886b03a 	or	r3,r5,r2
 4008094:	18c000cc 	andi	r3,r3,3
 4008098:	1800401e 	bne	r3,zero,400819c <memmove+0x148>
 400809c:	33fffc04 	addi	r15,r6,-16
 40080a0:	781ed13a 	srli	r15,r15,4
 40080a4:	28c00104 	addi	r3,r5,4
 40080a8:	13400104 	addi	r13,r2,4
 40080ac:	781c913a 	slli	r14,r15,4
 40080b0:	2b000204 	addi	r12,r5,8
 40080b4:	12c00204 	addi	r11,r2,8
 40080b8:	73800504 	addi	r14,r14,20
 40080bc:	2a800304 	addi	r10,r5,12
 40080c0:	12400304 	addi	r9,r2,12
 40080c4:	2b9d883a 	add	r14,r5,r14
 40080c8:	2811883a 	mov	r8,r5
 40080cc:	100f883a 	mov	r7,r2
 40080d0:	41000017 	ldw	r4,0(r8)
 40080d4:	39c00404 	addi	r7,r7,16
 40080d8:	18c00404 	addi	r3,r3,16
 40080dc:	393ffc15 	stw	r4,-16(r7)
 40080e0:	193ffc17 	ldw	r4,-16(r3)
 40080e4:	6b400404 	addi	r13,r13,16
 40080e8:	5ac00404 	addi	r11,r11,16
 40080ec:	693ffc15 	stw	r4,-16(r13)
 40080f0:	61000017 	ldw	r4,0(r12)
 40080f4:	4a400404 	addi	r9,r9,16
 40080f8:	42000404 	addi	r8,r8,16
 40080fc:	593ffc15 	stw	r4,-16(r11)
 4008100:	51000017 	ldw	r4,0(r10)
 4008104:	63000404 	addi	r12,r12,16
 4008108:	52800404 	addi	r10,r10,16
 400810c:	493ffc15 	stw	r4,-16(r9)
 4008110:	1bbfef1e 	bne	r3,r14,40080d0 <__alt_mem_onchip_memory2_0+0xfc002f10>
 4008114:	79000044 	addi	r4,r15,1
 4008118:	2008913a 	slli	r4,r4,4
 400811c:	328003cc 	andi	r10,r6,15
 4008120:	02c000c4 	movi	r11,3
 4008124:	1107883a 	add	r3,r2,r4
 4008128:	290b883a 	add	r5,r5,r4
 400812c:	5a801e2e 	bgeu	r11,r10,40081a8 <memmove+0x154>
 4008130:	1813883a 	mov	r9,r3
 4008134:	2811883a 	mov	r8,r5
 4008138:	500f883a 	mov	r7,r10
 400813c:	41000017 	ldw	r4,0(r8)
 4008140:	4a400104 	addi	r9,r9,4
 4008144:	39ffff04 	addi	r7,r7,-4
 4008148:	493fff15 	stw	r4,-4(r9)
 400814c:	42000104 	addi	r8,r8,4
 4008150:	59fffa36 	bltu	r11,r7,400813c <__alt_mem_onchip_memory2_0+0xfc002f7c>
 4008154:	513fff04 	addi	r4,r10,-4
 4008158:	2008d0ba 	srli	r4,r4,2
 400815c:	318000cc 	andi	r6,r6,3
 4008160:	21000044 	addi	r4,r4,1
 4008164:	2109883a 	add	r4,r4,r4
 4008168:	2109883a 	add	r4,r4,r4
 400816c:	1907883a 	add	r3,r3,r4
 4008170:	290b883a 	add	r5,r5,r4
 4008174:	30000b26 	beq	r6,zero,40081a4 <memmove+0x150>
 4008178:	198d883a 	add	r6,r3,r6
 400817c:	29c00003 	ldbu	r7,0(r5)
 4008180:	18c00044 	addi	r3,r3,1
 4008184:	29400044 	addi	r5,r5,1
 4008188:	19ffffc5 	stb	r7,-1(r3)
 400818c:	19bffb1e 	bne	r3,r6,400817c <__alt_mem_onchip_memory2_0+0xfc002fbc>
 4008190:	f800283a 	ret
 4008194:	1007883a 	mov	r3,r2
 4008198:	003ff606 	br	4008174 <__alt_mem_onchip_memory2_0+0xfc002fb4>
 400819c:	1007883a 	mov	r3,r2
 40081a0:	003ff506 	br	4008178 <__alt_mem_onchip_memory2_0+0xfc002fb8>
 40081a4:	f800283a 	ret
 40081a8:	500d883a 	mov	r6,r10
 40081ac:	003ff106 	br	4008174 <__alt_mem_onchip_memory2_0+0xfc002fb4>

040081b0 <memset>:
 40081b0:	20c000cc 	andi	r3,r4,3
 40081b4:	2005883a 	mov	r2,r4
 40081b8:	18004426 	beq	r3,zero,40082cc <memset+0x11c>
 40081bc:	31ffffc4 	addi	r7,r6,-1
 40081c0:	30004026 	beq	r6,zero,40082c4 <memset+0x114>
 40081c4:	2813883a 	mov	r9,r5
 40081c8:	200d883a 	mov	r6,r4
 40081cc:	2007883a 	mov	r3,r4
 40081d0:	00000406 	br	40081e4 <memset+0x34>
 40081d4:	3a3fffc4 	addi	r8,r7,-1
 40081d8:	31800044 	addi	r6,r6,1
 40081dc:	38003926 	beq	r7,zero,40082c4 <memset+0x114>
 40081e0:	400f883a 	mov	r7,r8
 40081e4:	18c00044 	addi	r3,r3,1
 40081e8:	32400005 	stb	r9,0(r6)
 40081ec:	1a0000cc 	andi	r8,r3,3
 40081f0:	403ff81e 	bne	r8,zero,40081d4 <__alt_mem_onchip_memory2_0+0xfc003014>
 40081f4:	010000c4 	movi	r4,3
 40081f8:	21c02d2e 	bgeu	r4,r7,40082b0 <memset+0x100>
 40081fc:	29003fcc 	andi	r4,r5,255
 4008200:	200c923a 	slli	r6,r4,8
 4008204:	3108b03a 	or	r4,r6,r4
 4008208:	200c943a 	slli	r6,r4,16
 400820c:	218cb03a 	or	r6,r4,r6
 4008210:	010003c4 	movi	r4,15
 4008214:	21c0182e 	bgeu	r4,r7,4008278 <memset+0xc8>
 4008218:	3b3ffc04 	addi	r12,r7,-16
 400821c:	6018d13a 	srli	r12,r12,4
 4008220:	1a000104 	addi	r8,r3,4
 4008224:	1ac00204 	addi	r11,r3,8
 4008228:	6008913a 	slli	r4,r12,4
 400822c:	1a800304 	addi	r10,r3,12
 4008230:	1813883a 	mov	r9,r3
 4008234:	21000504 	addi	r4,r4,20
 4008238:	1909883a 	add	r4,r3,r4
 400823c:	49800015 	stw	r6,0(r9)
 4008240:	41800015 	stw	r6,0(r8)
 4008244:	59800015 	stw	r6,0(r11)
 4008248:	51800015 	stw	r6,0(r10)
 400824c:	42000404 	addi	r8,r8,16
 4008250:	4a400404 	addi	r9,r9,16
 4008254:	5ac00404 	addi	r11,r11,16
 4008258:	52800404 	addi	r10,r10,16
 400825c:	413ff71e 	bne	r8,r4,400823c <__alt_mem_onchip_memory2_0+0xfc00307c>
 4008260:	63000044 	addi	r12,r12,1
 4008264:	6018913a 	slli	r12,r12,4
 4008268:	39c003cc 	andi	r7,r7,15
 400826c:	010000c4 	movi	r4,3
 4008270:	1b07883a 	add	r3,r3,r12
 4008274:	21c00e2e 	bgeu	r4,r7,40082b0 <memset+0x100>
 4008278:	1813883a 	mov	r9,r3
 400827c:	3811883a 	mov	r8,r7
 4008280:	010000c4 	movi	r4,3
 4008284:	49800015 	stw	r6,0(r9)
 4008288:	423fff04 	addi	r8,r8,-4
 400828c:	4a400104 	addi	r9,r9,4
 4008290:	223ffc36 	bltu	r4,r8,4008284 <__alt_mem_onchip_memory2_0+0xfc0030c4>
 4008294:	393fff04 	addi	r4,r7,-4
 4008298:	2008d0ba 	srli	r4,r4,2
 400829c:	39c000cc 	andi	r7,r7,3
 40082a0:	21000044 	addi	r4,r4,1
 40082a4:	2109883a 	add	r4,r4,r4
 40082a8:	2109883a 	add	r4,r4,r4
 40082ac:	1907883a 	add	r3,r3,r4
 40082b0:	38000526 	beq	r7,zero,40082c8 <memset+0x118>
 40082b4:	19cf883a 	add	r7,r3,r7
 40082b8:	19400005 	stb	r5,0(r3)
 40082bc:	18c00044 	addi	r3,r3,1
 40082c0:	38fffd1e 	bne	r7,r3,40082b8 <__alt_mem_onchip_memory2_0+0xfc0030f8>
 40082c4:	f800283a 	ret
 40082c8:	f800283a 	ret
 40082cc:	2007883a 	mov	r3,r4
 40082d0:	300f883a 	mov	r7,r6
 40082d4:	003fc706 	br	40081f4 <__alt_mem_onchip_memory2_0+0xfc003034>

040082d8 <_realloc_r>:
 40082d8:	defff604 	addi	sp,sp,-40
 40082dc:	dc800215 	stw	r18,8(sp)
 40082e0:	dfc00915 	stw	ra,36(sp)
 40082e4:	df000815 	stw	fp,32(sp)
 40082e8:	ddc00715 	stw	r23,28(sp)
 40082ec:	dd800615 	stw	r22,24(sp)
 40082f0:	dd400515 	stw	r21,20(sp)
 40082f4:	dd000415 	stw	r20,16(sp)
 40082f8:	dcc00315 	stw	r19,12(sp)
 40082fc:	dc400115 	stw	r17,4(sp)
 4008300:	dc000015 	stw	r16,0(sp)
 4008304:	3025883a 	mov	r18,r6
 4008308:	2800b726 	beq	r5,zero,40085e8 <_realloc_r+0x310>
 400830c:	282b883a 	mov	r21,r5
 4008310:	2029883a 	mov	r20,r4
 4008314:	400bf140 	call	400bf14 <__malloc_lock>
 4008318:	a8bfff17 	ldw	r2,-4(r21)
 400831c:	043fff04 	movi	r16,-4
 4008320:	90c002c4 	addi	r3,r18,11
 4008324:	01000584 	movi	r4,22
 4008328:	acfffe04 	addi	r19,r21,-8
 400832c:	1420703a 	and	r16,r2,r16
 4008330:	20c0332e 	bgeu	r4,r3,4008400 <_realloc_r+0x128>
 4008334:	047ffe04 	movi	r17,-8
 4008338:	1c62703a 	and	r17,r3,r17
 400833c:	8807883a 	mov	r3,r17
 4008340:	88005816 	blt	r17,zero,40084a4 <_realloc_r+0x1cc>
 4008344:	8c805736 	bltu	r17,r18,40084a4 <_realloc_r+0x1cc>
 4008348:	80c0300e 	bge	r16,r3,400840c <_realloc_r+0x134>
 400834c:	07010074 	movhi	fp,1025
 4008350:	e73b0e04 	addi	fp,fp,-5064
 4008354:	e1c00217 	ldw	r7,8(fp)
 4008358:	9c09883a 	add	r4,r19,r16
 400835c:	22000117 	ldw	r8,4(r4)
 4008360:	21c06326 	beq	r4,r7,40084f0 <_realloc_r+0x218>
 4008364:	017fff84 	movi	r5,-2
 4008368:	414a703a 	and	r5,r8,r5
 400836c:	214b883a 	add	r5,r4,r5
 4008370:	29800117 	ldw	r6,4(r5)
 4008374:	3180004c 	andi	r6,r6,1
 4008378:	30003f26 	beq	r6,zero,4008478 <_realloc_r+0x1a0>
 400837c:	1080004c 	andi	r2,r2,1
 4008380:	10008326 	beq	r2,zero,4008590 <_realloc_r+0x2b8>
 4008384:	900b883a 	mov	r5,r18
 4008388:	a009883a 	mov	r4,r20
 400838c:	40049400 	call	4004940 <_malloc_r>
 4008390:	1025883a 	mov	r18,r2
 4008394:	10011e26 	beq	r2,zero,4008810 <_realloc_r+0x538>
 4008398:	a93fff17 	ldw	r4,-4(r21)
 400839c:	10fffe04 	addi	r3,r2,-8
 40083a0:	00bfff84 	movi	r2,-2
 40083a4:	2084703a 	and	r2,r4,r2
 40083a8:	9885883a 	add	r2,r19,r2
 40083ac:	1880ee26 	beq	r3,r2,4008768 <_realloc_r+0x490>
 40083b0:	81bfff04 	addi	r6,r16,-4
 40083b4:	00800904 	movi	r2,36
 40083b8:	1180b836 	bltu	r2,r6,400869c <_realloc_r+0x3c4>
 40083bc:	00c004c4 	movi	r3,19
 40083c0:	19809636 	bltu	r3,r6,400861c <_realloc_r+0x344>
 40083c4:	9005883a 	mov	r2,r18
 40083c8:	a807883a 	mov	r3,r21
 40083cc:	19000017 	ldw	r4,0(r3)
 40083d0:	11000015 	stw	r4,0(r2)
 40083d4:	19000117 	ldw	r4,4(r3)
 40083d8:	11000115 	stw	r4,4(r2)
 40083dc:	18c00217 	ldw	r3,8(r3)
 40083e0:	10c00215 	stw	r3,8(r2)
 40083e4:	a80b883a 	mov	r5,r21
 40083e8:	a009883a 	mov	r4,r20
 40083ec:	4007d440 	call	4007d44 <_free_r>
 40083f0:	a009883a 	mov	r4,r20
 40083f4:	400bf380 	call	400bf38 <__malloc_unlock>
 40083f8:	9005883a 	mov	r2,r18
 40083fc:	00001206 	br	4008448 <_realloc_r+0x170>
 4008400:	00c00404 	movi	r3,16
 4008404:	1823883a 	mov	r17,r3
 4008408:	003fce06 	br	4008344 <__alt_mem_onchip_memory2_0+0xfc003184>
 400840c:	a825883a 	mov	r18,r21
 4008410:	8445c83a 	sub	r2,r16,r17
 4008414:	00c003c4 	movi	r3,15
 4008418:	18802636 	bltu	r3,r2,40084b4 <_realloc_r+0x1dc>
 400841c:	99800117 	ldw	r6,4(r19)
 4008420:	9c07883a 	add	r3,r19,r16
 4008424:	3180004c 	andi	r6,r6,1
 4008428:	3420b03a 	or	r16,r6,r16
 400842c:	9c000115 	stw	r16,4(r19)
 4008430:	18800117 	ldw	r2,4(r3)
 4008434:	10800054 	ori	r2,r2,1
 4008438:	18800115 	stw	r2,4(r3)
 400843c:	a009883a 	mov	r4,r20
 4008440:	400bf380 	call	400bf38 <__malloc_unlock>
 4008444:	9005883a 	mov	r2,r18
 4008448:	dfc00917 	ldw	ra,36(sp)
 400844c:	df000817 	ldw	fp,32(sp)
 4008450:	ddc00717 	ldw	r23,28(sp)
 4008454:	dd800617 	ldw	r22,24(sp)
 4008458:	dd400517 	ldw	r21,20(sp)
 400845c:	dd000417 	ldw	r20,16(sp)
 4008460:	dcc00317 	ldw	r19,12(sp)
 4008464:	dc800217 	ldw	r18,8(sp)
 4008468:	dc400117 	ldw	r17,4(sp)
 400846c:	dc000017 	ldw	r16,0(sp)
 4008470:	dec00a04 	addi	sp,sp,40
 4008474:	f800283a 	ret
 4008478:	017fff04 	movi	r5,-4
 400847c:	414a703a 	and	r5,r8,r5
 4008480:	814d883a 	add	r6,r16,r5
 4008484:	30c01f16 	blt	r6,r3,4008504 <_realloc_r+0x22c>
 4008488:	20800317 	ldw	r2,12(r4)
 400848c:	20c00217 	ldw	r3,8(r4)
 4008490:	a825883a 	mov	r18,r21
 4008494:	3021883a 	mov	r16,r6
 4008498:	18800315 	stw	r2,12(r3)
 400849c:	10c00215 	stw	r3,8(r2)
 40084a0:	003fdb06 	br	4008410 <__alt_mem_onchip_memory2_0+0xfc003250>
 40084a4:	00800304 	movi	r2,12
 40084a8:	a0800015 	stw	r2,0(r20)
 40084ac:	0005883a 	mov	r2,zero
 40084b0:	003fe506 	br	4008448 <__alt_mem_onchip_memory2_0+0xfc003288>
 40084b4:	98c00117 	ldw	r3,4(r19)
 40084b8:	9c4b883a 	add	r5,r19,r17
 40084bc:	11000054 	ori	r4,r2,1
 40084c0:	18c0004c 	andi	r3,r3,1
 40084c4:	1c62b03a 	or	r17,r3,r17
 40084c8:	9c400115 	stw	r17,4(r19)
 40084cc:	29000115 	stw	r4,4(r5)
 40084d0:	2885883a 	add	r2,r5,r2
 40084d4:	10c00117 	ldw	r3,4(r2)
 40084d8:	29400204 	addi	r5,r5,8
 40084dc:	a009883a 	mov	r4,r20
 40084e0:	18c00054 	ori	r3,r3,1
 40084e4:	10c00115 	stw	r3,4(r2)
 40084e8:	4007d440 	call	4007d44 <_free_r>
 40084ec:	003fd306 	br	400843c <__alt_mem_onchip_memory2_0+0xfc00327c>
 40084f0:	017fff04 	movi	r5,-4
 40084f4:	414a703a 	and	r5,r8,r5
 40084f8:	89800404 	addi	r6,r17,16
 40084fc:	8151883a 	add	r8,r16,r5
 4008500:	4180590e 	bge	r8,r6,4008668 <_realloc_r+0x390>
 4008504:	1080004c 	andi	r2,r2,1
 4008508:	103f9e1e 	bne	r2,zero,4008384 <__alt_mem_onchip_memory2_0+0xfc0031c4>
 400850c:	adbffe17 	ldw	r22,-8(r21)
 4008510:	00bfff04 	movi	r2,-4
 4008514:	9dadc83a 	sub	r22,r19,r22
 4008518:	b1800117 	ldw	r6,4(r22)
 400851c:	3084703a 	and	r2,r6,r2
 4008520:	20002026 	beq	r4,zero,40085a4 <_realloc_r+0x2cc>
 4008524:	80af883a 	add	r23,r16,r2
 4008528:	b96f883a 	add	r23,r23,r5
 400852c:	21c05f26 	beq	r4,r7,40086ac <_realloc_r+0x3d4>
 4008530:	b8c01c16 	blt	r23,r3,40085a4 <_realloc_r+0x2cc>
 4008534:	20800317 	ldw	r2,12(r4)
 4008538:	20c00217 	ldw	r3,8(r4)
 400853c:	81bfff04 	addi	r6,r16,-4
 4008540:	01000904 	movi	r4,36
 4008544:	18800315 	stw	r2,12(r3)
 4008548:	10c00215 	stw	r3,8(r2)
 400854c:	b0c00217 	ldw	r3,8(r22)
 4008550:	b0800317 	ldw	r2,12(r22)
 4008554:	b4800204 	addi	r18,r22,8
 4008558:	18800315 	stw	r2,12(r3)
 400855c:	10c00215 	stw	r3,8(r2)
 4008560:	21801b36 	bltu	r4,r6,40085d0 <_realloc_r+0x2f8>
 4008564:	008004c4 	movi	r2,19
 4008568:	1180352e 	bgeu	r2,r6,4008640 <_realloc_r+0x368>
 400856c:	a8800017 	ldw	r2,0(r21)
 4008570:	b0800215 	stw	r2,8(r22)
 4008574:	a8800117 	ldw	r2,4(r21)
 4008578:	b0800315 	stw	r2,12(r22)
 400857c:	008006c4 	movi	r2,27
 4008580:	11807f36 	bltu	r2,r6,4008780 <_realloc_r+0x4a8>
 4008584:	b0800404 	addi	r2,r22,16
 4008588:	ad400204 	addi	r21,r21,8
 400858c:	00002d06 	br	4008644 <_realloc_r+0x36c>
 4008590:	adbffe17 	ldw	r22,-8(r21)
 4008594:	00bfff04 	movi	r2,-4
 4008598:	9dadc83a 	sub	r22,r19,r22
 400859c:	b1000117 	ldw	r4,4(r22)
 40085a0:	2084703a 	and	r2,r4,r2
 40085a4:	b03f7726 	beq	r22,zero,4008384 <__alt_mem_onchip_memory2_0+0xfc0031c4>
 40085a8:	80af883a 	add	r23,r16,r2
 40085ac:	b8ff7516 	blt	r23,r3,4008384 <__alt_mem_onchip_memory2_0+0xfc0031c4>
 40085b0:	b0800317 	ldw	r2,12(r22)
 40085b4:	b0c00217 	ldw	r3,8(r22)
 40085b8:	81bfff04 	addi	r6,r16,-4
 40085bc:	01000904 	movi	r4,36
 40085c0:	18800315 	stw	r2,12(r3)
 40085c4:	10c00215 	stw	r3,8(r2)
 40085c8:	b4800204 	addi	r18,r22,8
 40085cc:	21bfe52e 	bgeu	r4,r6,4008564 <__alt_mem_onchip_memory2_0+0xfc0033a4>
 40085d0:	a80b883a 	mov	r5,r21
 40085d4:	9009883a 	mov	r4,r18
 40085d8:	40080540 	call	4008054 <memmove>
 40085dc:	b821883a 	mov	r16,r23
 40085e0:	b027883a 	mov	r19,r22
 40085e4:	003f8a06 	br	4008410 <__alt_mem_onchip_memory2_0+0xfc003250>
 40085e8:	300b883a 	mov	r5,r6
 40085ec:	dfc00917 	ldw	ra,36(sp)
 40085f0:	df000817 	ldw	fp,32(sp)
 40085f4:	ddc00717 	ldw	r23,28(sp)
 40085f8:	dd800617 	ldw	r22,24(sp)
 40085fc:	dd400517 	ldw	r21,20(sp)
 4008600:	dd000417 	ldw	r20,16(sp)
 4008604:	dcc00317 	ldw	r19,12(sp)
 4008608:	dc800217 	ldw	r18,8(sp)
 400860c:	dc400117 	ldw	r17,4(sp)
 4008610:	dc000017 	ldw	r16,0(sp)
 4008614:	dec00a04 	addi	sp,sp,40
 4008618:	40049401 	jmpi	4004940 <_malloc_r>
 400861c:	a8c00017 	ldw	r3,0(r21)
 4008620:	90c00015 	stw	r3,0(r18)
 4008624:	a8c00117 	ldw	r3,4(r21)
 4008628:	90c00115 	stw	r3,4(r18)
 400862c:	00c006c4 	movi	r3,27
 4008630:	19804536 	bltu	r3,r6,4008748 <_realloc_r+0x470>
 4008634:	90800204 	addi	r2,r18,8
 4008638:	a8c00204 	addi	r3,r21,8
 400863c:	003f6306 	br	40083cc <__alt_mem_onchip_memory2_0+0xfc00320c>
 4008640:	9005883a 	mov	r2,r18
 4008644:	a8c00017 	ldw	r3,0(r21)
 4008648:	b821883a 	mov	r16,r23
 400864c:	b027883a 	mov	r19,r22
 4008650:	10c00015 	stw	r3,0(r2)
 4008654:	a8c00117 	ldw	r3,4(r21)
 4008658:	10c00115 	stw	r3,4(r2)
 400865c:	a8c00217 	ldw	r3,8(r21)
 4008660:	10c00215 	stw	r3,8(r2)
 4008664:	003f6a06 	br	4008410 <__alt_mem_onchip_memory2_0+0xfc003250>
 4008668:	9c67883a 	add	r19,r19,r17
 400866c:	4445c83a 	sub	r2,r8,r17
 4008670:	e4c00215 	stw	r19,8(fp)
 4008674:	10800054 	ori	r2,r2,1
 4008678:	98800115 	stw	r2,4(r19)
 400867c:	a8bfff17 	ldw	r2,-4(r21)
 4008680:	a009883a 	mov	r4,r20
 4008684:	1080004c 	andi	r2,r2,1
 4008688:	1462b03a 	or	r17,r2,r17
 400868c:	ac7fff15 	stw	r17,-4(r21)
 4008690:	400bf380 	call	400bf38 <__malloc_unlock>
 4008694:	a805883a 	mov	r2,r21
 4008698:	003f6b06 	br	4008448 <__alt_mem_onchip_memory2_0+0xfc003288>
 400869c:	a80b883a 	mov	r5,r21
 40086a0:	9009883a 	mov	r4,r18
 40086a4:	40080540 	call	4008054 <memmove>
 40086a8:	003f4e06 	br	40083e4 <__alt_mem_onchip_memory2_0+0xfc003224>
 40086ac:	89000404 	addi	r4,r17,16
 40086b0:	b93fbc16 	blt	r23,r4,40085a4 <__alt_mem_onchip_memory2_0+0xfc0033e4>
 40086b4:	b0800317 	ldw	r2,12(r22)
 40086b8:	b0c00217 	ldw	r3,8(r22)
 40086bc:	81bfff04 	addi	r6,r16,-4
 40086c0:	01000904 	movi	r4,36
 40086c4:	18800315 	stw	r2,12(r3)
 40086c8:	10c00215 	stw	r3,8(r2)
 40086cc:	b4800204 	addi	r18,r22,8
 40086d0:	21804336 	bltu	r4,r6,40087e0 <_realloc_r+0x508>
 40086d4:	008004c4 	movi	r2,19
 40086d8:	11803f2e 	bgeu	r2,r6,40087d8 <_realloc_r+0x500>
 40086dc:	a8800017 	ldw	r2,0(r21)
 40086e0:	b0800215 	stw	r2,8(r22)
 40086e4:	a8800117 	ldw	r2,4(r21)
 40086e8:	b0800315 	stw	r2,12(r22)
 40086ec:	008006c4 	movi	r2,27
 40086f0:	11803f36 	bltu	r2,r6,40087f0 <_realloc_r+0x518>
 40086f4:	b0800404 	addi	r2,r22,16
 40086f8:	ad400204 	addi	r21,r21,8
 40086fc:	a8c00017 	ldw	r3,0(r21)
 4008700:	10c00015 	stw	r3,0(r2)
 4008704:	a8c00117 	ldw	r3,4(r21)
 4008708:	10c00115 	stw	r3,4(r2)
 400870c:	a8c00217 	ldw	r3,8(r21)
 4008710:	10c00215 	stw	r3,8(r2)
 4008714:	b447883a 	add	r3,r22,r17
 4008718:	bc45c83a 	sub	r2,r23,r17
 400871c:	e0c00215 	stw	r3,8(fp)
 4008720:	10800054 	ori	r2,r2,1
 4008724:	18800115 	stw	r2,4(r3)
 4008728:	b0800117 	ldw	r2,4(r22)
 400872c:	a009883a 	mov	r4,r20
 4008730:	1080004c 	andi	r2,r2,1
 4008734:	1462b03a 	or	r17,r2,r17
 4008738:	b4400115 	stw	r17,4(r22)
 400873c:	400bf380 	call	400bf38 <__malloc_unlock>
 4008740:	9005883a 	mov	r2,r18
 4008744:	003f4006 	br	4008448 <__alt_mem_onchip_memory2_0+0xfc003288>
 4008748:	a8c00217 	ldw	r3,8(r21)
 400874c:	90c00215 	stw	r3,8(r18)
 4008750:	a8c00317 	ldw	r3,12(r21)
 4008754:	90c00315 	stw	r3,12(r18)
 4008758:	30801126 	beq	r6,r2,40087a0 <_realloc_r+0x4c8>
 400875c:	90800404 	addi	r2,r18,16
 4008760:	a8c00404 	addi	r3,r21,16
 4008764:	003f1906 	br	40083cc <__alt_mem_onchip_memory2_0+0xfc00320c>
 4008768:	90ffff17 	ldw	r3,-4(r18)
 400876c:	00bfff04 	movi	r2,-4
 4008770:	a825883a 	mov	r18,r21
 4008774:	1884703a 	and	r2,r3,r2
 4008778:	80a1883a 	add	r16,r16,r2
 400877c:	003f2406 	br	4008410 <__alt_mem_onchip_memory2_0+0xfc003250>
 4008780:	a8800217 	ldw	r2,8(r21)
 4008784:	b0800415 	stw	r2,16(r22)
 4008788:	a8800317 	ldw	r2,12(r21)
 400878c:	b0800515 	stw	r2,20(r22)
 4008790:	31000a26 	beq	r6,r4,40087bc <_realloc_r+0x4e4>
 4008794:	b0800604 	addi	r2,r22,24
 4008798:	ad400404 	addi	r21,r21,16
 400879c:	003fa906 	br	4008644 <__alt_mem_onchip_memory2_0+0xfc003484>
 40087a0:	a9000417 	ldw	r4,16(r21)
 40087a4:	90800604 	addi	r2,r18,24
 40087a8:	a8c00604 	addi	r3,r21,24
 40087ac:	91000415 	stw	r4,16(r18)
 40087b0:	a9000517 	ldw	r4,20(r21)
 40087b4:	91000515 	stw	r4,20(r18)
 40087b8:	003f0406 	br	40083cc <__alt_mem_onchip_memory2_0+0xfc00320c>
 40087bc:	a8c00417 	ldw	r3,16(r21)
 40087c0:	ad400604 	addi	r21,r21,24
 40087c4:	b0800804 	addi	r2,r22,32
 40087c8:	b0c00615 	stw	r3,24(r22)
 40087cc:	a8ffff17 	ldw	r3,-4(r21)
 40087d0:	b0c00715 	stw	r3,28(r22)
 40087d4:	003f9b06 	br	4008644 <__alt_mem_onchip_memory2_0+0xfc003484>
 40087d8:	9005883a 	mov	r2,r18
 40087dc:	003fc706 	br	40086fc <__alt_mem_onchip_memory2_0+0xfc00353c>
 40087e0:	a80b883a 	mov	r5,r21
 40087e4:	9009883a 	mov	r4,r18
 40087e8:	40080540 	call	4008054 <memmove>
 40087ec:	003fc906 	br	4008714 <__alt_mem_onchip_memory2_0+0xfc003554>
 40087f0:	a8800217 	ldw	r2,8(r21)
 40087f4:	b0800415 	stw	r2,16(r22)
 40087f8:	a8800317 	ldw	r2,12(r21)
 40087fc:	b0800515 	stw	r2,20(r22)
 4008800:	31000726 	beq	r6,r4,4008820 <_realloc_r+0x548>
 4008804:	b0800604 	addi	r2,r22,24
 4008808:	ad400404 	addi	r21,r21,16
 400880c:	003fbb06 	br	40086fc <__alt_mem_onchip_memory2_0+0xfc00353c>
 4008810:	a009883a 	mov	r4,r20
 4008814:	400bf380 	call	400bf38 <__malloc_unlock>
 4008818:	0005883a 	mov	r2,zero
 400881c:	003f0a06 	br	4008448 <__alt_mem_onchip_memory2_0+0xfc003288>
 4008820:	a8c00417 	ldw	r3,16(r21)
 4008824:	ad400604 	addi	r21,r21,24
 4008828:	b0800804 	addi	r2,r22,32
 400882c:	b0c00615 	stw	r3,24(r22)
 4008830:	a8ffff17 	ldw	r3,-4(r21)
 4008834:	b0c00715 	stw	r3,28(r22)
 4008838:	003fb006 	br	40086fc <__alt_mem_onchip_memory2_0+0xfc00353c>

0400883c <__muldi3>:
 400883c:	defff604 	addi	sp,sp,-40
 4008840:	dd800615 	stw	r22,24(sp)
 4008844:	dd400515 	stw	r21,20(sp)
 4008848:	dc400115 	stw	r17,4(sp)
 400884c:	357fffcc 	andi	r21,r6,65535
 4008850:	2022d43a 	srli	r17,r4,16
 4008854:	25bfffcc 	andi	r22,r4,65535
 4008858:	dcc00315 	stw	r19,12(sp)
 400885c:	dc800215 	stw	r18,8(sp)
 4008860:	2027883a 	mov	r19,r4
 4008864:	2825883a 	mov	r18,r5
 4008868:	b009883a 	mov	r4,r22
 400886c:	a80b883a 	mov	r5,r21
 4008870:	dfc00915 	stw	ra,36(sp)
 4008874:	df000815 	stw	fp,32(sp)
 4008878:	ddc00715 	stw	r23,28(sp)
 400887c:	3839883a 	mov	fp,r7
 4008880:	302ed43a 	srli	r23,r6,16
 4008884:	dd000415 	stw	r20,16(sp)
 4008888:	dc000015 	stw	r16,0(sp)
 400888c:	3029883a 	mov	r20,r6
 4008890:	4000af80 	call	4000af8 <__mulsi3>
 4008894:	a80b883a 	mov	r5,r21
 4008898:	8809883a 	mov	r4,r17
 400889c:	1021883a 	mov	r16,r2
 40088a0:	4000af80 	call	4000af8 <__mulsi3>
 40088a4:	8809883a 	mov	r4,r17
 40088a8:	b80b883a 	mov	r5,r23
 40088ac:	102b883a 	mov	r21,r2
 40088b0:	4000af80 	call	4000af8 <__mulsi3>
 40088b4:	b80b883a 	mov	r5,r23
 40088b8:	b009883a 	mov	r4,r22
 40088bc:	1023883a 	mov	r17,r2
 40088c0:	4000af80 	call	4000af8 <__mulsi3>
 40088c4:	8006d43a 	srli	r3,r16,16
 40088c8:	1545883a 	add	r2,r2,r21
 40088cc:	1885883a 	add	r2,r3,r2
 40088d0:	1540022e 	bgeu	r2,r21,40088dc <__muldi3+0xa0>
 40088d4:	00c00074 	movhi	r3,1
 40088d8:	88e3883a 	add	r17,r17,r3
 40088dc:	1006d43a 	srli	r3,r2,16
 40088e0:	1004943a 	slli	r2,r2,16
 40088e4:	e00b883a 	mov	r5,fp
 40088e8:	9809883a 	mov	r4,r19
 40088ec:	843fffcc 	andi	r16,r16,65535
 40088f0:	1c63883a 	add	r17,r3,r17
 40088f4:	1421883a 	add	r16,r2,r16
 40088f8:	4000af80 	call	4000af8 <__mulsi3>
 40088fc:	900b883a 	mov	r5,r18
 4008900:	a009883a 	mov	r4,r20
 4008904:	1027883a 	mov	r19,r2
 4008908:	4000af80 	call	4000af8 <__mulsi3>
 400890c:	9885883a 	add	r2,r19,r2
 4008910:	1447883a 	add	r3,r2,r17
 4008914:	8005883a 	mov	r2,r16
 4008918:	dfc00917 	ldw	ra,36(sp)
 400891c:	df000817 	ldw	fp,32(sp)
 4008920:	ddc00717 	ldw	r23,28(sp)
 4008924:	dd800617 	ldw	r22,24(sp)
 4008928:	dd400517 	ldw	r21,20(sp)
 400892c:	dd000417 	ldw	r20,16(sp)
 4008930:	dcc00317 	ldw	r19,12(sp)
 4008934:	dc800217 	ldw	r18,8(sp)
 4008938:	dc400117 	ldw	r17,4(sp)
 400893c:	dc000017 	ldw	r16,0(sp)
 4008940:	dec00a04 	addi	sp,sp,40
 4008944:	f800283a 	ret

04008948 <__udivdi3>:
 4008948:	defff404 	addi	sp,sp,-48
 400894c:	dcc00515 	stw	r19,20(sp)
 4008950:	dc000215 	stw	r16,8(sp)
 4008954:	dfc00b15 	stw	ra,44(sp)
 4008958:	df000a15 	stw	fp,40(sp)
 400895c:	ddc00915 	stw	r23,36(sp)
 4008960:	dd800815 	stw	r22,32(sp)
 4008964:	dd400715 	stw	r21,28(sp)
 4008968:	dd000615 	stw	r20,24(sp)
 400896c:	dc800415 	stw	r18,16(sp)
 4008970:	dc400315 	stw	r17,12(sp)
 4008974:	2027883a 	mov	r19,r4
 4008978:	2821883a 	mov	r16,r5
 400897c:	3800461e 	bne	r7,zero,4008a98 <__udivdi3+0x150>
 4008980:	3023883a 	mov	r17,r6
 4008984:	2025883a 	mov	r18,r4
 4008988:	2980572e 	bgeu	r5,r6,4008ae8 <__udivdi3+0x1a0>
 400898c:	00bfffd4 	movui	r2,65535
 4008990:	282d883a 	mov	r22,r5
 4008994:	1180b236 	bltu	r2,r6,4008c60 <__udivdi3+0x318>
 4008998:	00803fc4 	movi	r2,255
 400899c:	1185803a 	cmpltu	r2,r2,r6
 40089a0:	100490fa 	slli	r2,r2,3
 40089a4:	3086d83a 	srl	r3,r6,r2
 40089a8:	01010074 	movhi	r4,1025
 40089ac:	2138e204 	addi	r4,r4,-7288
 40089b0:	20c7883a 	add	r3,r4,r3
 40089b4:	18c00003 	ldbu	r3,0(r3)
 40089b8:	1885883a 	add	r2,r3,r2
 40089bc:	00c00804 	movi	r3,32
 40089c0:	1887c83a 	sub	r3,r3,r2
 40089c4:	18000526 	beq	r3,zero,40089dc <__udivdi3+0x94>
 40089c8:	80e0983a 	sll	r16,r16,r3
 40089cc:	9884d83a 	srl	r2,r19,r2
 40089d0:	30e2983a 	sll	r17,r6,r3
 40089d4:	98e4983a 	sll	r18,r19,r3
 40089d8:	142cb03a 	or	r22,r2,r16
 40089dc:	882ad43a 	srli	r21,r17,16
 40089e0:	b009883a 	mov	r4,r22
 40089e4:	8d3fffcc 	andi	r20,r17,65535
 40089e8:	a80b883a 	mov	r5,r21
 40089ec:	4000aa00 	call	4000aa0 <__umodsi3>
 40089f0:	b009883a 	mov	r4,r22
 40089f4:	a80b883a 	mov	r5,r21
 40089f8:	1027883a 	mov	r19,r2
 40089fc:	4000a3c0 	call	4000a3c <__udivsi3>
 4008a00:	100b883a 	mov	r5,r2
 4008a04:	a009883a 	mov	r4,r20
 4008a08:	102d883a 	mov	r22,r2
 4008a0c:	4000af80 	call	4000af8 <__mulsi3>
 4008a10:	9826943a 	slli	r19,r19,16
 4008a14:	9006d43a 	srli	r3,r18,16
 4008a18:	1cc6b03a 	or	r3,r3,r19
 4008a1c:	1880052e 	bgeu	r3,r2,4008a34 <__udivdi3+0xec>
 4008a20:	1c47883a 	add	r3,r3,r17
 4008a24:	b13fffc4 	addi	r4,r22,-1
 4008a28:	1c400136 	bltu	r3,r17,4008a30 <__udivdi3+0xe8>
 4008a2c:	18814236 	bltu	r3,r2,4008f38 <__udivdi3+0x5f0>
 4008a30:	202d883a 	mov	r22,r4
 4008a34:	18a1c83a 	sub	r16,r3,r2
 4008a38:	8009883a 	mov	r4,r16
 4008a3c:	a80b883a 	mov	r5,r21
 4008a40:	4000aa00 	call	4000aa0 <__umodsi3>
 4008a44:	1027883a 	mov	r19,r2
 4008a48:	8009883a 	mov	r4,r16
 4008a4c:	a80b883a 	mov	r5,r21
 4008a50:	9826943a 	slli	r19,r19,16
 4008a54:	4000a3c0 	call	4000a3c <__udivsi3>
 4008a58:	100b883a 	mov	r5,r2
 4008a5c:	a009883a 	mov	r4,r20
 4008a60:	94bfffcc 	andi	r18,r18,65535
 4008a64:	1021883a 	mov	r16,r2
 4008a68:	94e4b03a 	or	r18,r18,r19
 4008a6c:	4000af80 	call	4000af8 <__mulsi3>
 4008a70:	9080052e 	bgeu	r18,r2,4008a88 <__udivdi3+0x140>
 4008a74:	8ca5883a 	add	r18,r17,r18
 4008a78:	80ffffc4 	addi	r3,r16,-1
 4008a7c:	94410c36 	bltu	r18,r17,4008eb0 <__udivdi3+0x568>
 4008a80:	90810b2e 	bgeu	r18,r2,4008eb0 <__udivdi3+0x568>
 4008a84:	843fff84 	addi	r16,r16,-2
 4008a88:	b004943a 	slli	r2,r22,16
 4008a8c:	0007883a 	mov	r3,zero
 4008a90:	1404b03a 	or	r2,r2,r16
 4008a94:	00005e06 	br	4008c10 <__udivdi3+0x2c8>
 4008a98:	29c05b36 	bltu	r5,r7,4008c08 <__udivdi3+0x2c0>
 4008a9c:	00bfffd4 	movui	r2,65535
 4008aa0:	11c0672e 	bgeu	r2,r7,4008c40 <__udivdi3+0x2f8>
 4008aa4:	00804034 	movhi	r2,256
 4008aa8:	10bfffc4 	addi	r2,r2,-1
 4008aac:	11c10a36 	bltu	r2,r7,4008ed8 <__udivdi3+0x590>
 4008ab0:	00800404 	movi	r2,16
 4008ab4:	3886d83a 	srl	r3,r7,r2
 4008ab8:	01010074 	movhi	r4,1025
 4008abc:	2138e204 	addi	r4,r4,-7288
 4008ac0:	20c7883a 	add	r3,r4,r3
 4008ac4:	18c00003 	ldbu	r3,0(r3)
 4008ac8:	05c00804 	movi	r23,32
 4008acc:	1885883a 	add	r2,r3,r2
 4008ad0:	b8afc83a 	sub	r23,r23,r2
 4008ad4:	b800671e 	bne	r23,zero,4008c74 <__udivdi3+0x32c>
 4008ad8:	3c010536 	bltu	r7,r16,4008ef0 <__udivdi3+0x5a8>
 4008adc:	9985403a 	cmpgeu	r2,r19,r6
 4008ae0:	0007883a 	mov	r3,zero
 4008ae4:	00004a06 	br	4008c10 <__udivdi3+0x2c8>
 4008ae8:	3000041e 	bne	r6,zero,4008afc <__udivdi3+0x1b4>
 4008aec:	000b883a 	mov	r5,zero
 4008af0:	01000044 	movi	r4,1
 4008af4:	4000a3c0 	call	4000a3c <__udivsi3>
 4008af8:	1023883a 	mov	r17,r2
 4008afc:	00bfffd4 	movui	r2,65535
 4008b00:	1440532e 	bgeu	r2,r17,4008c50 <__udivdi3+0x308>
 4008b04:	00804034 	movhi	r2,256
 4008b08:	10bfffc4 	addi	r2,r2,-1
 4008b0c:	1440f436 	bltu	r2,r17,4008ee0 <__udivdi3+0x598>
 4008b10:	00800404 	movi	r2,16
 4008b14:	8886d83a 	srl	r3,r17,r2
 4008b18:	01010074 	movhi	r4,1025
 4008b1c:	2138e204 	addi	r4,r4,-7288
 4008b20:	20c7883a 	add	r3,r4,r3
 4008b24:	18c00003 	ldbu	r3,0(r3)
 4008b28:	1885883a 	add	r2,r3,r2
 4008b2c:	00c00804 	movi	r3,32
 4008b30:	1887c83a 	sub	r3,r3,r2
 4008b34:	1800a51e 	bne	r3,zero,4008dcc <__udivdi3+0x484>
 4008b38:	882ad43a 	srli	r21,r17,16
 4008b3c:	8461c83a 	sub	r16,r16,r17
 4008b40:	8d3fffcc 	andi	r20,r17,65535
 4008b44:	00c00044 	movi	r3,1
 4008b48:	a80b883a 	mov	r5,r21
 4008b4c:	8009883a 	mov	r4,r16
 4008b50:	d8c00115 	stw	r3,4(sp)
 4008b54:	4000aa00 	call	4000aa0 <__umodsi3>
 4008b58:	a80b883a 	mov	r5,r21
 4008b5c:	8009883a 	mov	r4,r16
 4008b60:	1027883a 	mov	r19,r2
 4008b64:	4000a3c0 	call	4000a3c <__udivsi3>
 4008b68:	a00b883a 	mov	r5,r20
 4008b6c:	1009883a 	mov	r4,r2
 4008b70:	102d883a 	mov	r22,r2
 4008b74:	4000af80 	call	4000af8 <__mulsi3>
 4008b78:	9826943a 	slli	r19,r19,16
 4008b7c:	900ed43a 	srli	r7,r18,16
 4008b80:	d8c00117 	ldw	r3,4(sp)
 4008b84:	3cceb03a 	or	r7,r7,r19
 4008b88:	3880052e 	bgeu	r7,r2,4008ba0 <__udivdi3+0x258>
 4008b8c:	3c4f883a 	add	r7,r7,r17
 4008b90:	b13fffc4 	addi	r4,r22,-1
 4008b94:	3c400136 	bltu	r7,r17,4008b9c <__udivdi3+0x254>
 4008b98:	3880e436 	bltu	r7,r2,4008f2c <__udivdi3+0x5e4>
 4008b9c:	202d883a 	mov	r22,r4
 4008ba0:	38a1c83a 	sub	r16,r7,r2
 4008ba4:	8009883a 	mov	r4,r16
 4008ba8:	a80b883a 	mov	r5,r21
 4008bac:	d8c00115 	stw	r3,4(sp)
 4008bb0:	4000aa00 	call	4000aa0 <__umodsi3>
 4008bb4:	1027883a 	mov	r19,r2
 4008bb8:	8009883a 	mov	r4,r16
 4008bbc:	a80b883a 	mov	r5,r21
 4008bc0:	9826943a 	slli	r19,r19,16
 4008bc4:	4000a3c0 	call	4000a3c <__udivsi3>
 4008bc8:	a00b883a 	mov	r5,r20
 4008bcc:	1009883a 	mov	r4,r2
 4008bd0:	94bfffcc 	andi	r18,r18,65535
 4008bd4:	1021883a 	mov	r16,r2
 4008bd8:	94e4b03a 	or	r18,r18,r19
 4008bdc:	4000af80 	call	4000af8 <__mulsi3>
 4008be0:	d8c00117 	ldw	r3,4(sp)
 4008be4:	9080052e 	bgeu	r18,r2,4008bfc <__udivdi3+0x2b4>
 4008be8:	8ca5883a 	add	r18,r17,r18
 4008bec:	813fffc4 	addi	r4,r16,-1
 4008bf0:	9440ad36 	bltu	r18,r17,4008ea8 <__udivdi3+0x560>
 4008bf4:	9080ac2e 	bgeu	r18,r2,4008ea8 <__udivdi3+0x560>
 4008bf8:	843fff84 	addi	r16,r16,-2
 4008bfc:	b004943a 	slli	r2,r22,16
 4008c00:	1404b03a 	or	r2,r2,r16
 4008c04:	00000206 	br	4008c10 <__udivdi3+0x2c8>
 4008c08:	0007883a 	mov	r3,zero
 4008c0c:	0005883a 	mov	r2,zero
 4008c10:	dfc00b17 	ldw	ra,44(sp)
 4008c14:	df000a17 	ldw	fp,40(sp)
 4008c18:	ddc00917 	ldw	r23,36(sp)
 4008c1c:	dd800817 	ldw	r22,32(sp)
 4008c20:	dd400717 	ldw	r21,28(sp)
 4008c24:	dd000617 	ldw	r20,24(sp)
 4008c28:	dcc00517 	ldw	r19,20(sp)
 4008c2c:	dc800417 	ldw	r18,16(sp)
 4008c30:	dc400317 	ldw	r17,12(sp)
 4008c34:	dc000217 	ldw	r16,8(sp)
 4008c38:	dec00c04 	addi	sp,sp,48
 4008c3c:	f800283a 	ret
 4008c40:	00803fc4 	movi	r2,255
 4008c44:	11c5803a 	cmpltu	r2,r2,r7
 4008c48:	100490fa 	slli	r2,r2,3
 4008c4c:	003f9906 	br	4008ab4 <__alt_mem_onchip_memory2_0+0xfc0038f4>
 4008c50:	00803fc4 	movi	r2,255
 4008c54:	1445803a 	cmpltu	r2,r2,r17
 4008c58:	100490fa 	slli	r2,r2,3
 4008c5c:	003fad06 	br	4008b14 <__alt_mem_onchip_memory2_0+0xfc003954>
 4008c60:	00804034 	movhi	r2,256
 4008c64:	10bfffc4 	addi	r2,r2,-1
 4008c68:	11809f36 	bltu	r2,r6,4008ee8 <__udivdi3+0x5a0>
 4008c6c:	00800404 	movi	r2,16
 4008c70:	003f4c06 	br	40089a4 <__alt_mem_onchip_memory2_0+0xfc0037e4>
 4008c74:	3dce983a 	sll	r7,r7,r23
 4008c78:	30b8d83a 	srl	fp,r6,r2
 4008c7c:	80a2d83a 	srl	r17,r16,r2
 4008c80:	35cc983a 	sll	r6,r6,r23
 4008c84:	3f38b03a 	or	fp,r7,fp
 4008c88:	e024d43a 	srli	r18,fp,16
 4008c8c:	9884d83a 	srl	r2,r19,r2
 4008c90:	85e0983a 	sll	r16,r16,r23
 4008c94:	8809883a 	mov	r4,r17
 4008c98:	900b883a 	mov	r5,r18
 4008c9c:	d9800015 	stw	r6,0(sp)
 4008ca0:	1420b03a 	or	r16,r2,r16
 4008ca4:	4000aa00 	call	4000aa0 <__umodsi3>
 4008ca8:	900b883a 	mov	r5,r18
 4008cac:	8809883a 	mov	r4,r17
 4008cb0:	1029883a 	mov	r20,r2
 4008cb4:	e5bfffcc 	andi	r22,fp,65535
 4008cb8:	4000a3c0 	call	4000a3c <__udivsi3>
 4008cbc:	100b883a 	mov	r5,r2
 4008cc0:	b009883a 	mov	r4,r22
 4008cc4:	102b883a 	mov	r21,r2
 4008cc8:	4000af80 	call	4000af8 <__mulsi3>
 4008ccc:	a028943a 	slli	r20,r20,16
 4008cd0:	8006d43a 	srli	r3,r16,16
 4008cd4:	1d06b03a 	or	r3,r3,r20
 4008cd8:	1880042e 	bgeu	r3,r2,4008cec <__udivdi3+0x3a4>
 4008cdc:	1f07883a 	add	r3,r3,fp
 4008ce0:	a93fffc4 	addi	r4,r21,-1
 4008ce4:	1f00892e 	bgeu	r3,fp,4008f0c <__udivdi3+0x5c4>
 4008ce8:	202b883a 	mov	r21,r4
 4008cec:	18a3c83a 	sub	r17,r3,r2
 4008cf0:	8809883a 	mov	r4,r17
 4008cf4:	900b883a 	mov	r5,r18
 4008cf8:	4000aa00 	call	4000aa0 <__umodsi3>
 4008cfc:	1029883a 	mov	r20,r2
 4008d00:	8809883a 	mov	r4,r17
 4008d04:	900b883a 	mov	r5,r18
 4008d08:	a028943a 	slli	r20,r20,16
 4008d0c:	4000a3c0 	call	4000a3c <__udivsi3>
 4008d10:	100b883a 	mov	r5,r2
 4008d14:	b009883a 	mov	r4,r22
 4008d18:	843fffcc 	andi	r16,r16,65535
 4008d1c:	1023883a 	mov	r17,r2
 4008d20:	8520b03a 	or	r16,r16,r20
 4008d24:	4000af80 	call	4000af8 <__mulsi3>
 4008d28:	8080042e 	bgeu	r16,r2,4008d3c <__udivdi3+0x3f4>
 4008d2c:	8721883a 	add	r16,r16,fp
 4008d30:	88ffffc4 	addi	r3,r17,-1
 4008d34:	8700712e 	bgeu	r16,fp,4008efc <__udivdi3+0x5b4>
 4008d38:	1823883a 	mov	r17,r3
 4008d3c:	a80e943a 	slli	r7,r21,16
 4008d40:	d8c00017 	ldw	r3,0(sp)
 4008d44:	80a1c83a 	sub	r16,r16,r2
 4008d48:	3c64b03a 	or	r18,r7,r17
 4008d4c:	1d3fffcc 	andi	r20,r3,65535
 4008d50:	9022d43a 	srli	r17,r18,16
 4008d54:	95bfffcc 	andi	r22,r18,65535
 4008d58:	a00b883a 	mov	r5,r20
 4008d5c:	b009883a 	mov	r4,r22
 4008d60:	182ad43a 	srli	r21,r3,16
 4008d64:	4000af80 	call	4000af8 <__mulsi3>
 4008d68:	a00b883a 	mov	r5,r20
 4008d6c:	8809883a 	mov	r4,r17
 4008d70:	1039883a 	mov	fp,r2
 4008d74:	4000af80 	call	4000af8 <__mulsi3>
 4008d78:	8809883a 	mov	r4,r17
 4008d7c:	a80b883a 	mov	r5,r21
 4008d80:	1029883a 	mov	r20,r2
 4008d84:	4000af80 	call	4000af8 <__mulsi3>
 4008d88:	a80b883a 	mov	r5,r21
 4008d8c:	b009883a 	mov	r4,r22
 4008d90:	1023883a 	mov	r17,r2
 4008d94:	4000af80 	call	4000af8 <__mulsi3>
 4008d98:	e006d43a 	srli	r3,fp,16
 4008d9c:	1505883a 	add	r2,r2,r20
 4008da0:	1887883a 	add	r3,r3,r2
 4008da4:	1d00022e 	bgeu	r3,r20,4008db0 <__udivdi3+0x468>
 4008da8:	00800074 	movhi	r2,1
 4008dac:	88a3883a 	add	r17,r17,r2
 4008db0:	1804d43a 	srli	r2,r3,16
 4008db4:	1463883a 	add	r17,r2,r17
 4008db8:	84404436 	bltu	r16,r17,4008ecc <__udivdi3+0x584>
 4008dbc:	84403e26 	beq	r16,r17,4008eb8 <__udivdi3+0x570>
 4008dc0:	9005883a 	mov	r2,r18
 4008dc4:	0007883a 	mov	r3,zero
 4008dc8:	003f9106 	br	4008c10 <__alt_mem_onchip_memory2_0+0xfc003a50>
 4008dcc:	88e2983a 	sll	r17,r17,r3
 4008dd0:	80aed83a 	srl	r23,r16,r2
 4008dd4:	80e0983a 	sll	r16,r16,r3
 4008dd8:	882ad43a 	srli	r21,r17,16
 4008ddc:	9884d83a 	srl	r2,r19,r2
 4008de0:	b809883a 	mov	r4,r23
 4008de4:	a80b883a 	mov	r5,r21
 4008de8:	98e4983a 	sll	r18,r19,r3
 4008dec:	142cb03a 	or	r22,r2,r16
 4008df0:	4000aa00 	call	4000aa0 <__umodsi3>
 4008df4:	b809883a 	mov	r4,r23
 4008df8:	a80b883a 	mov	r5,r21
 4008dfc:	1027883a 	mov	r19,r2
 4008e00:	8d3fffcc 	andi	r20,r17,65535
 4008e04:	4000a3c0 	call	4000a3c <__udivsi3>
 4008e08:	a009883a 	mov	r4,r20
 4008e0c:	100b883a 	mov	r5,r2
 4008e10:	102f883a 	mov	r23,r2
 4008e14:	4000af80 	call	4000af8 <__mulsi3>
 4008e18:	9826943a 	slli	r19,r19,16
 4008e1c:	b008d43a 	srli	r4,r22,16
 4008e20:	24c8b03a 	or	r4,r4,r19
 4008e24:	2080062e 	bgeu	r4,r2,4008e40 <__udivdi3+0x4f8>
 4008e28:	2449883a 	add	r4,r4,r17
 4008e2c:	b8ffffc4 	addi	r3,r23,-1
 4008e30:	24403c36 	bltu	r4,r17,4008f24 <__udivdi3+0x5dc>
 4008e34:	20803b2e 	bgeu	r4,r2,4008f24 <__udivdi3+0x5dc>
 4008e38:	bdffff84 	addi	r23,r23,-2
 4008e3c:	2449883a 	add	r4,r4,r17
 4008e40:	20a1c83a 	sub	r16,r4,r2
 4008e44:	a80b883a 	mov	r5,r21
 4008e48:	8009883a 	mov	r4,r16
 4008e4c:	4000aa00 	call	4000aa0 <__umodsi3>
 4008e50:	a80b883a 	mov	r5,r21
 4008e54:	8009883a 	mov	r4,r16
 4008e58:	1027883a 	mov	r19,r2
 4008e5c:	4000a3c0 	call	4000a3c <__udivsi3>
 4008e60:	a009883a 	mov	r4,r20
 4008e64:	100b883a 	mov	r5,r2
 4008e68:	9826943a 	slli	r19,r19,16
 4008e6c:	1039883a 	mov	fp,r2
 4008e70:	4000af80 	call	4000af8 <__mulsi3>
 4008e74:	b13fffcc 	andi	r4,r22,65535
 4008e78:	24c8b03a 	or	r4,r4,r19
 4008e7c:	2080062e 	bgeu	r4,r2,4008e98 <__udivdi3+0x550>
 4008e80:	2449883a 	add	r4,r4,r17
 4008e84:	e0ffffc4 	addi	r3,fp,-1
 4008e88:	24402436 	bltu	r4,r17,4008f1c <__udivdi3+0x5d4>
 4008e8c:	2080232e 	bgeu	r4,r2,4008f1c <__udivdi3+0x5d4>
 4008e90:	e73fff84 	addi	fp,fp,-2
 4008e94:	2449883a 	add	r4,r4,r17
 4008e98:	b82e943a 	slli	r23,r23,16
 4008e9c:	20a1c83a 	sub	r16,r4,r2
 4008ea0:	bf06b03a 	or	r3,r23,fp
 4008ea4:	003f2806 	br	4008b48 <__alt_mem_onchip_memory2_0+0xfc003988>
 4008ea8:	2021883a 	mov	r16,r4
 4008eac:	003f5306 	br	4008bfc <__alt_mem_onchip_memory2_0+0xfc003a3c>
 4008eb0:	1821883a 	mov	r16,r3
 4008eb4:	003ef406 	br	4008a88 <__alt_mem_onchip_memory2_0+0xfc0038c8>
 4008eb8:	1806943a 	slli	r3,r3,16
 4008ebc:	9de6983a 	sll	r19,r19,r23
 4008ec0:	e73fffcc 	andi	fp,fp,65535
 4008ec4:	1f07883a 	add	r3,r3,fp
 4008ec8:	98ffbd2e 	bgeu	r19,r3,4008dc0 <__alt_mem_onchip_memory2_0+0xfc003c00>
 4008ecc:	90bfffc4 	addi	r2,r18,-1
 4008ed0:	0007883a 	mov	r3,zero
 4008ed4:	003f4e06 	br	4008c10 <__alt_mem_onchip_memory2_0+0xfc003a50>
 4008ed8:	00800604 	movi	r2,24
 4008edc:	003ef506 	br	4008ab4 <__alt_mem_onchip_memory2_0+0xfc0038f4>
 4008ee0:	00800604 	movi	r2,24
 4008ee4:	003f0b06 	br	4008b14 <__alt_mem_onchip_memory2_0+0xfc003954>
 4008ee8:	00800604 	movi	r2,24
 4008eec:	003ead06 	br	40089a4 <__alt_mem_onchip_memory2_0+0xfc0037e4>
 4008ef0:	0007883a 	mov	r3,zero
 4008ef4:	00800044 	movi	r2,1
 4008ef8:	003f4506 	br	4008c10 <__alt_mem_onchip_memory2_0+0xfc003a50>
 4008efc:	80bf8e2e 	bgeu	r16,r2,4008d38 <__alt_mem_onchip_memory2_0+0xfc003b78>
 4008f00:	8c7fff84 	addi	r17,r17,-2
 4008f04:	8721883a 	add	r16,r16,fp
 4008f08:	003f8c06 	br	4008d3c <__alt_mem_onchip_memory2_0+0xfc003b7c>
 4008f0c:	18bf762e 	bgeu	r3,r2,4008ce8 <__alt_mem_onchip_memory2_0+0xfc003b28>
 4008f10:	ad7fff84 	addi	r21,r21,-2
 4008f14:	1f07883a 	add	r3,r3,fp
 4008f18:	003f7406 	br	4008cec <__alt_mem_onchip_memory2_0+0xfc003b2c>
 4008f1c:	1839883a 	mov	fp,r3
 4008f20:	003fdd06 	br	4008e98 <__alt_mem_onchip_memory2_0+0xfc003cd8>
 4008f24:	182f883a 	mov	r23,r3
 4008f28:	003fc506 	br	4008e40 <__alt_mem_onchip_memory2_0+0xfc003c80>
 4008f2c:	b5bfff84 	addi	r22,r22,-2
 4008f30:	3c4f883a 	add	r7,r7,r17
 4008f34:	003f1a06 	br	4008ba0 <__alt_mem_onchip_memory2_0+0xfc0039e0>
 4008f38:	b5bfff84 	addi	r22,r22,-2
 4008f3c:	1c47883a 	add	r3,r3,r17
 4008f40:	003ebc06 	br	4008a34 <__alt_mem_onchip_memory2_0+0xfc003874>

04008f44 <__umoddi3>:
 4008f44:	defff304 	addi	sp,sp,-52
 4008f48:	df000b15 	stw	fp,44(sp)
 4008f4c:	dc400415 	stw	r17,16(sp)
 4008f50:	dc000315 	stw	r16,12(sp)
 4008f54:	dfc00c15 	stw	ra,48(sp)
 4008f58:	ddc00a15 	stw	r23,40(sp)
 4008f5c:	dd800915 	stw	r22,36(sp)
 4008f60:	dd400815 	stw	r21,32(sp)
 4008f64:	dd000715 	stw	r20,28(sp)
 4008f68:	dcc00615 	stw	r19,24(sp)
 4008f6c:	dc800515 	stw	r18,20(sp)
 4008f70:	2021883a 	mov	r16,r4
 4008f74:	2823883a 	mov	r17,r5
 4008f78:	2839883a 	mov	fp,r5
 4008f7c:	3800401e 	bne	r7,zero,4009080 <__umoddi3+0x13c>
 4008f80:	3027883a 	mov	r19,r6
 4008f84:	2029883a 	mov	r20,r4
 4008f88:	2980552e 	bgeu	r5,r6,40090e0 <__umoddi3+0x19c>
 4008f8c:	00bfffd4 	movui	r2,65535
 4008f90:	1180a236 	bltu	r2,r6,400921c <__umoddi3+0x2d8>
 4008f94:	01003fc4 	movi	r4,255
 4008f98:	2189803a 	cmpltu	r4,r4,r6
 4008f9c:	200890fa 	slli	r4,r4,3
 4008fa0:	3104d83a 	srl	r2,r6,r4
 4008fa4:	00c10074 	movhi	r3,1025
 4008fa8:	18f8e204 	addi	r3,r3,-7288
 4008fac:	1885883a 	add	r2,r3,r2
 4008fb0:	10c00003 	ldbu	r3,0(r2)
 4008fb4:	00800804 	movi	r2,32
 4008fb8:	1909883a 	add	r4,r3,r4
 4008fbc:	1125c83a 	sub	r18,r2,r4
 4008fc0:	90000526 	beq	r18,zero,4008fd8 <__umoddi3+0x94>
 4008fc4:	8ca2983a 	sll	r17,r17,r18
 4008fc8:	8108d83a 	srl	r4,r16,r4
 4008fcc:	34a6983a 	sll	r19,r6,r18
 4008fd0:	84a8983a 	sll	r20,r16,r18
 4008fd4:	2478b03a 	or	fp,r4,r17
 4008fd8:	982cd43a 	srli	r22,r19,16
 4008fdc:	e009883a 	mov	r4,fp
 4008fe0:	9dffffcc 	andi	r23,r19,65535
 4008fe4:	b00b883a 	mov	r5,r22
 4008fe8:	4000aa00 	call	4000aa0 <__umodsi3>
 4008fec:	b00b883a 	mov	r5,r22
 4008ff0:	e009883a 	mov	r4,fp
 4008ff4:	102b883a 	mov	r21,r2
 4008ff8:	4000a3c0 	call	4000a3c <__udivsi3>
 4008ffc:	100b883a 	mov	r5,r2
 4009000:	b809883a 	mov	r4,r23
 4009004:	4000af80 	call	4000af8 <__mulsi3>
 4009008:	a82a943a 	slli	r21,r21,16
 400900c:	a006d43a 	srli	r3,r20,16
 4009010:	1d46b03a 	or	r3,r3,r21
 4009014:	1880032e 	bgeu	r3,r2,4009024 <__umoddi3+0xe0>
 4009018:	1cc7883a 	add	r3,r3,r19
 400901c:	1cc00136 	bltu	r3,r19,4009024 <__umoddi3+0xe0>
 4009020:	18813136 	bltu	r3,r2,40094e8 <__umoddi3+0x5a4>
 4009024:	18a1c83a 	sub	r16,r3,r2
 4009028:	b00b883a 	mov	r5,r22
 400902c:	8009883a 	mov	r4,r16
 4009030:	4000aa00 	call	4000aa0 <__umodsi3>
 4009034:	b00b883a 	mov	r5,r22
 4009038:	8009883a 	mov	r4,r16
 400903c:	1023883a 	mov	r17,r2
 4009040:	4000a3c0 	call	4000a3c <__udivsi3>
 4009044:	100b883a 	mov	r5,r2
 4009048:	b809883a 	mov	r4,r23
 400904c:	8822943a 	slli	r17,r17,16
 4009050:	4000af80 	call	4000af8 <__mulsi3>
 4009054:	a0ffffcc 	andi	r3,r20,65535
 4009058:	1c46b03a 	or	r3,r3,r17
 400905c:	1880042e 	bgeu	r3,r2,4009070 <__umoddi3+0x12c>
 4009060:	1cc7883a 	add	r3,r3,r19
 4009064:	1cc00236 	bltu	r3,r19,4009070 <__umoddi3+0x12c>
 4009068:	1880012e 	bgeu	r3,r2,4009070 <__umoddi3+0x12c>
 400906c:	1cc7883a 	add	r3,r3,r19
 4009070:	1885c83a 	sub	r2,r3,r2
 4009074:	1484d83a 	srl	r2,r2,r18
 4009078:	0007883a 	mov	r3,zero
 400907c:	00005306 	br	40091cc <__umoddi3+0x288>
 4009080:	29c05036 	bltu	r5,r7,40091c4 <__umoddi3+0x280>
 4009084:	00bfffd4 	movui	r2,65535
 4009088:	11c05c2e 	bgeu	r2,r7,40091fc <__umoddi3+0x2b8>
 400908c:	00804034 	movhi	r2,256
 4009090:	10bfffc4 	addi	r2,r2,-1
 4009094:	11c10636 	bltu	r2,r7,40094b0 <__umoddi3+0x56c>
 4009098:	01000404 	movi	r4,16
 400909c:	3904d83a 	srl	r2,r7,r4
 40090a0:	00c10074 	movhi	r3,1025
 40090a4:	18f8e204 	addi	r3,r3,-7288
 40090a8:	1885883a 	add	r2,r3,r2
 40090ac:	14c00003 	ldbu	r19,0(r2)
 40090b0:	00c00804 	movi	r3,32
 40090b4:	9927883a 	add	r19,r19,r4
 40090b8:	1ce9c83a 	sub	r20,r3,r19
 40090bc:	a0005c1e 	bne	r20,zero,4009230 <__umoddi3+0x2ec>
 40090c0:	3c400136 	bltu	r7,r17,40090c8 <__umoddi3+0x184>
 40090c4:	81810a36 	bltu	r16,r6,40094f0 <__umoddi3+0x5ac>
 40090c8:	8185c83a 	sub	r2,r16,r6
 40090cc:	89e3c83a 	sub	r17,r17,r7
 40090d0:	8089803a 	cmpltu	r4,r16,r2
 40090d4:	8939c83a 	sub	fp,r17,r4
 40090d8:	e007883a 	mov	r3,fp
 40090dc:	00003b06 	br	40091cc <__umoddi3+0x288>
 40090e0:	3000041e 	bne	r6,zero,40090f4 <__umoddi3+0x1b0>
 40090e4:	000b883a 	mov	r5,zero
 40090e8:	01000044 	movi	r4,1
 40090ec:	4000a3c0 	call	4000a3c <__udivsi3>
 40090f0:	1027883a 	mov	r19,r2
 40090f4:	00bfffd4 	movui	r2,65535
 40090f8:	14c0442e 	bgeu	r2,r19,400920c <__umoddi3+0x2c8>
 40090fc:	00804034 	movhi	r2,256
 4009100:	10bfffc4 	addi	r2,r2,-1
 4009104:	14c0ec36 	bltu	r2,r19,40094b8 <__umoddi3+0x574>
 4009108:	00800404 	movi	r2,16
 400910c:	9886d83a 	srl	r3,r19,r2
 4009110:	01010074 	movhi	r4,1025
 4009114:	2138e204 	addi	r4,r4,-7288
 4009118:	20c7883a 	add	r3,r4,r3
 400911c:	18c00003 	ldbu	r3,0(r3)
 4009120:	1887883a 	add	r3,r3,r2
 4009124:	00800804 	movi	r2,32
 4009128:	10e5c83a 	sub	r18,r2,r3
 400912c:	9000ab1e 	bne	r18,zero,40093dc <__umoddi3+0x498>
 4009130:	982cd43a 	srli	r22,r19,16
 4009134:	8ce3c83a 	sub	r17,r17,r19
 4009138:	9dffffcc 	andi	r23,r19,65535
 400913c:	b00b883a 	mov	r5,r22
 4009140:	8809883a 	mov	r4,r17
 4009144:	4000aa00 	call	4000aa0 <__umodsi3>
 4009148:	b00b883a 	mov	r5,r22
 400914c:	8809883a 	mov	r4,r17
 4009150:	102b883a 	mov	r21,r2
 4009154:	4000a3c0 	call	4000a3c <__udivsi3>
 4009158:	b80b883a 	mov	r5,r23
 400915c:	1009883a 	mov	r4,r2
 4009160:	4000af80 	call	4000af8 <__mulsi3>
 4009164:	a82a943a 	slli	r21,r21,16
 4009168:	a006d43a 	srli	r3,r20,16
 400916c:	1d46b03a 	or	r3,r3,r21
 4009170:	1880042e 	bgeu	r3,r2,4009184 <__umoddi3+0x240>
 4009174:	1cc7883a 	add	r3,r3,r19
 4009178:	1cc00236 	bltu	r3,r19,4009184 <__umoddi3+0x240>
 400917c:	1880012e 	bgeu	r3,r2,4009184 <__umoddi3+0x240>
 4009180:	1cc7883a 	add	r3,r3,r19
 4009184:	18a1c83a 	sub	r16,r3,r2
 4009188:	b00b883a 	mov	r5,r22
 400918c:	8009883a 	mov	r4,r16
 4009190:	4000aa00 	call	4000aa0 <__umodsi3>
 4009194:	1023883a 	mov	r17,r2
 4009198:	b00b883a 	mov	r5,r22
 400919c:	8009883a 	mov	r4,r16
 40091a0:	4000a3c0 	call	4000a3c <__udivsi3>
 40091a4:	8822943a 	slli	r17,r17,16
 40091a8:	b80b883a 	mov	r5,r23
 40091ac:	1009883a 	mov	r4,r2
 40091b0:	4000af80 	call	4000af8 <__mulsi3>
 40091b4:	a53fffcc 	andi	r20,r20,65535
 40091b8:	a446b03a 	or	r3,r20,r17
 40091bc:	18bfac2e 	bgeu	r3,r2,4009070 <__alt_mem_onchip_memory2_0+0xfc003eb0>
 40091c0:	003fa706 	br	4009060 <__alt_mem_onchip_memory2_0+0xfc003ea0>
 40091c4:	2005883a 	mov	r2,r4
 40091c8:	2807883a 	mov	r3,r5
 40091cc:	dfc00c17 	ldw	ra,48(sp)
 40091d0:	df000b17 	ldw	fp,44(sp)
 40091d4:	ddc00a17 	ldw	r23,40(sp)
 40091d8:	dd800917 	ldw	r22,36(sp)
 40091dc:	dd400817 	ldw	r21,32(sp)
 40091e0:	dd000717 	ldw	r20,28(sp)
 40091e4:	dcc00617 	ldw	r19,24(sp)
 40091e8:	dc800517 	ldw	r18,20(sp)
 40091ec:	dc400417 	ldw	r17,16(sp)
 40091f0:	dc000317 	ldw	r16,12(sp)
 40091f4:	dec00d04 	addi	sp,sp,52
 40091f8:	f800283a 	ret
 40091fc:	04c03fc4 	movi	r19,255
 4009200:	99c9803a 	cmpltu	r4,r19,r7
 4009204:	200890fa 	slli	r4,r4,3
 4009208:	003fa406 	br	400909c <__alt_mem_onchip_memory2_0+0xfc003edc>
 400920c:	00803fc4 	movi	r2,255
 4009210:	14c5803a 	cmpltu	r2,r2,r19
 4009214:	100490fa 	slli	r2,r2,3
 4009218:	003fbc06 	br	400910c <__alt_mem_onchip_memory2_0+0xfc003f4c>
 400921c:	00804034 	movhi	r2,256
 4009220:	10bfffc4 	addi	r2,r2,-1
 4009224:	1180a636 	bltu	r2,r6,40094c0 <__umoddi3+0x57c>
 4009228:	01000404 	movi	r4,16
 400922c:	003f5c06 	br	4008fa0 <__alt_mem_onchip_memory2_0+0xfc003de0>
 4009230:	3d0e983a 	sll	r7,r7,r20
 4009234:	34ead83a 	srl	r21,r6,r19
 4009238:	8cc6d83a 	srl	r3,r17,r19
 400923c:	8d10983a 	sll	r8,r17,r20
 4009240:	3d6ab03a 	or	r21,r7,r21
 4009244:	a82cd43a 	srli	r22,r21,16
 4009248:	84e2d83a 	srl	r17,r16,r19
 400924c:	1809883a 	mov	r4,r3
 4009250:	b00b883a 	mov	r5,r22
 4009254:	8a22b03a 	or	r17,r17,r8
 4009258:	3524983a 	sll	r18,r6,r20
 400925c:	dc400015 	stw	r17,0(sp)
 4009260:	d8c00115 	stw	r3,4(sp)
 4009264:	4000aa00 	call	4000aa0 <__umodsi3>
 4009268:	d8c00117 	ldw	r3,4(sp)
 400926c:	b00b883a 	mov	r5,r22
 4009270:	1039883a 	mov	fp,r2
 4009274:	1809883a 	mov	r4,r3
 4009278:	4000a3c0 	call	4000a3c <__udivsi3>
 400927c:	adffffcc 	andi	r23,r21,65535
 4009280:	100b883a 	mov	r5,r2
 4009284:	b809883a 	mov	r4,r23
 4009288:	1023883a 	mov	r17,r2
 400928c:	4000af80 	call	4000af8 <__mulsi3>
 4009290:	d9400017 	ldw	r5,0(sp)
 4009294:	e008943a 	slli	r4,fp,16
 4009298:	8520983a 	sll	r16,r16,r20
 400929c:	2806d43a 	srli	r3,r5,16
 40092a0:	1906b03a 	or	r3,r3,r4
 40092a4:	1880042e 	bgeu	r3,r2,40092b8 <__umoddi3+0x374>
 40092a8:	1d47883a 	add	r3,r3,r21
 40092ac:	893fffc4 	addi	r4,r17,-1
 40092b0:	1d40892e 	bgeu	r3,r21,40094d8 <__umoddi3+0x594>
 40092b4:	2023883a 	mov	r17,r4
 40092b8:	18b9c83a 	sub	fp,r3,r2
 40092bc:	b00b883a 	mov	r5,r22
 40092c0:	e009883a 	mov	r4,fp
 40092c4:	4000aa00 	call	4000aa0 <__umodsi3>
 40092c8:	b00b883a 	mov	r5,r22
 40092cc:	e009883a 	mov	r4,fp
 40092d0:	d8800215 	stw	r2,8(sp)
 40092d4:	4000a3c0 	call	4000a3c <__udivsi3>
 40092d8:	100b883a 	mov	r5,r2
 40092dc:	b809883a 	mov	r4,r23
 40092e0:	102d883a 	mov	r22,r2
 40092e4:	4000af80 	call	4000af8 <__mulsi3>
 40092e8:	d9800217 	ldw	r6,8(sp)
 40092ec:	d8c00017 	ldw	r3,0(sp)
 40092f0:	300c943a 	slli	r6,r6,16
 40092f4:	1a3fffcc 	andi	r8,r3,65535
 40092f8:	4190b03a 	or	r8,r8,r6
 40092fc:	4080042e 	bgeu	r8,r2,4009310 <__umoddi3+0x3cc>
 4009300:	4551883a 	add	r8,r8,r21
 4009304:	b0ffffc4 	addi	r3,r22,-1
 4009308:	45406f2e 	bgeu	r8,r21,40094c8 <__umoddi3+0x584>
 400930c:	182d883a 	mov	r22,r3
 4009310:	880e943a 	slli	r7,r17,16
 4009314:	9006d43a 	srli	r3,r18,16
 4009318:	91bfffcc 	andi	r6,r18,65535
 400931c:	3dacb03a 	or	r22,r7,r22
 4009320:	b02ed43a 	srli	r23,r22,16
 4009324:	b5bfffcc 	andi	r22,r22,65535
 4009328:	300b883a 	mov	r5,r6
 400932c:	b009883a 	mov	r4,r22
 4009330:	40a3c83a 	sub	r17,r8,r2
 4009334:	d8c00115 	stw	r3,4(sp)
 4009338:	d9800215 	stw	r6,8(sp)
 400933c:	4000af80 	call	4000af8 <__mulsi3>
 4009340:	d9800217 	ldw	r6,8(sp)
 4009344:	b809883a 	mov	r4,r23
 4009348:	1039883a 	mov	fp,r2
 400934c:	300b883a 	mov	r5,r6
 4009350:	4000af80 	call	4000af8 <__mulsi3>
 4009354:	d8c00117 	ldw	r3,4(sp)
 4009358:	b809883a 	mov	r4,r23
 400935c:	d8800215 	stw	r2,8(sp)
 4009360:	180b883a 	mov	r5,r3
 4009364:	4000af80 	call	4000af8 <__mulsi3>
 4009368:	d8c00117 	ldw	r3,4(sp)
 400936c:	b009883a 	mov	r4,r22
 4009370:	102f883a 	mov	r23,r2
 4009374:	180b883a 	mov	r5,r3
 4009378:	4000af80 	call	4000af8 <__mulsi3>
 400937c:	d9800217 	ldw	r6,8(sp)
 4009380:	e006d43a 	srli	r3,fp,16
 4009384:	1185883a 	add	r2,r2,r6
 4009388:	1885883a 	add	r2,r3,r2
 400938c:	1180022e 	bgeu	r2,r6,4009398 <__umoddi3+0x454>
 4009390:	00c00074 	movhi	r3,1
 4009394:	b8ef883a 	add	r23,r23,r3
 4009398:	1006d43a 	srli	r3,r2,16
 400939c:	1004943a 	slli	r2,r2,16
 40093a0:	e73fffcc 	andi	fp,fp,65535
 40093a4:	1dc7883a 	add	r3,r3,r23
 40093a8:	1739883a 	add	fp,r2,fp
 40093ac:	88c03a36 	bltu	r17,r3,4009498 <__umoddi3+0x554>
 40093b0:	88c05126 	beq	r17,r3,40094f8 <__umoddi3+0x5b4>
 40093b4:	88c9c83a 	sub	r4,r17,r3
 40093b8:	e00f883a 	mov	r7,fp
 40093bc:	81cfc83a 	sub	r7,r16,r7
 40093c0:	81c7803a 	cmpltu	r3,r16,r7
 40093c4:	20c7c83a 	sub	r3,r4,r3
 40093c8:	1cc4983a 	sll	r2,r3,r19
 40093cc:	3d0ed83a 	srl	r7,r7,r20
 40093d0:	1d06d83a 	srl	r3,r3,r20
 40093d4:	11c4b03a 	or	r2,r2,r7
 40093d8:	003f7c06 	br	40091cc <__alt_mem_onchip_memory2_0+0xfc00400c>
 40093dc:	9ca6983a 	sll	r19,r19,r18
 40093e0:	88f8d83a 	srl	fp,r17,r3
 40093e4:	80c4d83a 	srl	r2,r16,r3
 40093e8:	982cd43a 	srli	r22,r19,16
 40093ec:	8ca2983a 	sll	r17,r17,r18
 40093f0:	e009883a 	mov	r4,fp
 40093f4:	b00b883a 	mov	r5,r22
 40093f8:	146ab03a 	or	r21,r2,r17
 40093fc:	4000aa00 	call	4000aa0 <__umodsi3>
 4009400:	b00b883a 	mov	r5,r22
 4009404:	e009883a 	mov	r4,fp
 4009408:	1029883a 	mov	r20,r2
 400940c:	9dffffcc 	andi	r23,r19,65535
 4009410:	4000a3c0 	call	4000a3c <__udivsi3>
 4009414:	b809883a 	mov	r4,r23
 4009418:	100b883a 	mov	r5,r2
 400941c:	4000af80 	call	4000af8 <__mulsi3>
 4009420:	a008943a 	slli	r4,r20,16
 4009424:	a806d43a 	srli	r3,r21,16
 4009428:	84a8983a 	sll	r20,r16,r18
 400942c:	1906b03a 	or	r3,r3,r4
 4009430:	1880042e 	bgeu	r3,r2,4009444 <__umoddi3+0x500>
 4009434:	1cc7883a 	add	r3,r3,r19
 4009438:	1cc00236 	bltu	r3,r19,4009444 <__umoddi3+0x500>
 400943c:	1880012e 	bgeu	r3,r2,4009444 <__umoddi3+0x500>
 4009440:	1cc7883a 	add	r3,r3,r19
 4009444:	18a3c83a 	sub	r17,r3,r2
 4009448:	b00b883a 	mov	r5,r22
 400944c:	8809883a 	mov	r4,r17
 4009450:	4000aa00 	call	4000aa0 <__umodsi3>
 4009454:	b00b883a 	mov	r5,r22
 4009458:	8809883a 	mov	r4,r17
 400945c:	1021883a 	mov	r16,r2
 4009460:	4000a3c0 	call	4000a3c <__udivsi3>
 4009464:	100b883a 	mov	r5,r2
 4009468:	b809883a 	mov	r4,r23
 400946c:	8020943a 	slli	r16,r16,16
 4009470:	4000af80 	call	4000af8 <__mulsi3>
 4009474:	a8ffffcc 	andi	r3,r21,65535
 4009478:	1c06b03a 	or	r3,r3,r16
 400947c:	1880042e 	bgeu	r3,r2,4009490 <__umoddi3+0x54c>
 4009480:	1cc7883a 	add	r3,r3,r19
 4009484:	1cc00236 	bltu	r3,r19,4009490 <__umoddi3+0x54c>
 4009488:	1880012e 	bgeu	r3,r2,4009490 <__umoddi3+0x54c>
 400948c:	1cc7883a 	add	r3,r3,r19
 4009490:	18a3c83a 	sub	r17,r3,r2
 4009494:	003f2906 	br	400913c <__alt_mem_onchip_memory2_0+0xfc003f7c>
 4009498:	e48fc83a 	sub	r7,fp,r18
 400949c:	1d49c83a 	sub	r4,r3,r21
 40094a0:	e1f9803a 	cmpltu	fp,fp,r7
 40094a4:	2739c83a 	sub	fp,r4,fp
 40094a8:	8f09c83a 	sub	r4,r17,fp
 40094ac:	003fc306 	br	40093bc <__alt_mem_onchip_memory2_0+0xfc0041fc>
 40094b0:	01000604 	movi	r4,24
 40094b4:	003ef906 	br	400909c <__alt_mem_onchip_memory2_0+0xfc003edc>
 40094b8:	00800604 	movi	r2,24
 40094bc:	003f1306 	br	400910c <__alt_mem_onchip_memory2_0+0xfc003f4c>
 40094c0:	01000604 	movi	r4,24
 40094c4:	003eb606 	br	4008fa0 <__alt_mem_onchip_memory2_0+0xfc003de0>
 40094c8:	40bf902e 	bgeu	r8,r2,400930c <__alt_mem_onchip_memory2_0+0xfc00414c>
 40094cc:	b5bfff84 	addi	r22,r22,-2
 40094d0:	4551883a 	add	r8,r8,r21
 40094d4:	003f8e06 	br	4009310 <__alt_mem_onchip_memory2_0+0xfc004150>
 40094d8:	18bf762e 	bgeu	r3,r2,40092b4 <__alt_mem_onchip_memory2_0+0xfc0040f4>
 40094dc:	8c7fff84 	addi	r17,r17,-2
 40094e0:	1d47883a 	add	r3,r3,r21
 40094e4:	003f7406 	br	40092b8 <__alt_mem_onchip_memory2_0+0xfc0040f8>
 40094e8:	1cc7883a 	add	r3,r3,r19
 40094ec:	003ecd06 	br	4009024 <__alt_mem_onchip_memory2_0+0xfc003e64>
 40094f0:	8005883a 	mov	r2,r16
 40094f4:	003ef806 	br	40090d8 <__alt_mem_onchip_memory2_0+0xfc003f18>
 40094f8:	873fe736 	bltu	r16,fp,4009498 <__alt_mem_onchip_memory2_0+0xfc0042d8>
 40094fc:	e00f883a 	mov	r7,fp
 4009500:	0009883a 	mov	r4,zero
 4009504:	003fad06 	br	40093bc <__alt_mem_onchip_memory2_0+0xfc0041fc>

04009508 <__adddf3>:
 4009508:	02c00434 	movhi	r11,16
 400950c:	5affffc4 	addi	r11,r11,-1
 4009510:	2806d7fa 	srli	r3,r5,31
 4009514:	2ad4703a 	and	r10,r5,r11
 4009518:	3ad2703a 	and	r9,r7,r11
 400951c:	3804d53a 	srli	r2,r7,20
 4009520:	3018d77a 	srli	r12,r6,29
 4009524:	280ad53a 	srli	r5,r5,20
 4009528:	501490fa 	slli	r10,r10,3
 400952c:	2010d77a 	srli	r8,r4,29
 4009530:	481290fa 	slli	r9,r9,3
 4009534:	380ed7fa 	srli	r7,r7,31
 4009538:	defffb04 	addi	sp,sp,-20
 400953c:	dc800215 	stw	r18,8(sp)
 4009540:	dc400115 	stw	r17,4(sp)
 4009544:	dc000015 	stw	r16,0(sp)
 4009548:	dfc00415 	stw	ra,16(sp)
 400954c:	dcc00315 	stw	r19,12(sp)
 4009550:	1c803fcc 	andi	r18,r3,255
 4009554:	2c01ffcc 	andi	r16,r5,2047
 4009558:	5210b03a 	or	r8,r10,r8
 400955c:	202290fa 	slli	r17,r4,3
 4009560:	1081ffcc 	andi	r2,r2,2047
 4009564:	4b12b03a 	or	r9,r9,r12
 4009568:	300c90fa 	slli	r6,r6,3
 400956c:	91c07526 	beq	r18,r7,4009744 <__adddf3+0x23c>
 4009570:	8087c83a 	sub	r3,r16,r2
 4009574:	00c0ab0e 	bge	zero,r3,4009824 <__adddf3+0x31c>
 4009578:	10002a1e 	bne	r2,zero,4009624 <__adddf3+0x11c>
 400957c:	4984b03a 	or	r2,r9,r6
 4009580:	1000961e 	bne	r2,zero,40097dc <__adddf3+0x2d4>
 4009584:	888001cc 	andi	r2,r17,7
 4009588:	10000726 	beq	r2,zero,40095a8 <__adddf3+0xa0>
 400958c:	888003cc 	andi	r2,r17,15
 4009590:	00c00104 	movi	r3,4
 4009594:	10c00426 	beq	r2,r3,40095a8 <__adddf3+0xa0>
 4009598:	88c7883a 	add	r3,r17,r3
 400959c:	1c63803a 	cmpltu	r17,r3,r17
 40095a0:	4451883a 	add	r8,r8,r17
 40095a4:	1823883a 	mov	r17,r3
 40095a8:	4080202c 	andhi	r2,r8,128
 40095ac:	10005926 	beq	r2,zero,4009714 <__adddf3+0x20c>
 40095b0:	84000044 	addi	r16,r16,1
 40095b4:	0081ffc4 	movi	r2,2047
 40095b8:	8080ba26 	beq	r16,r2,40098a4 <__adddf3+0x39c>
 40095bc:	00bfe034 	movhi	r2,65408
 40095c0:	10bfffc4 	addi	r2,r2,-1
 40095c4:	4090703a 	and	r8,r8,r2
 40095c8:	4004977a 	slli	r2,r8,29
 40095cc:	4010927a 	slli	r8,r8,9
 40095d0:	8822d0fa 	srli	r17,r17,3
 40095d4:	8401ffcc 	andi	r16,r16,2047
 40095d8:	4010d33a 	srli	r8,r8,12
 40095dc:	9007883a 	mov	r3,r18
 40095e0:	1444b03a 	or	r2,r2,r17
 40095e4:	8401ffcc 	andi	r16,r16,2047
 40095e8:	8020953a 	slli	r16,r16,20
 40095ec:	18c03fcc 	andi	r3,r3,255
 40095f0:	01000434 	movhi	r4,16
 40095f4:	213fffc4 	addi	r4,r4,-1
 40095f8:	180697fa 	slli	r3,r3,31
 40095fc:	4110703a 	and	r8,r8,r4
 4009600:	4410b03a 	or	r8,r8,r16
 4009604:	40c6b03a 	or	r3,r8,r3
 4009608:	dfc00417 	ldw	ra,16(sp)
 400960c:	dcc00317 	ldw	r19,12(sp)
 4009610:	dc800217 	ldw	r18,8(sp)
 4009614:	dc400117 	ldw	r17,4(sp)
 4009618:	dc000017 	ldw	r16,0(sp)
 400961c:	dec00504 	addi	sp,sp,20
 4009620:	f800283a 	ret
 4009624:	0081ffc4 	movi	r2,2047
 4009628:	80bfd626 	beq	r16,r2,4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 400962c:	4a402034 	orhi	r9,r9,128
 4009630:	00800e04 	movi	r2,56
 4009634:	10c09f16 	blt	r2,r3,40098b4 <__adddf3+0x3ac>
 4009638:	008007c4 	movi	r2,31
 400963c:	10c0c216 	blt	r2,r3,4009948 <__adddf3+0x440>
 4009640:	00800804 	movi	r2,32
 4009644:	10c5c83a 	sub	r2,r2,r3
 4009648:	488a983a 	sll	r5,r9,r2
 400964c:	30c8d83a 	srl	r4,r6,r3
 4009650:	3084983a 	sll	r2,r6,r2
 4009654:	48c6d83a 	srl	r3,r9,r3
 4009658:	290cb03a 	or	r6,r5,r4
 400965c:	1004c03a 	cmpne	r2,r2,zero
 4009660:	308cb03a 	or	r6,r6,r2
 4009664:	898dc83a 	sub	r6,r17,r6
 4009668:	89a3803a 	cmpltu	r17,r17,r6
 400966c:	40d1c83a 	sub	r8,r8,r3
 4009670:	4451c83a 	sub	r8,r8,r17
 4009674:	3023883a 	mov	r17,r6
 4009678:	4080202c 	andhi	r2,r8,128
 400967c:	10002326 	beq	r2,zero,400970c <__adddf3+0x204>
 4009680:	04c02034 	movhi	r19,128
 4009684:	9cffffc4 	addi	r19,r19,-1
 4009688:	44e6703a 	and	r19,r8,r19
 400968c:	98007626 	beq	r19,zero,4009868 <__adddf3+0x360>
 4009690:	9809883a 	mov	r4,r19
 4009694:	400bd480 	call	400bd48 <__clzsi2>
 4009698:	10fffe04 	addi	r3,r2,-8
 400969c:	010007c4 	movi	r4,31
 40096a0:	20c07716 	blt	r4,r3,4009880 <__adddf3+0x378>
 40096a4:	00800804 	movi	r2,32
 40096a8:	10c5c83a 	sub	r2,r2,r3
 40096ac:	8884d83a 	srl	r2,r17,r2
 40096b0:	98d0983a 	sll	r8,r19,r3
 40096b4:	88e2983a 	sll	r17,r17,r3
 40096b8:	1204b03a 	or	r2,r2,r8
 40096bc:	1c007416 	blt	r3,r16,4009890 <__adddf3+0x388>
 40096c0:	1c21c83a 	sub	r16,r3,r16
 40096c4:	82000044 	addi	r8,r16,1
 40096c8:	00c007c4 	movi	r3,31
 40096cc:	1a009116 	blt	r3,r8,4009914 <__adddf3+0x40c>
 40096d0:	00c00804 	movi	r3,32
 40096d4:	1a07c83a 	sub	r3,r3,r8
 40096d8:	8a08d83a 	srl	r4,r17,r8
 40096dc:	88e2983a 	sll	r17,r17,r3
 40096e0:	10c6983a 	sll	r3,r2,r3
 40096e4:	1210d83a 	srl	r8,r2,r8
 40096e8:	8804c03a 	cmpne	r2,r17,zero
 40096ec:	1906b03a 	or	r3,r3,r4
 40096f0:	18a2b03a 	or	r17,r3,r2
 40096f4:	0021883a 	mov	r16,zero
 40096f8:	003fa206 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 40096fc:	1890b03a 	or	r8,r3,r2
 4009700:	40017d26 	beq	r8,zero,4009cf8 <__adddf3+0x7f0>
 4009704:	1011883a 	mov	r8,r2
 4009708:	1823883a 	mov	r17,r3
 400970c:	888001cc 	andi	r2,r17,7
 4009710:	103f9e1e 	bne	r2,zero,400958c <__alt_mem_onchip_memory2_0+0xfc0043cc>
 4009714:	4004977a 	slli	r2,r8,29
 4009718:	8822d0fa 	srli	r17,r17,3
 400971c:	4010d0fa 	srli	r8,r8,3
 4009720:	9007883a 	mov	r3,r18
 4009724:	1444b03a 	or	r2,r2,r17
 4009728:	0101ffc4 	movi	r4,2047
 400972c:	81002426 	beq	r16,r4,40097c0 <__adddf3+0x2b8>
 4009730:	8120703a 	and	r16,r16,r4
 4009734:	01000434 	movhi	r4,16
 4009738:	213fffc4 	addi	r4,r4,-1
 400973c:	4110703a 	and	r8,r8,r4
 4009740:	003fa806 	br	40095e4 <__alt_mem_onchip_memory2_0+0xfc004424>
 4009744:	8089c83a 	sub	r4,r16,r2
 4009748:	01005e0e 	bge	zero,r4,40098c4 <__adddf3+0x3bc>
 400974c:	10002b26 	beq	r2,zero,40097fc <__adddf3+0x2f4>
 4009750:	0081ffc4 	movi	r2,2047
 4009754:	80bf8b26 	beq	r16,r2,4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009758:	4a402034 	orhi	r9,r9,128
 400975c:	00800e04 	movi	r2,56
 4009760:	1100a40e 	bge	r2,r4,40099f4 <__adddf3+0x4ec>
 4009764:	498cb03a 	or	r6,r9,r6
 4009768:	300ac03a 	cmpne	r5,r6,zero
 400976c:	0013883a 	mov	r9,zero
 4009770:	2c4b883a 	add	r5,r5,r17
 4009774:	2c63803a 	cmpltu	r17,r5,r17
 4009778:	4a11883a 	add	r8,r9,r8
 400977c:	8a11883a 	add	r8,r17,r8
 4009780:	2823883a 	mov	r17,r5
 4009784:	4080202c 	andhi	r2,r8,128
 4009788:	103fe026 	beq	r2,zero,400970c <__alt_mem_onchip_memory2_0+0xfc00454c>
 400978c:	84000044 	addi	r16,r16,1
 4009790:	0081ffc4 	movi	r2,2047
 4009794:	8080d226 	beq	r16,r2,4009ae0 <__adddf3+0x5d8>
 4009798:	00bfe034 	movhi	r2,65408
 400979c:	10bfffc4 	addi	r2,r2,-1
 40097a0:	4090703a 	and	r8,r8,r2
 40097a4:	880ad07a 	srli	r5,r17,1
 40097a8:	400897fa 	slli	r4,r8,31
 40097ac:	88c0004c 	andi	r3,r17,1
 40097b0:	28e2b03a 	or	r17,r5,r3
 40097b4:	4010d07a 	srli	r8,r8,1
 40097b8:	2462b03a 	or	r17,r4,r17
 40097bc:	003f7106 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 40097c0:	4088b03a 	or	r4,r8,r2
 40097c4:	20014526 	beq	r4,zero,4009cdc <__adddf3+0x7d4>
 40097c8:	01000434 	movhi	r4,16
 40097cc:	42000234 	orhi	r8,r8,8
 40097d0:	213fffc4 	addi	r4,r4,-1
 40097d4:	4110703a 	and	r8,r8,r4
 40097d8:	003f8206 	br	40095e4 <__alt_mem_onchip_memory2_0+0xfc004424>
 40097dc:	18ffffc4 	addi	r3,r3,-1
 40097e0:	1800491e 	bne	r3,zero,4009908 <__adddf3+0x400>
 40097e4:	898bc83a 	sub	r5,r17,r6
 40097e8:	8963803a 	cmpltu	r17,r17,r5
 40097ec:	4251c83a 	sub	r8,r8,r9
 40097f0:	4451c83a 	sub	r8,r8,r17
 40097f4:	2823883a 	mov	r17,r5
 40097f8:	003f9f06 	br	4009678 <__alt_mem_onchip_memory2_0+0xfc0044b8>
 40097fc:	4984b03a 	or	r2,r9,r6
 4009800:	103f6026 	beq	r2,zero,4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009804:	213fffc4 	addi	r4,r4,-1
 4009808:	2000931e 	bne	r4,zero,4009a58 <__adddf3+0x550>
 400980c:	898d883a 	add	r6,r17,r6
 4009810:	3463803a 	cmpltu	r17,r6,r17
 4009814:	4251883a 	add	r8,r8,r9
 4009818:	8a11883a 	add	r8,r17,r8
 400981c:	3023883a 	mov	r17,r6
 4009820:	003fd806 	br	4009784 <__alt_mem_onchip_memory2_0+0xfc0045c4>
 4009824:	1800541e 	bne	r3,zero,4009978 <__adddf3+0x470>
 4009828:	80800044 	addi	r2,r16,1
 400982c:	1081ffcc 	andi	r2,r2,2047
 4009830:	00c00044 	movi	r3,1
 4009834:	1880a00e 	bge	r3,r2,4009ab8 <__adddf3+0x5b0>
 4009838:	8989c83a 	sub	r4,r17,r6
 400983c:	8905803a 	cmpltu	r2,r17,r4
 4009840:	4267c83a 	sub	r19,r8,r9
 4009844:	98a7c83a 	sub	r19,r19,r2
 4009848:	9880202c 	andhi	r2,r19,128
 400984c:	10006326 	beq	r2,zero,40099dc <__adddf3+0x4d4>
 4009850:	3463c83a 	sub	r17,r6,r17
 4009854:	4a07c83a 	sub	r3,r9,r8
 4009858:	344d803a 	cmpltu	r6,r6,r17
 400985c:	19a7c83a 	sub	r19,r3,r6
 4009860:	3825883a 	mov	r18,r7
 4009864:	983f8a1e 	bne	r19,zero,4009690 <__alt_mem_onchip_memory2_0+0xfc0044d0>
 4009868:	8809883a 	mov	r4,r17
 400986c:	400bd480 	call	400bd48 <__clzsi2>
 4009870:	10800804 	addi	r2,r2,32
 4009874:	10fffe04 	addi	r3,r2,-8
 4009878:	010007c4 	movi	r4,31
 400987c:	20ff890e 	bge	r4,r3,40096a4 <__alt_mem_onchip_memory2_0+0xfc0044e4>
 4009880:	10bff604 	addi	r2,r2,-40
 4009884:	8884983a 	sll	r2,r17,r2
 4009888:	0023883a 	mov	r17,zero
 400988c:	1c3f8c0e 	bge	r3,r16,40096c0 <__alt_mem_onchip_memory2_0+0xfc004500>
 4009890:	023fe034 	movhi	r8,65408
 4009894:	423fffc4 	addi	r8,r8,-1
 4009898:	80e1c83a 	sub	r16,r16,r3
 400989c:	1210703a 	and	r8,r2,r8
 40098a0:	003f3806 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 40098a4:	9007883a 	mov	r3,r18
 40098a8:	0011883a 	mov	r8,zero
 40098ac:	0005883a 	mov	r2,zero
 40098b0:	003f4c06 	br	40095e4 <__alt_mem_onchip_memory2_0+0xfc004424>
 40098b4:	498cb03a 	or	r6,r9,r6
 40098b8:	300cc03a 	cmpne	r6,r6,zero
 40098bc:	0007883a 	mov	r3,zero
 40098c0:	003f6806 	br	4009664 <__alt_mem_onchip_memory2_0+0xfc0044a4>
 40098c4:	20009c1e 	bne	r4,zero,4009b38 <__adddf3+0x630>
 40098c8:	80800044 	addi	r2,r16,1
 40098cc:	1141ffcc 	andi	r5,r2,2047
 40098d0:	01000044 	movi	r4,1
 40098d4:	2140670e 	bge	r4,r5,4009a74 <__adddf3+0x56c>
 40098d8:	0101ffc4 	movi	r4,2047
 40098dc:	11007f26 	beq	r2,r4,4009adc <__adddf3+0x5d4>
 40098e0:	898d883a 	add	r6,r17,r6
 40098e4:	4247883a 	add	r3,r8,r9
 40098e8:	3451803a 	cmpltu	r8,r6,r17
 40098ec:	40d1883a 	add	r8,r8,r3
 40098f0:	402297fa 	slli	r17,r8,31
 40098f4:	300cd07a 	srli	r6,r6,1
 40098f8:	4010d07a 	srli	r8,r8,1
 40098fc:	1021883a 	mov	r16,r2
 4009900:	89a2b03a 	or	r17,r17,r6
 4009904:	003f1f06 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009908:	0081ffc4 	movi	r2,2047
 400990c:	80bf481e 	bne	r16,r2,4009630 <__alt_mem_onchip_memory2_0+0xfc004470>
 4009910:	003f1c06 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009914:	843ff844 	addi	r16,r16,-31
 4009918:	01000804 	movi	r4,32
 400991c:	1406d83a 	srl	r3,r2,r16
 4009920:	41005026 	beq	r8,r4,4009a64 <__adddf3+0x55c>
 4009924:	01001004 	movi	r4,64
 4009928:	2211c83a 	sub	r8,r4,r8
 400992c:	1204983a 	sll	r2,r2,r8
 4009930:	88a2b03a 	or	r17,r17,r2
 4009934:	8822c03a 	cmpne	r17,r17,zero
 4009938:	1c62b03a 	or	r17,r3,r17
 400993c:	0011883a 	mov	r8,zero
 4009940:	0021883a 	mov	r16,zero
 4009944:	003f7106 	br	400970c <__alt_mem_onchip_memory2_0+0xfc00454c>
 4009948:	193ff804 	addi	r4,r3,-32
 400994c:	00800804 	movi	r2,32
 4009950:	4908d83a 	srl	r4,r9,r4
 4009954:	18804526 	beq	r3,r2,4009a6c <__adddf3+0x564>
 4009958:	00801004 	movi	r2,64
 400995c:	10c5c83a 	sub	r2,r2,r3
 4009960:	4886983a 	sll	r3,r9,r2
 4009964:	198cb03a 	or	r6,r3,r6
 4009968:	300cc03a 	cmpne	r6,r6,zero
 400996c:	218cb03a 	or	r6,r4,r6
 4009970:	0007883a 	mov	r3,zero
 4009974:	003f3b06 	br	4009664 <__alt_mem_onchip_memory2_0+0xfc0044a4>
 4009978:	80002a26 	beq	r16,zero,4009a24 <__adddf3+0x51c>
 400997c:	0101ffc4 	movi	r4,2047
 4009980:	11006826 	beq	r2,r4,4009b24 <__adddf3+0x61c>
 4009984:	00c7c83a 	sub	r3,zero,r3
 4009988:	42002034 	orhi	r8,r8,128
 400998c:	01000e04 	movi	r4,56
 4009990:	20c07c16 	blt	r4,r3,4009b84 <__adddf3+0x67c>
 4009994:	010007c4 	movi	r4,31
 4009998:	20c0da16 	blt	r4,r3,4009d04 <__adddf3+0x7fc>
 400999c:	01000804 	movi	r4,32
 40099a0:	20c9c83a 	sub	r4,r4,r3
 40099a4:	4114983a 	sll	r10,r8,r4
 40099a8:	88cad83a 	srl	r5,r17,r3
 40099ac:	8908983a 	sll	r4,r17,r4
 40099b0:	40c6d83a 	srl	r3,r8,r3
 40099b4:	5162b03a 	or	r17,r10,r5
 40099b8:	2008c03a 	cmpne	r4,r4,zero
 40099bc:	8922b03a 	or	r17,r17,r4
 40099c0:	3463c83a 	sub	r17,r6,r17
 40099c4:	48c7c83a 	sub	r3,r9,r3
 40099c8:	344d803a 	cmpltu	r6,r6,r17
 40099cc:	1991c83a 	sub	r8,r3,r6
 40099d0:	1021883a 	mov	r16,r2
 40099d4:	3825883a 	mov	r18,r7
 40099d8:	003f2706 	br	4009678 <__alt_mem_onchip_memory2_0+0xfc0044b8>
 40099dc:	24d0b03a 	or	r8,r4,r19
 40099e0:	40001b1e 	bne	r8,zero,4009a50 <__adddf3+0x548>
 40099e4:	0005883a 	mov	r2,zero
 40099e8:	0007883a 	mov	r3,zero
 40099ec:	0021883a 	mov	r16,zero
 40099f0:	003f4d06 	br	4009728 <__alt_mem_onchip_memory2_0+0xfc004568>
 40099f4:	008007c4 	movi	r2,31
 40099f8:	11003c16 	blt	r2,r4,4009aec <__adddf3+0x5e4>
 40099fc:	00800804 	movi	r2,32
 4009a00:	1105c83a 	sub	r2,r2,r4
 4009a04:	488e983a 	sll	r7,r9,r2
 4009a08:	310ad83a 	srl	r5,r6,r4
 4009a0c:	3084983a 	sll	r2,r6,r2
 4009a10:	4912d83a 	srl	r9,r9,r4
 4009a14:	394ab03a 	or	r5,r7,r5
 4009a18:	1004c03a 	cmpne	r2,r2,zero
 4009a1c:	288ab03a 	or	r5,r5,r2
 4009a20:	003f5306 	br	4009770 <__alt_mem_onchip_memory2_0+0xfc0045b0>
 4009a24:	4448b03a 	or	r4,r8,r17
 4009a28:	20003e26 	beq	r4,zero,4009b24 <__adddf3+0x61c>
 4009a2c:	00c6303a 	nor	r3,zero,r3
 4009a30:	18003a1e 	bne	r3,zero,4009b1c <__adddf3+0x614>
 4009a34:	3463c83a 	sub	r17,r6,r17
 4009a38:	4a07c83a 	sub	r3,r9,r8
 4009a3c:	344d803a 	cmpltu	r6,r6,r17
 4009a40:	1991c83a 	sub	r8,r3,r6
 4009a44:	1021883a 	mov	r16,r2
 4009a48:	3825883a 	mov	r18,r7
 4009a4c:	003f0a06 	br	4009678 <__alt_mem_onchip_memory2_0+0xfc0044b8>
 4009a50:	2023883a 	mov	r17,r4
 4009a54:	003f0d06 	br	400968c <__alt_mem_onchip_memory2_0+0xfc0044cc>
 4009a58:	0081ffc4 	movi	r2,2047
 4009a5c:	80bf3f1e 	bne	r16,r2,400975c <__alt_mem_onchip_memory2_0+0xfc00459c>
 4009a60:	003ec806 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009a64:	0005883a 	mov	r2,zero
 4009a68:	003fb106 	br	4009930 <__alt_mem_onchip_memory2_0+0xfc004770>
 4009a6c:	0007883a 	mov	r3,zero
 4009a70:	003fbc06 	br	4009964 <__alt_mem_onchip_memory2_0+0xfc0047a4>
 4009a74:	4444b03a 	or	r2,r8,r17
 4009a78:	8000871e 	bne	r16,zero,4009c98 <__adddf3+0x790>
 4009a7c:	1000ba26 	beq	r2,zero,4009d68 <__adddf3+0x860>
 4009a80:	4984b03a 	or	r2,r9,r6
 4009a84:	103ebf26 	beq	r2,zero,4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009a88:	8985883a 	add	r2,r17,r6
 4009a8c:	4247883a 	add	r3,r8,r9
 4009a90:	1451803a 	cmpltu	r8,r2,r17
 4009a94:	40d1883a 	add	r8,r8,r3
 4009a98:	40c0202c 	andhi	r3,r8,128
 4009a9c:	1023883a 	mov	r17,r2
 4009aa0:	183f1a26 	beq	r3,zero,400970c <__alt_mem_onchip_memory2_0+0xfc00454c>
 4009aa4:	00bfe034 	movhi	r2,65408
 4009aa8:	10bfffc4 	addi	r2,r2,-1
 4009aac:	2021883a 	mov	r16,r4
 4009ab0:	4090703a 	and	r8,r8,r2
 4009ab4:	003eb306 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009ab8:	4444b03a 	or	r2,r8,r17
 4009abc:	8000291e 	bne	r16,zero,4009b64 <__adddf3+0x65c>
 4009ac0:	10004b1e 	bne	r2,zero,4009bf0 <__adddf3+0x6e8>
 4009ac4:	4990b03a 	or	r8,r9,r6
 4009ac8:	40008b26 	beq	r8,zero,4009cf8 <__adddf3+0x7f0>
 4009acc:	4811883a 	mov	r8,r9
 4009ad0:	3023883a 	mov	r17,r6
 4009ad4:	3825883a 	mov	r18,r7
 4009ad8:	003eaa06 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009adc:	1021883a 	mov	r16,r2
 4009ae0:	0011883a 	mov	r8,zero
 4009ae4:	0005883a 	mov	r2,zero
 4009ae8:	003f0f06 	br	4009728 <__alt_mem_onchip_memory2_0+0xfc004568>
 4009aec:	217ff804 	addi	r5,r4,-32
 4009af0:	00800804 	movi	r2,32
 4009af4:	494ad83a 	srl	r5,r9,r5
 4009af8:	20807d26 	beq	r4,r2,4009cf0 <__adddf3+0x7e8>
 4009afc:	00801004 	movi	r2,64
 4009b00:	1109c83a 	sub	r4,r2,r4
 4009b04:	4912983a 	sll	r9,r9,r4
 4009b08:	498cb03a 	or	r6,r9,r6
 4009b0c:	300cc03a 	cmpne	r6,r6,zero
 4009b10:	298ab03a 	or	r5,r5,r6
 4009b14:	0013883a 	mov	r9,zero
 4009b18:	003f1506 	br	4009770 <__alt_mem_onchip_memory2_0+0xfc0045b0>
 4009b1c:	0101ffc4 	movi	r4,2047
 4009b20:	113f9a1e 	bne	r2,r4,400998c <__alt_mem_onchip_memory2_0+0xfc0047cc>
 4009b24:	4811883a 	mov	r8,r9
 4009b28:	3023883a 	mov	r17,r6
 4009b2c:	1021883a 	mov	r16,r2
 4009b30:	3825883a 	mov	r18,r7
 4009b34:	003e9306 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009b38:	8000161e 	bne	r16,zero,4009b94 <__adddf3+0x68c>
 4009b3c:	444ab03a 	or	r5,r8,r17
 4009b40:	28005126 	beq	r5,zero,4009c88 <__adddf3+0x780>
 4009b44:	0108303a 	nor	r4,zero,r4
 4009b48:	20004d1e 	bne	r4,zero,4009c80 <__adddf3+0x778>
 4009b4c:	89a3883a 	add	r17,r17,r6
 4009b50:	4253883a 	add	r9,r8,r9
 4009b54:	898d803a 	cmpltu	r6,r17,r6
 4009b58:	3251883a 	add	r8,r6,r9
 4009b5c:	1021883a 	mov	r16,r2
 4009b60:	003f0806 	br	4009784 <__alt_mem_onchip_memory2_0+0xfc0045c4>
 4009b64:	1000301e 	bne	r2,zero,4009c28 <__adddf3+0x720>
 4009b68:	4984b03a 	or	r2,r9,r6
 4009b6c:	10007126 	beq	r2,zero,4009d34 <__adddf3+0x82c>
 4009b70:	4811883a 	mov	r8,r9
 4009b74:	3023883a 	mov	r17,r6
 4009b78:	3825883a 	mov	r18,r7
 4009b7c:	0401ffc4 	movi	r16,2047
 4009b80:	003e8006 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009b84:	4462b03a 	or	r17,r8,r17
 4009b88:	8822c03a 	cmpne	r17,r17,zero
 4009b8c:	0007883a 	mov	r3,zero
 4009b90:	003f8b06 	br	40099c0 <__alt_mem_onchip_memory2_0+0xfc004800>
 4009b94:	0141ffc4 	movi	r5,2047
 4009b98:	11403b26 	beq	r2,r5,4009c88 <__adddf3+0x780>
 4009b9c:	0109c83a 	sub	r4,zero,r4
 4009ba0:	42002034 	orhi	r8,r8,128
 4009ba4:	01400e04 	movi	r5,56
 4009ba8:	29006716 	blt	r5,r4,4009d48 <__adddf3+0x840>
 4009bac:	014007c4 	movi	r5,31
 4009bb0:	29007016 	blt	r5,r4,4009d74 <__adddf3+0x86c>
 4009bb4:	01400804 	movi	r5,32
 4009bb8:	290bc83a 	sub	r5,r5,r4
 4009bbc:	4154983a 	sll	r10,r8,r5
 4009bc0:	890ed83a 	srl	r7,r17,r4
 4009bc4:	894a983a 	sll	r5,r17,r5
 4009bc8:	4108d83a 	srl	r4,r8,r4
 4009bcc:	51e2b03a 	or	r17,r10,r7
 4009bd0:	280ac03a 	cmpne	r5,r5,zero
 4009bd4:	8962b03a 	or	r17,r17,r5
 4009bd8:	89a3883a 	add	r17,r17,r6
 4009bdc:	2253883a 	add	r9,r4,r9
 4009be0:	898d803a 	cmpltu	r6,r17,r6
 4009be4:	3251883a 	add	r8,r6,r9
 4009be8:	1021883a 	mov	r16,r2
 4009bec:	003ee506 	br	4009784 <__alt_mem_onchip_memory2_0+0xfc0045c4>
 4009bf0:	4984b03a 	or	r2,r9,r6
 4009bf4:	103e6326 	beq	r2,zero,4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009bf8:	8987c83a 	sub	r3,r17,r6
 4009bfc:	88c9803a 	cmpltu	r4,r17,r3
 4009c00:	4245c83a 	sub	r2,r8,r9
 4009c04:	1105c83a 	sub	r2,r2,r4
 4009c08:	1100202c 	andhi	r4,r2,128
 4009c0c:	203ebb26 	beq	r4,zero,40096fc <__alt_mem_onchip_memory2_0+0xfc00453c>
 4009c10:	3463c83a 	sub	r17,r6,r17
 4009c14:	4a07c83a 	sub	r3,r9,r8
 4009c18:	344d803a 	cmpltu	r6,r6,r17
 4009c1c:	1991c83a 	sub	r8,r3,r6
 4009c20:	3825883a 	mov	r18,r7
 4009c24:	003e5706 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009c28:	4984b03a 	or	r2,r9,r6
 4009c2c:	10002e26 	beq	r2,zero,4009ce8 <__adddf3+0x7e0>
 4009c30:	4004d0fa 	srli	r2,r8,3
 4009c34:	8822d0fa 	srli	r17,r17,3
 4009c38:	4010977a 	slli	r8,r8,29
 4009c3c:	10c0022c 	andhi	r3,r2,8
 4009c40:	4462b03a 	or	r17,r8,r17
 4009c44:	18000826 	beq	r3,zero,4009c68 <__adddf3+0x760>
 4009c48:	4808d0fa 	srli	r4,r9,3
 4009c4c:	20c0022c 	andhi	r3,r4,8
 4009c50:	1800051e 	bne	r3,zero,4009c68 <__adddf3+0x760>
 4009c54:	300cd0fa 	srli	r6,r6,3
 4009c58:	4806977a 	slli	r3,r9,29
 4009c5c:	2005883a 	mov	r2,r4
 4009c60:	3825883a 	mov	r18,r7
 4009c64:	19a2b03a 	or	r17,r3,r6
 4009c68:	8810d77a 	srli	r8,r17,29
 4009c6c:	100490fa 	slli	r2,r2,3
 4009c70:	882290fa 	slli	r17,r17,3
 4009c74:	0401ffc4 	movi	r16,2047
 4009c78:	4090b03a 	or	r8,r8,r2
 4009c7c:	003e4106 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009c80:	0141ffc4 	movi	r5,2047
 4009c84:	117fc71e 	bne	r2,r5,4009ba4 <__alt_mem_onchip_memory2_0+0xfc0049e4>
 4009c88:	4811883a 	mov	r8,r9
 4009c8c:	3023883a 	mov	r17,r6
 4009c90:	1021883a 	mov	r16,r2
 4009c94:	003e3b06 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009c98:	10002f26 	beq	r2,zero,4009d58 <__adddf3+0x850>
 4009c9c:	4984b03a 	or	r2,r9,r6
 4009ca0:	10001126 	beq	r2,zero,4009ce8 <__adddf3+0x7e0>
 4009ca4:	4004d0fa 	srli	r2,r8,3
 4009ca8:	8822d0fa 	srli	r17,r17,3
 4009cac:	4010977a 	slli	r8,r8,29
 4009cb0:	10c0022c 	andhi	r3,r2,8
 4009cb4:	4462b03a 	or	r17,r8,r17
 4009cb8:	183feb26 	beq	r3,zero,4009c68 <__alt_mem_onchip_memory2_0+0xfc004aa8>
 4009cbc:	4808d0fa 	srli	r4,r9,3
 4009cc0:	20c0022c 	andhi	r3,r4,8
 4009cc4:	183fe81e 	bne	r3,zero,4009c68 <__alt_mem_onchip_memory2_0+0xfc004aa8>
 4009cc8:	300cd0fa 	srli	r6,r6,3
 4009ccc:	4806977a 	slli	r3,r9,29
 4009cd0:	2005883a 	mov	r2,r4
 4009cd4:	19a2b03a 	or	r17,r3,r6
 4009cd8:	003fe306 	br	4009c68 <__alt_mem_onchip_memory2_0+0xfc004aa8>
 4009cdc:	0011883a 	mov	r8,zero
 4009ce0:	0005883a 	mov	r2,zero
 4009ce4:	003e3f06 	br	40095e4 <__alt_mem_onchip_memory2_0+0xfc004424>
 4009ce8:	0401ffc4 	movi	r16,2047
 4009cec:	003e2506 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009cf0:	0013883a 	mov	r9,zero
 4009cf4:	003f8406 	br	4009b08 <__alt_mem_onchip_memory2_0+0xfc004948>
 4009cf8:	0005883a 	mov	r2,zero
 4009cfc:	0007883a 	mov	r3,zero
 4009d00:	003e8906 	br	4009728 <__alt_mem_onchip_memory2_0+0xfc004568>
 4009d04:	197ff804 	addi	r5,r3,-32
 4009d08:	01000804 	movi	r4,32
 4009d0c:	414ad83a 	srl	r5,r8,r5
 4009d10:	19002426 	beq	r3,r4,4009da4 <__adddf3+0x89c>
 4009d14:	01001004 	movi	r4,64
 4009d18:	20c7c83a 	sub	r3,r4,r3
 4009d1c:	40c6983a 	sll	r3,r8,r3
 4009d20:	1c46b03a 	or	r3,r3,r17
 4009d24:	1806c03a 	cmpne	r3,r3,zero
 4009d28:	28e2b03a 	or	r17,r5,r3
 4009d2c:	0007883a 	mov	r3,zero
 4009d30:	003f2306 	br	40099c0 <__alt_mem_onchip_memory2_0+0xfc004800>
 4009d34:	0007883a 	mov	r3,zero
 4009d38:	5811883a 	mov	r8,r11
 4009d3c:	00bfffc4 	movi	r2,-1
 4009d40:	0401ffc4 	movi	r16,2047
 4009d44:	003e7806 	br	4009728 <__alt_mem_onchip_memory2_0+0xfc004568>
 4009d48:	4462b03a 	or	r17,r8,r17
 4009d4c:	8822c03a 	cmpne	r17,r17,zero
 4009d50:	0009883a 	mov	r4,zero
 4009d54:	003fa006 	br	4009bd8 <__alt_mem_onchip_memory2_0+0xfc004a18>
 4009d58:	4811883a 	mov	r8,r9
 4009d5c:	3023883a 	mov	r17,r6
 4009d60:	0401ffc4 	movi	r16,2047
 4009d64:	003e0706 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009d68:	4811883a 	mov	r8,r9
 4009d6c:	3023883a 	mov	r17,r6
 4009d70:	003e0406 	br	4009584 <__alt_mem_onchip_memory2_0+0xfc0043c4>
 4009d74:	21fff804 	addi	r7,r4,-32
 4009d78:	01400804 	movi	r5,32
 4009d7c:	41ced83a 	srl	r7,r8,r7
 4009d80:	21400a26 	beq	r4,r5,4009dac <__adddf3+0x8a4>
 4009d84:	01401004 	movi	r5,64
 4009d88:	2909c83a 	sub	r4,r5,r4
 4009d8c:	4108983a 	sll	r4,r8,r4
 4009d90:	2448b03a 	or	r4,r4,r17
 4009d94:	2008c03a 	cmpne	r4,r4,zero
 4009d98:	3922b03a 	or	r17,r7,r4
 4009d9c:	0009883a 	mov	r4,zero
 4009da0:	003f8d06 	br	4009bd8 <__alt_mem_onchip_memory2_0+0xfc004a18>
 4009da4:	0007883a 	mov	r3,zero
 4009da8:	003fdd06 	br	4009d20 <__alt_mem_onchip_memory2_0+0xfc004b60>
 4009dac:	0009883a 	mov	r4,zero
 4009db0:	003ff706 	br	4009d90 <__alt_mem_onchip_memory2_0+0xfc004bd0>

04009db4 <__divdf3>:
 4009db4:	defff004 	addi	sp,sp,-64
 4009db8:	dc800815 	stw	r18,32(sp)
 4009dbc:	2824d53a 	srli	r18,r5,20
 4009dc0:	dd800c15 	stw	r22,48(sp)
 4009dc4:	282cd7fa 	srli	r22,r5,31
 4009dc8:	dc000615 	stw	r16,24(sp)
 4009dcc:	04000434 	movhi	r16,16
 4009dd0:	843fffc4 	addi	r16,r16,-1
 4009dd4:	dfc00f15 	stw	ra,60(sp)
 4009dd8:	df000e15 	stw	fp,56(sp)
 4009ddc:	ddc00d15 	stw	r23,52(sp)
 4009de0:	dd400b15 	stw	r21,44(sp)
 4009de4:	dd000a15 	stw	r20,40(sp)
 4009de8:	dcc00915 	stw	r19,36(sp)
 4009dec:	dc400715 	stw	r17,28(sp)
 4009df0:	9481ffcc 	andi	r18,r18,2047
 4009df4:	2c20703a 	and	r16,r5,r16
 4009df8:	b2003fcc 	andi	r8,r22,255
 4009dfc:	90006126 	beq	r18,zero,4009f84 <__divdf3+0x1d0>
 4009e00:	0081ffc4 	movi	r2,2047
 4009e04:	202b883a 	mov	r21,r4
 4009e08:	90803726 	beq	r18,r2,4009ee8 <__divdf3+0x134>
 4009e0c:	80800434 	orhi	r2,r16,16
 4009e10:	100490fa 	slli	r2,r2,3
 4009e14:	2020d77a 	srli	r16,r4,29
 4009e18:	202a90fa 	slli	r21,r4,3
 4009e1c:	94bf0044 	addi	r18,r18,-1023
 4009e20:	80a0b03a 	or	r16,r16,r2
 4009e24:	0013883a 	mov	r9,zero
 4009e28:	000b883a 	mov	r5,zero
 4009e2c:	3806d53a 	srli	r3,r7,20
 4009e30:	382ed7fa 	srli	r23,r7,31
 4009e34:	04400434 	movhi	r17,16
 4009e38:	8c7fffc4 	addi	r17,r17,-1
 4009e3c:	18c1ffcc 	andi	r3,r3,2047
 4009e40:	3029883a 	mov	r20,r6
 4009e44:	3c62703a 	and	r17,r7,r17
 4009e48:	bf003fcc 	andi	fp,r23,255
 4009e4c:	18006e26 	beq	r3,zero,400a008 <__divdf3+0x254>
 4009e50:	0081ffc4 	movi	r2,2047
 4009e54:	18806626 	beq	r3,r2,4009ff0 <__divdf3+0x23c>
 4009e58:	88800434 	orhi	r2,r17,16
 4009e5c:	100490fa 	slli	r2,r2,3
 4009e60:	3022d77a 	srli	r17,r6,29
 4009e64:	302890fa 	slli	r20,r6,3
 4009e68:	18ff0044 	addi	r3,r3,-1023
 4009e6c:	88a2b03a 	or	r17,r17,r2
 4009e70:	000f883a 	mov	r7,zero
 4009e74:	b5e6f03a 	xor	r19,r22,r23
 4009e78:	3a4cb03a 	or	r6,r7,r9
 4009e7c:	008003c4 	movi	r2,15
 4009e80:	9809883a 	mov	r4,r19
 4009e84:	90c7c83a 	sub	r3,r18,r3
 4009e88:	9cc03fcc 	andi	r19,r19,255
 4009e8c:	11809636 	bltu	r2,r6,400a0e8 <__divdf3+0x334>
 4009e90:	300c90ba 	slli	r6,r6,2
 4009e94:	00810074 	movhi	r2,1025
 4009e98:	10a7aa04 	addi	r2,r2,-24920
 4009e9c:	308d883a 	add	r6,r6,r2
 4009ea0:	30800017 	ldw	r2,0(r6)
 4009ea4:	1000683a 	jmp	r2
 4009ea8:	0400a0e8 	cmpgeui	r16,zero,643
 4009eac:	04009f20 	cmpeqi	r16,zero,636
 4009eb0:	0400a0d8 	cmpnei	r16,zero,643
 4009eb4:	04009f14 	movui	r16,636
 4009eb8:	0400a0d8 	cmpnei	r16,zero,643
 4009ebc:	0400a0ac 	andhi	r16,zero,642
 4009ec0:	0400a0d8 	cmpnei	r16,zero,643
 4009ec4:	04009f14 	movui	r16,636
 4009ec8:	04009f20 	cmpeqi	r16,zero,636
 4009ecc:	04009f20 	cmpeqi	r16,zero,636
 4009ed0:	0400a0ac 	andhi	r16,zero,642
 4009ed4:	04009f14 	movui	r16,636
 4009ed8:	04009f04 	movi	r16,636
 4009edc:	04009f04 	movi	r16,636
 4009ee0:	04009f04 	movi	r16,636
 4009ee4:	0400a470 	cmpltui	r16,zero,657
 4009ee8:	2404b03a 	or	r2,r4,r16
 4009eec:	10006c1e 	bne	r2,zero,400a0a0 <__divdf3+0x2ec>
 4009ef0:	02400204 	movi	r9,8
 4009ef4:	0021883a 	mov	r16,zero
 4009ef8:	002b883a 	mov	r21,zero
 4009efc:	01400084 	movi	r5,2
 4009f00:	003fca06 	br	4009e2c <__alt_mem_onchip_memory2_0+0xfc004c6c>
 4009f04:	8023883a 	mov	r17,r16
 4009f08:	a829883a 	mov	r20,r21
 4009f0c:	4039883a 	mov	fp,r8
 4009f10:	280f883a 	mov	r7,r5
 4009f14:	00800084 	movi	r2,2
 4009f18:	3881601e 	bne	r7,r2,400a49c <__divdf3+0x6e8>
 4009f1c:	e027883a 	mov	r19,fp
 4009f20:	9900004c 	andi	r4,r19,1
 4009f24:	0081ffc4 	movi	r2,2047
 4009f28:	0021883a 	mov	r16,zero
 4009f2c:	002b883a 	mov	r21,zero
 4009f30:	1004953a 	slli	r2,r2,20
 4009f34:	20c03fcc 	andi	r3,r4,255
 4009f38:	01400434 	movhi	r5,16
 4009f3c:	297fffc4 	addi	r5,r5,-1
 4009f40:	180697fa 	slli	r3,r3,31
 4009f44:	8160703a 	and	r16,r16,r5
 4009f48:	80a0b03a 	or	r16,r16,r2
 4009f4c:	80c6b03a 	or	r3,r16,r3
 4009f50:	a805883a 	mov	r2,r21
 4009f54:	dfc00f17 	ldw	ra,60(sp)
 4009f58:	df000e17 	ldw	fp,56(sp)
 4009f5c:	ddc00d17 	ldw	r23,52(sp)
 4009f60:	dd800c17 	ldw	r22,48(sp)
 4009f64:	dd400b17 	ldw	r21,44(sp)
 4009f68:	dd000a17 	ldw	r20,40(sp)
 4009f6c:	dcc00917 	ldw	r19,36(sp)
 4009f70:	dc800817 	ldw	r18,32(sp)
 4009f74:	dc400717 	ldw	r17,28(sp)
 4009f78:	dc000617 	ldw	r16,24(sp)
 4009f7c:	dec01004 	addi	sp,sp,64
 4009f80:	f800283a 	ret
 4009f84:	2404b03a 	or	r2,r4,r16
 4009f88:	2023883a 	mov	r17,r4
 4009f8c:	10003f26 	beq	r2,zero,400a08c <__divdf3+0x2d8>
 4009f90:	80015e26 	beq	r16,zero,400a50c <__divdf3+0x758>
 4009f94:	8009883a 	mov	r4,r16
 4009f98:	d9800215 	stw	r6,8(sp)
 4009f9c:	d9c00515 	stw	r7,20(sp)
 4009fa0:	da000415 	stw	r8,16(sp)
 4009fa4:	400bd480 	call	400bd48 <__clzsi2>
 4009fa8:	d9800217 	ldw	r6,8(sp)
 4009fac:	d9c00517 	ldw	r7,20(sp)
 4009fb0:	da000417 	ldw	r8,16(sp)
 4009fb4:	113ffd44 	addi	r4,r2,-11
 4009fb8:	00c00704 	movi	r3,28
 4009fbc:	19014f16 	blt	r3,r4,400a4fc <__divdf3+0x748>
 4009fc0:	00c00744 	movi	r3,29
 4009fc4:	157ffe04 	addi	r21,r2,-8
 4009fc8:	1907c83a 	sub	r3,r3,r4
 4009fcc:	8560983a 	sll	r16,r16,r21
 4009fd0:	88c6d83a 	srl	r3,r17,r3
 4009fd4:	8d6a983a 	sll	r21,r17,r21
 4009fd8:	1c20b03a 	or	r16,r3,r16
 4009fdc:	1080fcc4 	addi	r2,r2,1011
 4009fe0:	00a5c83a 	sub	r18,zero,r2
 4009fe4:	0013883a 	mov	r9,zero
 4009fe8:	000b883a 	mov	r5,zero
 4009fec:	003f8f06 	br	4009e2c <__alt_mem_onchip_memory2_0+0xfc004c6c>
 4009ff0:	3444b03a 	or	r2,r6,r17
 4009ff4:	1000231e 	bne	r2,zero,400a084 <__divdf3+0x2d0>
 4009ff8:	0023883a 	mov	r17,zero
 4009ffc:	0029883a 	mov	r20,zero
 400a000:	01c00084 	movi	r7,2
 400a004:	003f9b06 	br	4009e74 <__alt_mem_onchip_memory2_0+0xfc004cb4>
 400a008:	3444b03a 	or	r2,r6,r17
 400a00c:	10001926 	beq	r2,zero,400a074 <__divdf3+0x2c0>
 400a010:	88014b26 	beq	r17,zero,400a540 <__divdf3+0x78c>
 400a014:	8809883a 	mov	r4,r17
 400a018:	d9400115 	stw	r5,4(sp)
 400a01c:	d9800215 	stw	r6,8(sp)
 400a020:	da000415 	stw	r8,16(sp)
 400a024:	da400315 	stw	r9,12(sp)
 400a028:	400bd480 	call	400bd48 <__clzsi2>
 400a02c:	d9400117 	ldw	r5,4(sp)
 400a030:	d9800217 	ldw	r6,8(sp)
 400a034:	da000417 	ldw	r8,16(sp)
 400a038:	da400317 	ldw	r9,12(sp)
 400a03c:	113ffd44 	addi	r4,r2,-11
 400a040:	00c00704 	movi	r3,28
 400a044:	19013a16 	blt	r3,r4,400a530 <__divdf3+0x77c>
 400a048:	00c00744 	movi	r3,29
 400a04c:	153ffe04 	addi	r20,r2,-8
 400a050:	1907c83a 	sub	r3,r3,r4
 400a054:	8d22983a 	sll	r17,r17,r20
 400a058:	30c6d83a 	srl	r3,r6,r3
 400a05c:	3528983a 	sll	r20,r6,r20
 400a060:	1c62b03a 	or	r17,r3,r17
 400a064:	1080fcc4 	addi	r2,r2,1011
 400a068:	0087c83a 	sub	r3,zero,r2
 400a06c:	000f883a 	mov	r7,zero
 400a070:	003f8006 	br	4009e74 <__alt_mem_onchip_memory2_0+0xfc004cb4>
 400a074:	0023883a 	mov	r17,zero
 400a078:	0029883a 	mov	r20,zero
 400a07c:	01c00044 	movi	r7,1
 400a080:	003f7c06 	br	4009e74 <__alt_mem_onchip_memory2_0+0xfc004cb4>
 400a084:	01c000c4 	movi	r7,3
 400a088:	003f7a06 	br	4009e74 <__alt_mem_onchip_memory2_0+0xfc004cb4>
 400a08c:	02400104 	movi	r9,4
 400a090:	0021883a 	mov	r16,zero
 400a094:	002b883a 	mov	r21,zero
 400a098:	01400044 	movi	r5,1
 400a09c:	003f6306 	br	4009e2c <__alt_mem_onchip_memory2_0+0xfc004c6c>
 400a0a0:	02400304 	movi	r9,12
 400a0a4:	014000c4 	movi	r5,3
 400a0a8:	003f6006 	br	4009e2c <__alt_mem_onchip_memory2_0+0xfc004c6c>
 400a0ac:	04000434 	movhi	r16,16
 400a0b0:	0009883a 	mov	r4,zero
 400a0b4:	843fffc4 	addi	r16,r16,-1
 400a0b8:	057fffc4 	movi	r21,-1
 400a0bc:	0081ffc4 	movi	r2,2047
 400a0c0:	003f9b06 	br	4009f30 <__alt_mem_onchip_memory2_0+0xfc004d70>
 400a0c4:	00c00044 	movi	r3,1
 400a0c8:	1887c83a 	sub	r3,r3,r2
 400a0cc:	01000e04 	movi	r4,56
 400a0d0:	20c1530e 	bge	r4,r3,400a620 <__divdf3+0x86c>
 400a0d4:	9900004c 	andi	r4,r19,1
 400a0d8:	0005883a 	mov	r2,zero
 400a0dc:	0021883a 	mov	r16,zero
 400a0e0:	002b883a 	mov	r21,zero
 400a0e4:	003f9206 	br	4009f30 <__alt_mem_onchip_memory2_0+0xfc004d70>
 400a0e8:	8c012e36 	bltu	r17,r16,400a5a4 <__divdf3+0x7f0>
 400a0ec:	84412c26 	beq	r16,r17,400a5a0 <__divdf3+0x7ec>
 400a0f0:	a82f883a 	mov	r23,r21
 400a0f4:	18ffffc4 	addi	r3,r3,-1
 400a0f8:	002b883a 	mov	r21,zero
 400a0fc:	a004d63a 	srli	r2,r20,24
 400a100:	8822923a 	slli	r17,r17,8
 400a104:	a028923a 	slli	r20,r20,8
 400a108:	8009883a 	mov	r4,r16
 400a10c:	88acb03a 	or	r22,r17,r2
 400a110:	dd000015 	stw	r20,0(sp)
 400a114:	b028d43a 	srli	r20,r22,16
 400a118:	d8c00215 	stw	r3,8(sp)
 400a11c:	b4bfffcc 	andi	r18,r22,65535
 400a120:	a00b883a 	mov	r5,r20
 400a124:	4000a3c0 	call	4000a3c <__udivsi3>
 400a128:	100b883a 	mov	r5,r2
 400a12c:	9009883a 	mov	r4,r18
 400a130:	1023883a 	mov	r17,r2
 400a134:	4000af80 	call	4000af8 <__mulsi3>
 400a138:	8009883a 	mov	r4,r16
 400a13c:	a00b883a 	mov	r5,r20
 400a140:	1039883a 	mov	fp,r2
 400a144:	4000aa00 	call	4000aa0 <__umodsi3>
 400a148:	1004943a 	slli	r2,r2,16
 400a14c:	b808d43a 	srli	r4,r23,16
 400a150:	d8c00217 	ldw	r3,8(sp)
 400a154:	2084b03a 	or	r2,r4,r2
 400a158:	1700062e 	bgeu	r2,fp,400a174 <__divdf3+0x3c0>
 400a15c:	1585883a 	add	r2,r2,r22
 400a160:	893fffc4 	addi	r4,r17,-1
 400a164:	15811d36 	bltu	r2,r22,400a5dc <__divdf3+0x828>
 400a168:	17011c2e 	bgeu	r2,fp,400a5dc <__divdf3+0x828>
 400a16c:	8c7fff84 	addi	r17,r17,-2
 400a170:	1585883a 	add	r2,r2,r22
 400a174:	1739c83a 	sub	fp,r2,fp
 400a178:	a00b883a 	mov	r5,r20
 400a17c:	e009883a 	mov	r4,fp
 400a180:	d8c00215 	stw	r3,8(sp)
 400a184:	4000a3c0 	call	4000a3c <__udivsi3>
 400a188:	100b883a 	mov	r5,r2
 400a18c:	9009883a 	mov	r4,r18
 400a190:	1021883a 	mov	r16,r2
 400a194:	4000af80 	call	4000af8 <__mulsi3>
 400a198:	a00b883a 	mov	r5,r20
 400a19c:	e009883a 	mov	r4,fp
 400a1a0:	d8800415 	stw	r2,16(sp)
 400a1a4:	4000aa00 	call	4000aa0 <__umodsi3>
 400a1a8:	1004943a 	slli	r2,r2,16
 400a1ac:	da000417 	ldw	r8,16(sp)
 400a1b0:	bdffffcc 	andi	r23,r23,65535
 400a1b4:	b884b03a 	or	r2,r23,r2
 400a1b8:	d8c00217 	ldw	r3,8(sp)
 400a1bc:	1200062e 	bgeu	r2,r8,400a1d8 <__divdf3+0x424>
 400a1c0:	1585883a 	add	r2,r2,r22
 400a1c4:	813fffc4 	addi	r4,r16,-1
 400a1c8:	15810236 	bltu	r2,r22,400a5d4 <__divdf3+0x820>
 400a1cc:	1201012e 	bgeu	r2,r8,400a5d4 <__divdf3+0x820>
 400a1d0:	843fff84 	addi	r16,r16,-2
 400a1d4:	1585883a 	add	r2,r2,r22
 400a1d8:	8822943a 	slli	r17,r17,16
 400a1dc:	d9800017 	ldw	r6,0(sp)
 400a1e0:	1211c83a 	sub	r8,r2,r8
 400a1e4:	8c22b03a 	or	r17,r17,r16
 400a1e8:	373fffcc 	andi	fp,r6,65535
 400a1ec:	8abfffcc 	andi	r10,r17,65535
 400a1f0:	8820d43a 	srli	r16,r17,16
 400a1f4:	5009883a 	mov	r4,r10
 400a1f8:	e00b883a 	mov	r5,fp
 400a1fc:	302ed43a 	srli	r23,r6,16
 400a200:	d8c00215 	stw	r3,8(sp)
 400a204:	da000415 	stw	r8,16(sp)
 400a208:	da800115 	stw	r10,4(sp)
 400a20c:	4000af80 	call	4000af8 <__mulsi3>
 400a210:	800b883a 	mov	r5,r16
 400a214:	e009883a 	mov	r4,fp
 400a218:	d8800515 	stw	r2,20(sp)
 400a21c:	4000af80 	call	4000af8 <__mulsi3>
 400a220:	8009883a 	mov	r4,r16
 400a224:	b80b883a 	mov	r5,r23
 400a228:	d8800315 	stw	r2,12(sp)
 400a22c:	4000af80 	call	4000af8 <__mulsi3>
 400a230:	da800117 	ldw	r10,4(sp)
 400a234:	b80b883a 	mov	r5,r23
 400a238:	1021883a 	mov	r16,r2
 400a23c:	5009883a 	mov	r4,r10
 400a240:	4000af80 	call	4000af8 <__mulsi3>
 400a244:	d9c00517 	ldw	r7,20(sp)
 400a248:	da400317 	ldw	r9,12(sp)
 400a24c:	d8c00217 	ldw	r3,8(sp)
 400a250:	3808d43a 	srli	r4,r7,16
 400a254:	1245883a 	add	r2,r2,r9
 400a258:	da000417 	ldw	r8,16(sp)
 400a25c:	2085883a 	add	r2,r4,r2
 400a260:	1240022e 	bgeu	r2,r9,400a26c <__divdf3+0x4b8>
 400a264:	01000074 	movhi	r4,1
 400a268:	8121883a 	add	r16,r16,r4
 400a26c:	1008d43a 	srli	r4,r2,16
 400a270:	1004943a 	slli	r2,r2,16
 400a274:	39ffffcc 	andi	r7,r7,65535
 400a278:	2409883a 	add	r4,r4,r16
 400a27c:	11c5883a 	add	r2,r2,r7
 400a280:	4100bb36 	bltu	r8,r4,400a570 <__divdf3+0x7bc>
 400a284:	4100d726 	beq	r8,r4,400a5e4 <__divdf3+0x830>
 400a288:	4109c83a 	sub	r4,r8,r4
 400a28c:	a8a1c83a 	sub	r16,r21,r2
 400a290:	ac2b803a 	cmpltu	r21,r21,r16
 400a294:	256bc83a 	sub	r21,r4,r21
 400a298:	b540d926 	beq	r22,r21,400a600 <__divdf3+0x84c>
 400a29c:	a00b883a 	mov	r5,r20
 400a2a0:	a809883a 	mov	r4,r21
 400a2a4:	d8c00215 	stw	r3,8(sp)
 400a2a8:	4000a3c0 	call	4000a3c <__udivsi3>
 400a2ac:	100b883a 	mov	r5,r2
 400a2b0:	9009883a 	mov	r4,r18
 400a2b4:	d8800515 	stw	r2,20(sp)
 400a2b8:	4000af80 	call	4000af8 <__mulsi3>
 400a2bc:	a809883a 	mov	r4,r21
 400a2c0:	a00b883a 	mov	r5,r20
 400a2c4:	d8800415 	stw	r2,16(sp)
 400a2c8:	4000aa00 	call	4000aa0 <__umodsi3>
 400a2cc:	1004943a 	slli	r2,r2,16
 400a2d0:	8008d43a 	srli	r4,r16,16
 400a2d4:	da000417 	ldw	r8,16(sp)
 400a2d8:	d8c00217 	ldw	r3,8(sp)
 400a2dc:	2084b03a 	or	r2,r4,r2
 400a2e0:	d9c00517 	ldw	r7,20(sp)
 400a2e4:	1200062e 	bgeu	r2,r8,400a300 <__divdf3+0x54c>
 400a2e8:	1585883a 	add	r2,r2,r22
 400a2ec:	393fffc4 	addi	r4,r7,-1
 400a2f0:	1580c536 	bltu	r2,r22,400a608 <__divdf3+0x854>
 400a2f4:	1200c42e 	bgeu	r2,r8,400a608 <__divdf3+0x854>
 400a2f8:	39ffff84 	addi	r7,r7,-2
 400a2fc:	1585883a 	add	r2,r2,r22
 400a300:	122bc83a 	sub	r21,r2,r8
 400a304:	a00b883a 	mov	r5,r20
 400a308:	a809883a 	mov	r4,r21
 400a30c:	d8c00215 	stw	r3,8(sp)
 400a310:	d9c00515 	stw	r7,20(sp)
 400a314:	4000a3c0 	call	4000a3c <__udivsi3>
 400a318:	9009883a 	mov	r4,r18
 400a31c:	100b883a 	mov	r5,r2
 400a320:	d8800415 	stw	r2,16(sp)
 400a324:	4000af80 	call	4000af8 <__mulsi3>
 400a328:	a809883a 	mov	r4,r21
 400a32c:	a00b883a 	mov	r5,r20
 400a330:	1025883a 	mov	r18,r2
 400a334:	4000aa00 	call	4000aa0 <__umodsi3>
 400a338:	1004943a 	slli	r2,r2,16
 400a33c:	813fffcc 	andi	r4,r16,65535
 400a340:	d8c00217 	ldw	r3,8(sp)
 400a344:	20a0b03a 	or	r16,r4,r2
 400a348:	d9c00517 	ldw	r7,20(sp)
 400a34c:	da000417 	ldw	r8,16(sp)
 400a350:	8480062e 	bgeu	r16,r18,400a36c <__divdf3+0x5b8>
 400a354:	85a1883a 	add	r16,r16,r22
 400a358:	40bfffc4 	addi	r2,r8,-1
 400a35c:	8580ac36 	bltu	r16,r22,400a610 <__divdf3+0x85c>
 400a360:	8480ab2e 	bgeu	r16,r18,400a610 <__divdf3+0x85c>
 400a364:	423fff84 	addi	r8,r8,-2
 400a368:	85a1883a 	add	r16,r16,r22
 400a36c:	3804943a 	slli	r2,r7,16
 400a370:	84a1c83a 	sub	r16,r16,r18
 400a374:	e009883a 	mov	r4,fp
 400a378:	1228b03a 	or	r20,r2,r8
 400a37c:	a1ffffcc 	andi	r7,r20,65535
 400a380:	a024d43a 	srli	r18,r20,16
 400a384:	380b883a 	mov	r5,r7
 400a388:	d8c00215 	stw	r3,8(sp)
 400a38c:	d9c00515 	stw	r7,20(sp)
 400a390:	4000af80 	call	4000af8 <__mulsi3>
 400a394:	900b883a 	mov	r5,r18
 400a398:	e009883a 	mov	r4,fp
 400a39c:	102b883a 	mov	r21,r2
 400a3a0:	4000af80 	call	4000af8 <__mulsi3>
 400a3a4:	900b883a 	mov	r5,r18
 400a3a8:	b809883a 	mov	r4,r23
 400a3ac:	1039883a 	mov	fp,r2
 400a3b0:	4000af80 	call	4000af8 <__mulsi3>
 400a3b4:	d9c00517 	ldw	r7,20(sp)
 400a3b8:	b80b883a 	mov	r5,r23
 400a3bc:	1025883a 	mov	r18,r2
 400a3c0:	3809883a 	mov	r4,r7
 400a3c4:	4000af80 	call	4000af8 <__mulsi3>
 400a3c8:	a808d43a 	srli	r4,r21,16
 400a3cc:	1705883a 	add	r2,r2,fp
 400a3d0:	d8c00217 	ldw	r3,8(sp)
 400a3d4:	2085883a 	add	r2,r4,r2
 400a3d8:	1700022e 	bgeu	r2,fp,400a3e4 <__divdf3+0x630>
 400a3dc:	01000074 	movhi	r4,1
 400a3e0:	9125883a 	add	r18,r18,r4
 400a3e4:	1008d43a 	srli	r4,r2,16
 400a3e8:	1004943a 	slli	r2,r2,16
 400a3ec:	ad7fffcc 	andi	r21,r21,65535
 400a3f0:	2489883a 	add	r4,r4,r18
 400a3f4:	1545883a 	add	r2,r2,r21
 400a3f8:	81003836 	bltu	r16,r4,400a4dc <__divdf3+0x728>
 400a3fc:	81003626 	beq	r16,r4,400a4d8 <__divdf3+0x724>
 400a400:	a5000054 	ori	r20,r20,1
 400a404:	1880ffc4 	addi	r2,r3,1023
 400a408:	00bf2e0e 	bge	zero,r2,400a0c4 <__alt_mem_onchip_memory2_0+0xfc004f04>
 400a40c:	a10001cc 	andi	r4,r20,7
 400a410:	20000726 	beq	r4,zero,400a430 <__divdf3+0x67c>
 400a414:	a10003cc 	andi	r4,r20,15
 400a418:	01400104 	movi	r5,4
 400a41c:	21400426 	beq	r4,r5,400a430 <__divdf3+0x67c>
 400a420:	a149883a 	add	r4,r20,r5
 400a424:	2529803a 	cmpltu	r20,r4,r20
 400a428:	8d23883a 	add	r17,r17,r20
 400a42c:	2029883a 	mov	r20,r4
 400a430:	8900402c 	andhi	r4,r17,256
 400a434:	20000426 	beq	r4,zero,400a448 <__divdf3+0x694>
 400a438:	18810004 	addi	r2,r3,1024
 400a43c:	00ffc034 	movhi	r3,65280
 400a440:	18ffffc4 	addi	r3,r3,-1
 400a444:	88e2703a 	and	r17,r17,r3
 400a448:	00c1ff84 	movi	r3,2046
 400a44c:	18beb416 	blt	r3,r2,4009f20 <__alt_mem_onchip_memory2_0+0xfc004d60>
 400a450:	a028d0fa 	srli	r20,r20,3
 400a454:	882a977a 	slli	r21,r17,29
 400a458:	8820927a 	slli	r16,r17,9
 400a45c:	1081ffcc 	andi	r2,r2,2047
 400a460:	ad2ab03a 	or	r21,r21,r20
 400a464:	8020d33a 	srli	r16,r16,12
 400a468:	9900004c 	andi	r4,r19,1
 400a46c:	003eb006 	br	4009f30 <__alt_mem_onchip_memory2_0+0xfc004d70>
 400a470:	8080022c 	andhi	r2,r16,8
 400a474:	10001226 	beq	r2,zero,400a4c0 <__divdf3+0x70c>
 400a478:	8880022c 	andhi	r2,r17,8
 400a47c:	1000101e 	bne	r2,zero,400a4c0 <__divdf3+0x70c>
 400a480:	00800434 	movhi	r2,16
 400a484:	8c000234 	orhi	r16,r17,8
 400a488:	10bfffc4 	addi	r2,r2,-1
 400a48c:	b809883a 	mov	r4,r23
 400a490:	80a0703a 	and	r16,r16,r2
 400a494:	a02b883a 	mov	r21,r20
 400a498:	003f0806 	br	400a0bc <__alt_mem_onchip_memory2_0+0xfc004efc>
 400a49c:	008000c4 	movi	r2,3
 400a4a0:	3880b126 	beq	r7,r2,400a768 <__divdf3+0x9b4>
 400a4a4:	00800044 	movi	r2,1
 400a4a8:	38805b1e 	bne	r7,r2,400a618 <__divdf3+0x864>
 400a4ac:	e009883a 	mov	r4,fp
 400a4b0:	0005883a 	mov	r2,zero
 400a4b4:	0021883a 	mov	r16,zero
 400a4b8:	002b883a 	mov	r21,zero
 400a4bc:	003e9c06 	br	4009f30 <__alt_mem_onchip_memory2_0+0xfc004d70>
 400a4c0:	00800434 	movhi	r2,16
 400a4c4:	84000234 	orhi	r16,r16,8
 400a4c8:	10bfffc4 	addi	r2,r2,-1
 400a4cc:	b009883a 	mov	r4,r22
 400a4d0:	80a0703a 	and	r16,r16,r2
 400a4d4:	003ef906 	br	400a0bc <__alt_mem_onchip_memory2_0+0xfc004efc>
 400a4d8:	103fca26 	beq	r2,zero,400a404 <__alt_mem_onchip_memory2_0+0xfc005244>
 400a4dc:	b421883a 	add	r16,r22,r16
 400a4e0:	a17fffc4 	addi	r5,r20,-1
 400a4e4:	8580422e 	bgeu	r16,r22,400a5f0 <__divdf3+0x83c>
 400a4e8:	2829883a 	mov	r20,r5
 400a4ec:	813fc41e 	bne	r16,r4,400a400 <__alt_mem_onchip_memory2_0+0xfc005240>
 400a4f0:	d9800017 	ldw	r6,0(sp)
 400a4f4:	30bfc21e 	bne	r6,r2,400a400 <__alt_mem_onchip_memory2_0+0xfc005240>
 400a4f8:	003fc206 	br	400a404 <__alt_mem_onchip_memory2_0+0xfc005244>
 400a4fc:	143ff604 	addi	r16,r2,-40
 400a500:	8c20983a 	sll	r16,r17,r16
 400a504:	002b883a 	mov	r21,zero
 400a508:	003eb406 	br	4009fdc <__alt_mem_onchip_memory2_0+0xfc004e1c>
 400a50c:	d9800215 	stw	r6,8(sp)
 400a510:	d9c00515 	stw	r7,20(sp)
 400a514:	da000415 	stw	r8,16(sp)
 400a518:	400bd480 	call	400bd48 <__clzsi2>
 400a51c:	10800804 	addi	r2,r2,32
 400a520:	da000417 	ldw	r8,16(sp)
 400a524:	d9c00517 	ldw	r7,20(sp)
 400a528:	d9800217 	ldw	r6,8(sp)
 400a52c:	003ea106 	br	4009fb4 <__alt_mem_onchip_memory2_0+0xfc004df4>
 400a530:	147ff604 	addi	r17,r2,-40
 400a534:	3462983a 	sll	r17,r6,r17
 400a538:	0029883a 	mov	r20,zero
 400a53c:	003ec906 	br	400a064 <__alt_mem_onchip_memory2_0+0xfc004ea4>
 400a540:	3009883a 	mov	r4,r6
 400a544:	d9400115 	stw	r5,4(sp)
 400a548:	d9800215 	stw	r6,8(sp)
 400a54c:	da000415 	stw	r8,16(sp)
 400a550:	da400315 	stw	r9,12(sp)
 400a554:	400bd480 	call	400bd48 <__clzsi2>
 400a558:	10800804 	addi	r2,r2,32
 400a55c:	da400317 	ldw	r9,12(sp)
 400a560:	da000417 	ldw	r8,16(sp)
 400a564:	d9800217 	ldw	r6,8(sp)
 400a568:	d9400117 	ldw	r5,4(sp)
 400a56c:	003eb306 	br	400a03c <__alt_mem_onchip_memory2_0+0xfc004e7c>
 400a570:	d9800017 	ldw	r6,0(sp)
 400a574:	a9ab883a 	add	r21,r21,r6
 400a578:	a98b803a 	cmpltu	r5,r21,r6
 400a57c:	2d8b883a 	add	r5,r5,r22
 400a580:	2a11883a 	add	r8,r5,r8
 400a584:	897fffc4 	addi	r5,r17,-1
 400a588:	b2000c2e 	bgeu	r22,r8,400a5bc <__divdf3+0x808>
 400a58c:	41003f36 	bltu	r8,r4,400a68c <__divdf3+0x8d8>
 400a590:	22006c26 	beq	r4,r8,400a744 <__divdf3+0x990>
 400a594:	4109c83a 	sub	r4,r8,r4
 400a598:	2823883a 	mov	r17,r5
 400a59c:	003f3b06 	br	400a28c <__alt_mem_onchip_memory2_0+0xfc0050cc>
 400a5a0:	ad3ed336 	bltu	r21,r20,400a0f0 <__alt_mem_onchip_memory2_0+0xfc004f30>
 400a5a4:	a804d07a 	srli	r2,r21,1
 400a5a8:	802e97fa 	slli	r23,r16,31
 400a5ac:	a82a97fa 	slli	r21,r21,31
 400a5b0:	8020d07a 	srli	r16,r16,1
 400a5b4:	b8aeb03a 	or	r23,r23,r2
 400a5b8:	003ed006 	br	400a0fc <__alt_mem_onchip_memory2_0+0xfc004f3c>
 400a5bc:	b23ff51e 	bne	r22,r8,400a594 <__alt_mem_onchip_memory2_0+0xfc0053d4>
 400a5c0:	d9800017 	ldw	r6,0(sp)
 400a5c4:	a9bff12e 	bgeu	r21,r6,400a58c <__alt_mem_onchip_memory2_0+0xfc0053cc>
 400a5c8:	b109c83a 	sub	r4,r22,r4
 400a5cc:	2823883a 	mov	r17,r5
 400a5d0:	003f2e06 	br	400a28c <__alt_mem_onchip_memory2_0+0xfc0050cc>
 400a5d4:	2021883a 	mov	r16,r4
 400a5d8:	003eff06 	br	400a1d8 <__alt_mem_onchip_memory2_0+0xfc005018>
 400a5dc:	2023883a 	mov	r17,r4
 400a5e0:	003ee406 	br	400a174 <__alt_mem_onchip_memory2_0+0xfc004fb4>
 400a5e4:	a8bfe236 	bltu	r21,r2,400a570 <__alt_mem_onchip_memory2_0+0xfc0053b0>
 400a5e8:	0009883a 	mov	r4,zero
 400a5ec:	003f2706 	br	400a28c <__alt_mem_onchip_memory2_0+0xfc0050cc>
 400a5f0:	81002d36 	bltu	r16,r4,400a6a8 <__divdf3+0x8f4>
 400a5f4:	24005626 	beq	r4,r16,400a750 <__divdf3+0x99c>
 400a5f8:	2829883a 	mov	r20,r5
 400a5fc:	003f8006 	br	400a400 <__alt_mem_onchip_memory2_0+0xfc005240>
 400a600:	053fffc4 	movi	r20,-1
 400a604:	003f7f06 	br	400a404 <__alt_mem_onchip_memory2_0+0xfc005244>
 400a608:	200f883a 	mov	r7,r4
 400a60c:	003f3c06 	br	400a300 <__alt_mem_onchip_memory2_0+0xfc005140>
 400a610:	1011883a 	mov	r8,r2
 400a614:	003f5506 	br	400a36c <__alt_mem_onchip_memory2_0+0xfc0051ac>
 400a618:	e027883a 	mov	r19,fp
 400a61c:	003f7906 	br	400a404 <__alt_mem_onchip_memory2_0+0xfc005244>
 400a620:	010007c4 	movi	r4,31
 400a624:	20c02816 	blt	r4,r3,400a6c8 <__divdf3+0x914>
 400a628:	00800804 	movi	r2,32
 400a62c:	10c5c83a 	sub	r2,r2,r3
 400a630:	888a983a 	sll	r5,r17,r2
 400a634:	a0c8d83a 	srl	r4,r20,r3
 400a638:	a084983a 	sll	r2,r20,r2
 400a63c:	88e2d83a 	srl	r17,r17,r3
 400a640:	2906b03a 	or	r3,r5,r4
 400a644:	1004c03a 	cmpne	r2,r2,zero
 400a648:	1886b03a 	or	r3,r3,r2
 400a64c:	188001cc 	andi	r2,r3,7
 400a650:	10000726 	beq	r2,zero,400a670 <__divdf3+0x8bc>
 400a654:	188003cc 	andi	r2,r3,15
 400a658:	01000104 	movi	r4,4
 400a65c:	11000426 	beq	r2,r4,400a670 <__divdf3+0x8bc>
 400a660:	1805883a 	mov	r2,r3
 400a664:	10c00104 	addi	r3,r2,4
 400a668:	1885803a 	cmpltu	r2,r3,r2
 400a66c:	88a3883a 	add	r17,r17,r2
 400a670:	8880202c 	andhi	r2,r17,128
 400a674:	10002926 	beq	r2,zero,400a71c <__divdf3+0x968>
 400a678:	9900004c 	andi	r4,r19,1
 400a67c:	00800044 	movi	r2,1
 400a680:	0021883a 	mov	r16,zero
 400a684:	002b883a 	mov	r21,zero
 400a688:	003e2906 	br	4009f30 <__alt_mem_onchip_memory2_0+0xfc004d70>
 400a68c:	d9800017 	ldw	r6,0(sp)
 400a690:	8c7fff84 	addi	r17,r17,-2
 400a694:	a9ab883a 	add	r21,r21,r6
 400a698:	a98b803a 	cmpltu	r5,r21,r6
 400a69c:	2d8b883a 	add	r5,r5,r22
 400a6a0:	2a11883a 	add	r8,r5,r8
 400a6a4:	003ef806 	br	400a288 <__alt_mem_onchip_memory2_0+0xfc0050c8>
 400a6a8:	d9800017 	ldw	r6,0(sp)
 400a6ac:	318f883a 	add	r7,r6,r6
 400a6b0:	398b803a 	cmpltu	r5,r7,r6
 400a6b4:	2d8d883a 	add	r6,r5,r22
 400a6b8:	81a1883a 	add	r16,r16,r6
 400a6bc:	a17fff84 	addi	r5,r20,-2
 400a6c0:	d9c00015 	stw	r7,0(sp)
 400a6c4:	003f8806 	br	400a4e8 <__alt_mem_onchip_memory2_0+0xfc005328>
 400a6c8:	013ff844 	movi	r4,-31
 400a6cc:	2085c83a 	sub	r2,r4,r2
 400a6d0:	8888d83a 	srl	r4,r17,r2
 400a6d4:	00800804 	movi	r2,32
 400a6d8:	18802126 	beq	r3,r2,400a760 <__divdf3+0x9ac>
 400a6dc:	04001004 	movi	r16,64
 400a6e0:	80c7c83a 	sub	r3,r16,r3
 400a6e4:	88e0983a 	sll	r16,r17,r3
 400a6e8:	8504b03a 	or	r2,r16,r20
 400a6ec:	1004c03a 	cmpne	r2,r2,zero
 400a6f0:	2084b03a 	or	r2,r4,r2
 400a6f4:	144001cc 	andi	r17,r2,7
 400a6f8:	88000d1e 	bne	r17,zero,400a730 <__divdf3+0x97c>
 400a6fc:	0021883a 	mov	r16,zero
 400a700:	102ad0fa 	srli	r21,r2,3
 400a704:	9900004c 	andi	r4,r19,1
 400a708:	0005883a 	mov	r2,zero
 400a70c:	ac6ab03a 	or	r21,r21,r17
 400a710:	003e0706 	br	4009f30 <__alt_mem_onchip_memory2_0+0xfc004d70>
 400a714:	1007883a 	mov	r3,r2
 400a718:	0023883a 	mov	r17,zero
 400a71c:	8820927a 	slli	r16,r17,9
 400a720:	1805883a 	mov	r2,r3
 400a724:	8822977a 	slli	r17,r17,29
 400a728:	8020d33a 	srli	r16,r16,12
 400a72c:	003ff406 	br	400a700 <__alt_mem_onchip_memory2_0+0xfc005540>
 400a730:	10c003cc 	andi	r3,r2,15
 400a734:	01000104 	movi	r4,4
 400a738:	193ff626 	beq	r3,r4,400a714 <__alt_mem_onchip_memory2_0+0xfc005554>
 400a73c:	0023883a 	mov	r17,zero
 400a740:	003fc806 	br	400a664 <__alt_mem_onchip_memory2_0+0xfc0054a4>
 400a744:	a8bfd136 	bltu	r21,r2,400a68c <__alt_mem_onchip_memory2_0+0xfc0054cc>
 400a748:	2823883a 	mov	r17,r5
 400a74c:	003fa606 	br	400a5e8 <__alt_mem_onchip_memory2_0+0xfc005428>
 400a750:	d9800017 	ldw	r6,0(sp)
 400a754:	30bfd436 	bltu	r6,r2,400a6a8 <__alt_mem_onchip_memory2_0+0xfc0054e8>
 400a758:	2829883a 	mov	r20,r5
 400a75c:	003f6406 	br	400a4f0 <__alt_mem_onchip_memory2_0+0xfc005330>
 400a760:	0021883a 	mov	r16,zero
 400a764:	003fe006 	br	400a6e8 <__alt_mem_onchip_memory2_0+0xfc005528>
 400a768:	00800434 	movhi	r2,16
 400a76c:	8c000234 	orhi	r16,r17,8
 400a770:	10bfffc4 	addi	r2,r2,-1
 400a774:	e009883a 	mov	r4,fp
 400a778:	80a0703a 	and	r16,r16,r2
 400a77c:	a02b883a 	mov	r21,r20
 400a780:	003e4e06 	br	400a0bc <__alt_mem_onchip_memory2_0+0xfc004efc>

0400a784 <__eqdf2>:
 400a784:	2804d53a 	srli	r2,r5,20
 400a788:	3806d53a 	srli	r3,r7,20
 400a78c:	02000434 	movhi	r8,16
 400a790:	423fffc4 	addi	r8,r8,-1
 400a794:	1081ffcc 	andi	r2,r2,2047
 400a798:	0281ffc4 	movi	r10,2047
 400a79c:	2a12703a 	and	r9,r5,r8
 400a7a0:	18c1ffcc 	andi	r3,r3,2047
 400a7a4:	3a10703a 	and	r8,r7,r8
 400a7a8:	280ad7fa 	srli	r5,r5,31
 400a7ac:	380ed7fa 	srli	r7,r7,31
 400a7b0:	12801026 	beq	r2,r10,400a7f4 <__eqdf2+0x70>
 400a7b4:	0281ffc4 	movi	r10,2047
 400a7b8:	1a800a26 	beq	r3,r10,400a7e4 <__eqdf2+0x60>
 400a7bc:	10c00226 	beq	r2,r3,400a7c8 <__eqdf2+0x44>
 400a7c0:	00800044 	movi	r2,1
 400a7c4:	f800283a 	ret
 400a7c8:	4a3ffd1e 	bne	r9,r8,400a7c0 <__alt_mem_onchip_memory2_0+0xfc005600>
 400a7cc:	21bffc1e 	bne	r4,r6,400a7c0 <__alt_mem_onchip_memory2_0+0xfc005600>
 400a7d0:	29c00c26 	beq	r5,r7,400a804 <__eqdf2+0x80>
 400a7d4:	103ffa1e 	bne	r2,zero,400a7c0 <__alt_mem_onchip_memory2_0+0xfc005600>
 400a7d8:	2244b03a 	or	r2,r4,r9
 400a7dc:	1004c03a 	cmpne	r2,r2,zero
 400a7e0:	f800283a 	ret
 400a7e4:	3214b03a 	or	r10,r6,r8
 400a7e8:	503ff426 	beq	r10,zero,400a7bc <__alt_mem_onchip_memory2_0+0xfc0055fc>
 400a7ec:	00800044 	movi	r2,1
 400a7f0:	f800283a 	ret
 400a7f4:	2254b03a 	or	r10,r4,r9
 400a7f8:	503fee26 	beq	r10,zero,400a7b4 <__alt_mem_onchip_memory2_0+0xfc0055f4>
 400a7fc:	00800044 	movi	r2,1
 400a800:	f800283a 	ret
 400a804:	0005883a 	mov	r2,zero
 400a808:	f800283a 	ret

0400a80c <__gedf2>:
 400a80c:	2804d53a 	srli	r2,r5,20
 400a810:	3806d53a 	srli	r3,r7,20
 400a814:	02000434 	movhi	r8,16
 400a818:	423fffc4 	addi	r8,r8,-1
 400a81c:	1081ffcc 	andi	r2,r2,2047
 400a820:	0241ffc4 	movi	r9,2047
 400a824:	2a14703a 	and	r10,r5,r8
 400a828:	18c1ffcc 	andi	r3,r3,2047
 400a82c:	3a10703a 	and	r8,r7,r8
 400a830:	280ad7fa 	srli	r5,r5,31
 400a834:	380ed7fa 	srli	r7,r7,31
 400a838:	12401d26 	beq	r2,r9,400a8b0 <__gedf2+0xa4>
 400a83c:	0241ffc4 	movi	r9,2047
 400a840:	1a401226 	beq	r3,r9,400a88c <__gedf2+0x80>
 400a844:	1000081e 	bne	r2,zero,400a868 <__gedf2+0x5c>
 400a848:	2296b03a 	or	r11,r4,r10
 400a84c:	5813003a 	cmpeq	r9,r11,zero
 400a850:	1800091e 	bne	r3,zero,400a878 <__gedf2+0x6c>
 400a854:	3218b03a 	or	r12,r6,r8
 400a858:	6000071e 	bne	r12,zero,400a878 <__gedf2+0x6c>
 400a85c:	0005883a 	mov	r2,zero
 400a860:	5800101e 	bne	r11,zero,400a8a4 <__gedf2+0x98>
 400a864:	f800283a 	ret
 400a868:	18000c1e 	bne	r3,zero,400a89c <__gedf2+0x90>
 400a86c:	3212b03a 	or	r9,r6,r8
 400a870:	48000c26 	beq	r9,zero,400a8a4 <__gedf2+0x98>
 400a874:	0013883a 	mov	r9,zero
 400a878:	39c03fcc 	andi	r7,r7,255
 400a87c:	48000826 	beq	r9,zero,400a8a0 <__gedf2+0x94>
 400a880:	38000926 	beq	r7,zero,400a8a8 <__gedf2+0x9c>
 400a884:	00800044 	movi	r2,1
 400a888:	f800283a 	ret
 400a88c:	3212b03a 	or	r9,r6,r8
 400a890:	483fec26 	beq	r9,zero,400a844 <__alt_mem_onchip_memory2_0+0xfc005684>
 400a894:	00bfff84 	movi	r2,-2
 400a898:	f800283a 	ret
 400a89c:	39c03fcc 	andi	r7,r7,255
 400a8a0:	29c00626 	beq	r5,r7,400a8bc <__gedf2+0xb0>
 400a8a4:	283ff726 	beq	r5,zero,400a884 <__alt_mem_onchip_memory2_0+0xfc0056c4>
 400a8a8:	00bfffc4 	movi	r2,-1
 400a8ac:	f800283a 	ret
 400a8b0:	2292b03a 	or	r9,r4,r10
 400a8b4:	483fe126 	beq	r9,zero,400a83c <__alt_mem_onchip_memory2_0+0xfc00567c>
 400a8b8:	003ff606 	br	400a894 <__alt_mem_onchip_memory2_0+0xfc0056d4>
 400a8bc:	18bff916 	blt	r3,r2,400a8a4 <__alt_mem_onchip_memory2_0+0xfc0056e4>
 400a8c0:	10c00316 	blt	r2,r3,400a8d0 <__gedf2+0xc4>
 400a8c4:	42bff736 	bltu	r8,r10,400a8a4 <__alt_mem_onchip_memory2_0+0xfc0056e4>
 400a8c8:	52000326 	beq	r10,r8,400a8d8 <__gedf2+0xcc>
 400a8cc:	5200042e 	bgeu	r10,r8,400a8e0 <__gedf2+0xd4>
 400a8d0:	283fec1e 	bne	r5,zero,400a884 <__alt_mem_onchip_memory2_0+0xfc0056c4>
 400a8d4:	003ff406 	br	400a8a8 <__alt_mem_onchip_memory2_0+0xfc0056e8>
 400a8d8:	313ff236 	bltu	r6,r4,400a8a4 <__alt_mem_onchip_memory2_0+0xfc0056e4>
 400a8dc:	21bffc36 	bltu	r4,r6,400a8d0 <__alt_mem_onchip_memory2_0+0xfc005710>
 400a8e0:	0005883a 	mov	r2,zero
 400a8e4:	f800283a 	ret

0400a8e8 <__ledf2>:
 400a8e8:	2804d53a 	srli	r2,r5,20
 400a8ec:	3810d53a 	srli	r8,r7,20
 400a8f0:	00c00434 	movhi	r3,16
 400a8f4:	18ffffc4 	addi	r3,r3,-1
 400a8f8:	1081ffcc 	andi	r2,r2,2047
 400a8fc:	0241ffc4 	movi	r9,2047
 400a900:	28d4703a 	and	r10,r5,r3
 400a904:	4201ffcc 	andi	r8,r8,2047
 400a908:	38c6703a 	and	r3,r7,r3
 400a90c:	280ad7fa 	srli	r5,r5,31
 400a910:	380ed7fa 	srli	r7,r7,31
 400a914:	12401f26 	beq	r2,r9,400a994 <__ledf2+0xac>
 400a918:	0241ffc4 	movi	r9,2047
 400a91c:	42401426 	beq	r8,r9,400a970 <__ledf2+0x88>
 400a920:	1000091e 	bne	r2,zero,400a948 <__ledf2+0x60>
 400a924:	2296b03a 	or	r11,r4,r10
 400a928:	5813003a 	cmpeq	r9,r11,zero
 400a92c:	29403fcc 	andi	r5,r5,255
 400a930:	40000a1e 	bne	r8,zero,400a95c <__ledf2+0x74>
 400a934:	30d8b03a 	or	r12,r6,r3
 400a938:	6000081e 	bne	r12,zero,400a95c <__ledf2+0x74>
 400a93c:	0005883a 	mov	r2,zero
 400a940:	5800111e 	bne	r11,zero,400a988 <__ledf2+0xa0>
 400a944:	f800283a 	ret
 400a948:	29403fcc 	andi	r5,r5,255
 400a94c:	40000c1e 	bne	r8,zero,400a980 <__ledf2+0x98>
 400a950:	30d2b03a 	or	r9,r6,r3
 400a954:	48000c26 	beq	r9,zero,400a988 <__ledf2+0xa0>
 400a958:	0013883a 	mov	r9,zero
 400a95c:	39c03fcc 	andi	r7,r7,255
 400a960:	48000826 	beq	r9,zero,400a984 <__ledf2+0x9c>
 400a964:	38001126 	beq	r7,zero,400a9ac <__ledf2+0xc4>
 400a968:	00800044 	movi	r2,1
 400a96c:	f800283a 	ret
 400a970:	30d2b03a 	or	r9,r6,r3
 400a974:	483fea26 	beq	r9,zero,400a920 <__alt_mem_onchip_memory2_0+0xfc005760>
 400a978:	00800084 	movi	r2,2
 400a97c:	f800283a 	ret
 400a980:	39c03fcc 	andi	r7,r7,255
 400a984:	39400726 	beq	r7,r5,400a9a4 <__ledf2+0xbc>
 400a988:	2800081e 	bne	r5,zero,400a9ac <__ledf2+0xc4>
 400a98c:	00800044 	movi	r2,1
 400a990:	f800283a 	ret
 400a994:	2292b03a 	or	r9,r4,r10
 400a998:	483fdf26 	beq	r9,zero,400a918 <__alt_mem_onchip_memory2_0+0xfc005758>
 400a99c:	00800084 	movi	r2,2
 400a9a0:	f800283a 	ret
 400a9a4:	4080030e 	bge	r8,r2,400a9b4 <__ledf2+0xcc>
 400a9a8:	383fef26 	beq	r7,zero,400a968 <__alt_mem_onchip_memory2_0+0xfc0057a8>
 400a9ac:	00bfffc4 	movi	r2,-1
 400a9b0:	f800283a 	ret
 400a9b4:	123feb16 	blt	r2,r8,400a964 <__alt_mem_onchip_memory2_0+0xfc0057a4>
 400a9b8:	1abff336 	bltu	r3,r10,400a988 <__alt_mem_onchip_memory2_0+0xfc0057c8>
 400a9bc:	50c00326 	beq	r10,r3,400a9cc <__ledf2+0xe4>
 400a9c0:	50c0042e 	bgeu	r10,r3,400a9d4 <__ledf2+0xec>
 400a9c4:	283fe81e 	bne	r5,zero,400a968 <__alt_mem_onchip_memory2_0+0xfc0057a8>
 400a9c8:	003ff806 	br	400a9ac <__alt_mem_onchip_memory2_0+0xfc0057ec>
 400a9cc:	313fee36 	bltu	r6,r4,400a988 <__alt_mem_onchip_memory2_0+0xfc0057c8>
 400a9d0:	21bffc36 	bltu	r4,r6,400a9c4 <__alt_mem_onchip_memory2_0+0xfc005804>
 400a9d4:	0005883a 	mov	r2,zero
 400a9d8:	f800283a 	ret

0400a9dc <__muldf3>:
 400a9dc:	deffee04 	addi	sp,sp,-72
 400a9e0:	dd000c15 	stw	r20,48(sp)
 400a9e4:	2828d53a 	srli	r20,r5,20
 400a9e8:	ddc00f15 	stw	r23,60(sp)
 400a9ec:	282ed7fa 	srli	r23,r5,31
 400a9f0:	dc000815 	stw	r16,32(sp)
 400a9f4:	04000434 	movhi	r16,16
 400a9f8:	dcc00b15 	stw	r19,44(sp)
 400a9fc:	843fffc4 	addi	r16,r16,-1
 400aa00:	dfc01115 	stw	ra,68(sp)
 400aa04:	df001015 	stw	fp,64(sp)
 400aa08:	dd800e15 	stw	r22,56(sp)
 400aa0c:	dd400d15 	stw	r21,52(sp)
 400aa10:	dc800a15 	stw	r18,40(sp)
 400aa14:	dc400915 	stw	r17,36(sp)
 400aa18:	a501ffcc 	andi	r20,r20,2047
 400aa1c:	2c20703a 	and	r16,r5,r16
 400aa20:	b827883a 	mov	r19,r23
 400aa24:	ba403fcc 	andi	r9,r23,255
 400aa28:	a0006026 	beq	r20,zero,400abac <__muldf3+0x1d0>
 400aa2c:	0081ffc4 	movi	r2,2047
 400aa30:	202d883a 	mov	r22,r4
 400aa34:	a0803626 	beq	r20,r2,400ab10 <__muldf3+0x134>
 400aa38:	84000434 	orhi	r16,r16,16
 400aa3c:	200ad77a 	srli	r5,r4,29
 400aa40:	800490fa 	slli	r2,r16,3
 400aa44:	202c90fa 	slli	r22,r4,3
 400aa48:	a53f0044 	addi	r20,r20,-1023
 400aa4c:	28a0b03a 	or	r16,r5,r2
 400aa50:	002b883a 	mov	r21,zero
 400aa54:	000b883a 	mov	r5,zero
 400aa58:	3804d53a 	srli	r2,r7,20
 400aa5c:	3838d7fa 	srli	fp,r7,31
 400aa60:	04400434 	movhi	r17,16
 400aa64:	8c7fffc4 	addi	r17,r17,-1
 400aa68:	1081ffcc 	andi	r2,r2,2047
 400aa6c:	3025883a 	mov	r18,r6
 400aa70:	3c62703a 	and	r17,r7,r17
 400aa74:	e2803fcc 	andi	r10,fp,255
 400aa78:	10006d26 	beq	r2,zero,400ac30 <__muldf3+0x254>
 400aa7c:	00c1ffc4 	movi	r3,2047
 400aa80:	10c06526 	beq	r2,r3,400ac18 <__muldf3+0x23c>
 400aa84:	8c400434 	orhi	r17,r17,16
 400aa88:	300ed77a 	srli	r7,r6,29
 400aa8c:	880690fa 	slli	r3,r17,3
 400aa90:	302490fa 	slli	r18,r6,3
 400aa94:	10bf0044 	addi	r2,r2,-1023
 400aa98:	38e2b03a 	or	r17,r7,r3
 400aa9c:	000f883a 	mov	r7,zero
 400aaa0:	a087883a 	add	r3,r20,r2
 400aaa4:	010003c4 	movi	r4,15
 400aaa8:	3d44b03a 	or	r2,r7,r21
 400aaac:	e5ccf03a 	xor	r6,fp,r23
 400aab0:	1a000044 	addi	r8,r3,1
 400aab4:	20809b36 	bltu	r4,r2,400ad24 <__muldf3+0x348>
 400aab8:	100490ba 	slli	r2,r2,2
 400aabc:	01010074 	movhi	r4,1025
 400aac0:	212ab404 	addi	r4,r4,-21808
 400aac4:	1105883a 	add	r2,r2,r4
 400aac8:	10800017 	ldw	r2,0(r2)
 400aacc:	1000683a 	jmp	r2
 400aad0:	0400ad24 	muli	r16,zero,692
 400aad4:	0400ab30 	cmpltui	r16,zero,684
 400aad8:	0400ab30 	cmpltui	r16,zero,684
 400aadc:	0400ab2c 	andhi	r16,zero,684
 400aae0:	0400ad00 	call	400ad0 <__reset-0x3bff530>
 400aae4:	0400ad00 	call	400ad0 <__reset-0x3bff530>
 400aae8:	0400ace8 	cmpgeui	r16,zero,691
 400aaec:	0400ab2c 	andhi	r16,zero,684
 400aaf0:	0400ad00 	call	400ad0 <__reset-0x3bff530>
 400aaf4:	0400ace8 	cmpgeui	r16,zero,691
 400aaf8:	0400ad00 	call	400ad0 <__reset-0x3bff530>
 400aafc:	0400ab2c 	andhi	r16,zero,684
 400ab00:	0400ad10 	cmplti	r16,zero,692
 400ab04:	0400ad10 	cmplti	r16,zero,692
 400ab08:	0400ad10 	cmplti	r16,zero,692
 400ab0c:	0400b070 	cmpltui	r16,zero,705
 400ab10:	2404b03a 	or	r2,r4,r16
 400ab14:	1000711e 	bne	r2,zero,400acdc <__muldf3+0x300>
 400ab18:	05400204 	movi	r21,8
 400ab1c:	0021883a 	mov	r16,zero
 400ab20:	002d883a 	mov	r22,zero
 400ab24:	01400084 	movi	r5,2
 400ab28:	003fcb06 	br	400aa58 <__alt_mem_onchip_memory2_0+0xfc005898>
 400ab2c:	500d883a 	mov	r6,r10
 400ab30:	00800084 	movi	r2,2
 400ab34:	38805926 	beq	r7,r2,400ac9c <__muldf3+0x2c0>
 400ab38:	008000c4 	movi	r2,3
 400ab3c:	3881bb26 	beq	r7,r2,400b22c <__muldf3+0x850>
 400ab40:	00800044 	movi	r2,1
 400ab44:	3881961e 	bne	r7,r2,400b1a0 <__muldf3+0x7c4>
 400ab48:	3027883a 	mov	r19,r6
 400ab4c:	0005883a 	mov	r2,zero
 400ab50:	0021883a 	mov	r16,zero
 400ab54:	002d883a 	mov	r22,zero
 400ab58:	1004953a 	slli	r2,r2,20
 400ab5c:	98c03fcc 	andi	r3,r19,255
 400ab60:	04400434 	movhi	r17,16
 400ab64:	8c7fffc4 	addi	r17,r17,-1
 400ab68:	180697fa 	slli	r3,r3,31
 400ab6c:	8460703a 	and	r16,r16,r17
 400ab70:	80a0b03a 	or	r16,r16,r2
 400ab74:	80c6b03a 	or	r3,r16,r3
 400ab78:	b005883a 	mov	r2,r22
 400ab7c:	dfc01117 	ldw	ra,68(sp)
 400ab80:	df001017 	ldw	fp,64(sp)
 400ab84:	ddc00f17 	ldw	r23,60(sp)
 400ab88:	dd800e17 	ldw	r22,56(sp)
 400ab8c:	dd400d17 	ldw	r21,52(sp)
 400ab90:	dd000c17 	ldw	r20,48(sp)
 400ab94:	dcc00b17 	ldw	r19,44(sp)
 400ab98:	dc800a17 	ldw	r18,40(sp)
 400ab9c:	dc400917 	ldw	r17,36(sp)
 400aba0:	dc000817 	ldw	r16,32(sp)
 400aba4:	dec01204 	addi	sp,sp,72
 400aba8:	f800283a 	ret
 400abac:	2404b03a 	or	r2,r4,r16
 400abb0:	202b883a 	mov	r21,r4
 400abb4:	10004426 	beq	r2,zero,400acc8 <__muldf3+0x2ec>
 400abb8:	80015126 	beq	r16,zero,400b100 <__muldf3+0x724>
 400abbc:	8009883a 	mov	r4,r16
 400abc0:	d9800715 	stw	r6,28(sp)
 400abc4:	d9c00215 	stw	r7,8(sp)
 400abc8:	da400415 	stw	r9,16(sp)
 400abcc:	400bd480 	call	400bd48 <__clzsi2>
 400abd0:	d9800717 	ldw	r6,28(sp)
 400abd4:	d9c00217 	ldw	r7,8(sp)
 400abd8:	da400417 	ldw	r9,16(sp)
 400abdc:	113ffd44 	addi	r4,r2,-11
 400abe0:	00c00704 	movi	r3,28
 400abe4:	19014216 	blt	r3,r4,400b0f0 <__muldf3+0x714>
 400abe8:	00c00744 	movi	r3,29
 400abec:	15bffe04 	addi	r22,r2,-8
 400abf0:	1907c83a 	sub	r3,r3,r4
 400abf4:	85a0983a 	sll	r16,r16,r22
 400abf8:	a8c6d83a 	srl	r3,r21,r3
 400abfc:	adac983a 	sll	r22,r21,r22
 400ac00:	1c20b03a 	or	r16,r3,r16
 400ac04:	1080fcc4 	addi	r2,r2,1011
 400ac08:	00a9c83a 	sub	r20,zero,r2
 400ac0c:	002b883a 	mov	r21,zero
 400ac10:	000b883a 	mov	r5,zero
 400ac14:	003f9006 	br	400aa58 <__alt_mem_onchip_memory2_0+0xfc005898>
 400ac18:	3446b03a 	or	r3,r6,r17
 400ac1c:	1800281e 	bne	r3,zero,400acc0 <__muldf3+0x2e4>
 400ac20:	0023883a 	mov	r17,zero
 400ac24:	0025883a 	mov	r18,zero
 400ac28:	01c00084 	movi	r7,2
 400ac2c:	003f9c06 	br	400aaa0 <__alt_mem_onchip_memory2_0+0xfc0058e0>
 400ac30:	3446b03a 	or	r3,r6,r17
 400ac34:	18001e26 	beq	r3,zero,400acb0 <__muldf3+0x2d4>
 400ac38:	88012126 	beq	r17,zero,400b0c0 <__muldf3+0x6e4>
 400ac3c:	8809883a 	mov	r4,r17
 400ac40:	d9400215 	stw	r5,8(sp)
 400ac44:	d9800715 	stw	r6,28(sp)
 400ac48:	da400415 	stw	r9,16(sp)
 400ac4c:	da800315 	stw	r10,12(sp)
 400ac50:	400bd480 	call	400bd48 <__clzsi2>
 400ac54:	d9400217 	ldw	r5,8(sp)
 400ac58:	d9800717 	ldw	r6,28(sp)
 400ac5c:	da400417 	ldw	r9,16(sp)
 400ac60:	da800317 	ldw	r10,12(sp)
 400ac64:	113ffd44 	addi	r4,r2,-11
 400ac68:	00c00704 	movi	r3,28
 400ac6c:	19011016 	blt	r3,r4,400b0b0 <__muldf3+0x6d4>
 400ac70:	00c00744 	movi	r3,29
 400ac74:	14bffe04 	addi	r18,r2,-8
 400ac78:	1907c83a 	sub	r3,r3,r4
 400ac7c:	8ca2983a 	sll	r17,r17,r18
 400ac80:	30c6d83a 	srl	r3,r6,r3
 400ac84:	34a4983a 	sll	r18,r6,r18
 400ac88:	1c62b03a 	or	r17,r3,r17
 400ac8c:	1080fcc4 	addi	r2,r2,1011
 400ac90:	0085c83a 	sub	r2,zero,r2
 400ac94:	000f883a 	mov	r7,zero
 400ac98:	003f8106 	br	400aaa0 <__alt_mem_onchip_memory2_0+0xfc0058e0>
 400ac9c:	3027883a 	mov	r19,r6
 400aca0:	0081ffc4 	movi	r2,2047
 400aca4:	0021883a 	mov	r16,zero
 400aca8:	002d883a 	mov	r22,zero
 400acac:	003faa06 	br	400ab58 <__alt_mem_onchip_memory2_0+0xfc005998>
 400acb0:	0023883a 	mov	r17,zero
 400acb4:	0025883a 	mov	r18,zero
 400acb8:	01c00044 	movi	r7,1
 400acbc:	003f7806 	br	400aaa0 <__alt_mem_onchip_memory2_0+0xfc0058e0>
 400acc0:	01c000c4 	movi	r7,3
 400acc4:	003f7606 	br	400aaa0 <__alt_mem_onchip_memory2_0+0xfc0058e0>
 400acc8:	05400104 	movi	r21,4
 400accc:	0021883a 	mov	r16,zero
 400acd0:	002d883a 	mov	r22,zero
 400acd4:	01400044 	movi	r5,1
 400acd8:	003f5f06 	br	400aa58 <__alt_mem_onchip_memory2_0+0xfc005898>
 400acdc:	05400304 	movi	r21,12
 400ace0:	014000c4 	movi	r5,3
 400ace4:	003f5c06 	br	400aa58 <__alt_mem_onchip_memory2_0+0xfc005898>
 400ace8:	04000434 	movhi	r16,16
 400acec:	0027883a 	mov	r19,zero
 400acf0:	843fffc4 	addi	r16,r16,-1
 400acf4:	05bfffc4 	movi	r22,-1
 400acf8:	0081ffc4 	movi	r2,2047
 400acfc:	003f9606 	br	400ab58 <__alt_mem_onchip_memory2_0+0xfc005998>
 400ad00:	8023883a 	mov	r17,r16
 400ad04:	b025883a 	mov	r18,r22
 400ad08:	280f883a 	mov	r7,r5
 400ad0c:	003f8806 	br	400ab30 <__alt_mem_onchip_memory2_0+0xfc005970>
 400ad10:	8023883a 	mov	r17,r16
 400ad14:	b025883a 	mov	r18,r22
 400ad18:	480d883a 	mov	r6,r9
 400ad1c:	280f883a 	mov	r7,r5
 400ad20:	003f8306 	br	400ab30 <__alt_mem_onchip_memory2_0+0xfc005970>
 400ad24:	b026d43a 	srli	r19,r22,16
 400ad28:	902ed43a 	srli	r23,r18,16
 400ad2c:	b5bfffcc 	andi	r22,r22,65535
 400ad30:	94bfffcc 	andi	r18,r18,65535
 400ad34:	b00b883a 	mov	r5,r22
 400ad38:	9009883a 	mov	r4,r18
 400ad3c:	d8c00515 	stw	r3,20(sp)
 400ad40:	d9800715 	stw	r6,28(sp)
 400ad44:	da000615 	stw	r8,24(sp)
 400ad48:	4000af80 	call	4000af8 <__mulsi3>
 400ad4c:	980b883a 	mov	r5,r19
 400ad50:	9009883a 	mov	r4,r18
 400ad54:	1029883a 	mov	r20,r2
 400ad58:	4000af80 	call	4000af8 <__mulsi3>
 400ad5c:	b80b883a 	mov	r5,r23
 400ad60:	9809883a 	mov	r4,r19
 400ad64:	102b883a 	mov	r21,r2
 400ad68:	4000af80 	call	4000af8 <__mulsi3>
 400ad6c:	b809883a 	mov	r4,r23
 400ad70:	b00b883a 	mov	r5,r22
 400ad74:	1039883a 	mov	fp,r2
 400ad78:	4000af80 	call	4000af8 <__mulsi3>
 400ad7c:	a008d43a 	srli	r4,r20,16
 400ad80:	1545883a 	add	r2,r2,r21
 400ad84:	d8c00517 	ldw	r3,20(sp)
 400ad88:	2085883a 	add	r2,r4,r2
 400ad8c:	d9800717 	ldw	r6,28(sp)
 400ad90:	da000617 	ldw	r8,24(sp)
 400ad94:	1540022e 	bgeu	r2,r21,400ada0 <__muldf3+0x3c4>
 400ad98:	01000074 	movhi	r4,1
 400ad9c:	e139883a 	add	fp,fp,r4
 400ada0:	100e943a 	slli	r7,r2,16
 400ada4:	1004d43a 	srli	r2,r2,16
 400ada8:	882ad43a 	srli	r21,r17,16
 400adac:	a53fffcc 	andi	r20,r20,65535
 400adb0:	8c7fffcc 	andi	r17,r17,65535
 400adb4:	3d29883a 	add	r20,r7,r20
 400adb8:	b00b883a 	mov	r5,r22
 400adbc:	8809883a 	mov	r4,r17
 400adc0:	d8c00515 	stw	r3,20(sp)
 400adc4:	d9800715 	stw	r6,28(sp)
 400adc8:	da000615 	stw	r8,24(sp)
 400adcc:	dd000115 	stw	r20,4(sp)
 400add0:	d8800015 	stw	r2,0(sp)
 400add4:	4000af80 	call	4000af8 <__mulsi3>
 400add8:	980b883a 	mov	r5,r19
 400addc:	8809883a 	mov	r4,r17
 400ade0:	d8800215 	stw	r2,8(sp)
 400ade4:	4000af80 	call	4000af8 <__mulsi3>
 400ade8:	9809883a 	mov	r4,r19
 400adec:	a80b883a 	mov	r5,r21
 400adf0:	1029883a 	mov	r20,r2
 400adf4:	4000af80 	call	4000af8 <__mulsi3>
 400adf8:	b00b883a 	mov	r5,r22
 400adfc:	a809883a 	mov	r4,r21
 400ae00:	d8800415 	stw	r2,16(sp)
 400ae04:	4000af80 	call	4000af8 <__mulsi3>
 400ae08:	d9c00217 	ldw	r7,8(sp)
 400ae0c:	1505883a 	add	r2,r2,r20
 400ae10:	d8c00517 	ldw	r3,20(sp)
 400ae14:	3826d43a 	srli	r19,r7,16
 400ae18:	d9800717 	ldw	r6,28(sp)
 400ae1c:	da000617 	ldw	r8,24(sp)
 400ae20:	9885883a 	add	r2,r19,r2
 400ae24:	da400417 	ldw	r9,16(sp)
 400ae28:	1500022e 	bgeu	r2,r20,400ae34 <__muldf3+0x458>
 400ae2c:	01000074 	movhi	r4,1
 400ae30:	4913883a 	add	r9,r9,r4
 400ae34:	1028d43a 	srli	r20,r2,16
 400ae38:	1004943a 	slli	r2,r2,16
 400ae3c:	802cd43a 	srli	r22,r16,16
 400ae40:	843fffcc 	andi	r16,r16,65535
 400ae44:	3cffffcc 	andi	r19,r7,65535
 400ae48:	9009883a 	mov	r4,r18
 400ae4c:	800b883a 	mov	r5,r16
 400ae50:	a269883a 	add	r20,r20,r9
 400ae54:	d8c00515 	stw	r3,20(sp)
 400ae58:	d9800715 	stw	r6,28(sp)
 400ae5c:	da000615 	stw	r8,24(sp)
 400ae60:	14e7883a 	add	r19,r2,r19
 400ae64:	4000af80 	call	4000af8 <__mulsi3>
 400ae68:	9009883a 	mov	r4,r18
 400ae6c:	b00b883a 	mov	r5,r22
 400ae70:	d8800315 	stw	r2,12(sp)
 400ae74:	4000af80 	call	4000af8 <__mulsi3>
 400ae78:	b809883a 	mov	r4,r23
 400ae7c:	b00b883a 	mov	r5,r22
 400ae80:	d8800215 	stw	r2,8(sp)
 400ae84:	4000af80 	call	4000af8 <__mulsi3>
 400ae88:	b80b883a 	mov	r5,r23
 400ae8c:	8009883a 	mov	r4,r16
 400ae90:	d8800415 	stw	r2,16(sp)
 400ae94:	4000af80 	call	4000af8 <__mulsi3>
 400ae98:	da800317 	ldw	r10,12(sp)
 400ae9c:	d9c00217 	ldw	r7,8(sp)
 400aea0:	d9000017 	ldw	r4,0(sp)
 400aea4:	502ed43a 	srli	r23,r10,16
 400aea8:	11c5883a 	add	r2,r2,r7
 400aeac:	24e5883a 	add	r18,r4,r19
 400aeb0:	b885883a 	add	r2,r23,r2
 400aeb4:	d8c00517 	ldw	r3,20(sp)
 400aeb8:	d9800717 	ldw	r6,28(sp)
 400aebc:	da000617 	ldw	r8,24(sp)
 400aec0:	da400417 	ldw	r9,16(sp)
 400aec4:	11c0022e 	bgeu	r2,r7,400aed0 <__muldf3+0x4f4>
 400aec8:	01000074 	movhi	r4,1
 400aecc:	4913883a 	add	r9,r9,r4
 400aed0:	100ed43a 	srli	r7,r2,16
 400aed4:	1004943a 	slli	r2,r2,16
 400aed8:	55ffffcc 	andi	r23,r10,65535
 400aedc:	3a53883a 	add	r9,r7,r9
 400aee0:	8809883a 	mov	r4,r17
 400aee4:	800b883a 	mov	r5,r16
 400aee8:	d8c00515 	stw	r3,20(sp)
 400aeec:	d9800715 	stw	r6,28(sp)
 400aef0:	da000615 	stw	r8,24(sp)
 400aef4:	da400415 	stw	r9,16(sp)
 400aef8:	15ef883a 	add	r23,r2,r23
 400aefc:	4000af80 	call	4000af8 <__mulsi3>
 400af00:	8809883a 	mov	r4,r17
 400af04:	b00b883a 	mov	r5,r22
 400af08:	d8800215 	stw	r2,8(sp)
 400af0c:	4000af80 	call	4000af8 <__mulsi3>
 400af10:	b00b883a 	mov	r5,r22
 400af14:	a809883a 	mov	r4,r21
 400af18:	d8800315 	stw	r2,12(sp)
 400af1c:	4000af80 	call	4000af8 <__mulsi3>
 400af20:	8009883a 	mov	r4,r16
 400af24:	a80b883a 	mov	r5,r21
 400af28:	1023883a 	mov	r17,r2
 400af2c:	4000af80 	call	4000af8 <__mulsi3>
 400af30:	d9c00217 	ldw	r7,8(sp)
 400af34:	da800317 	ldw	r10,12(sp)
 400af38:	d8c00517 	ldw	r3,20(sp)
 400af3c:	3808d43a 	srli	r4,r7,16
 400af40:	1285883a 	add	r2,r2,r10
 400af44:	d9800717 	ldw	r6,28(sp)
 400af48:	2085883a 	add	r2,r4,r2
 400af4c:	da000617 	ldw	r8,24(sp)
 400af50:	da400417 	ldw	r9,16(sp)
 400af54:	1280022e 	bgeu	r2,r10,400af60 <__muldf3+0x584>
 400af58:	01000074 	movhi	r4,1
 400af5c:	8923883a 	add	r17,r17,r4
 400af60:	1008943a 	slli	r4,r2,16
 400af64:	39ffffcc 	andi	r7,r7,65535
 400af68:	e4b9883a 	add	fp,fp,r18
 400af6c:	21cf883a 	add	r7,r4,r7
 400af70:	e4e7803a 	cmpltu	r19,fp,r19
 400af74:	3d0f883a 	add	r7,r7,r20
 400af78:	bf39883a 	add	fp,r23,fp
 400af7c:	99c9883a 	add	r4,r19,r7
 400af80:	e5ef803a 	cmpltu	r23,fp,r23
 400af84:	490b883a 	add	r5,r9,r4
 400af88:	1004d43a 	srli	r2,r2,16
 400af8c:	b965883a 	add	r18,r23,r5
 400af90:	24c9803a 	cmpltu	r4,r4,r19
 400af94:	3d29803a 	cmpltu	r20,r7,r20
 400af98:	a128b03a 	or	r20,r20,r4
 400af9c:	95ef803a 	cmpltu	r23,r18,r23
 400afa0:	2a53803a 	cmpltu	r9,r5,r9
 400afa4:	a0a9883a 	add	r20,r20,r2
 400afa8:	4deeb03a 	or	r23,r9,r23
 400afac:	a5ef883a 	add	r23,r20,r23
 400afb0:	bc63883a 	add	r17,r23,r17
 400afb4:	e004927a 	slli	r2,fp,9
 400afb8:	d9000117 	ldw	r4,4(sp)
 400afbc:	882e927a 	slli	r23,r17,9
 400afc0:	9022d5fa 	srli	r17,r18,23
 400afc4:	e038d5fa 	srli	fp,fp,23
 400afc8:	1104b03a 	or	r2,r2,r4
 400afcc:	9024927a 	slli	r18,r18,9
 400afd0:	1004c03a 	cmpne	r2,r2,zero
 400afd4:	bc62b03a 	or	r17,r23,r17
 400afd8:	1738b03a 	or	fp,r2,fp
 400afdc:	8880402c 	andhi	r2,r17,256
 400afe0:	e4a4b03a 	or	r18,fp,r18
 400afe4:	10000726 	beq	r2,zero,400b004 <__muldf3+0x628>
 400afe8:	9006d07a 	srli	r3,r18,1
 400afec:	880497fa 	slli	r2,r17,31
 400aff0:	9480004c 	andi	r18,r18,1
 400aff4:	8822d07a 	srli	r17,r17,1
 400aff8:	1ca4b03a 	or	r18,r3,r18
 400affc:	14a4b03a 	or	r18,r2,r18
 400b000:	4007883a 	mov	r3,r8
 400b004:	1880ffc4 	addi	r2,r3,1023
 400b008:	0080460e 	bge	zero,r2,400b124 <__muldf3+0x748>
 400b00c:	910001cc 	andi	r4,r18,7
 400b010:	20000726 	beq	r4,zero,400b030 <__muldf3+0x654>
 400b014:	910003cc 	andi	r4,r18,15
 400b018:	01400104 	movi	r5,4
 400b01c:	21400426 	beq	r4,r5,400b030 <__muldf3+0x654>
 400b020:	9149883a 	add	r4,r18,r5
 400b024:	24a5803a 	cmpltu	r18,r4,r18
 400b028:	8ca3883a 	add	r17,r17,r18
 400b02c:	2025883a 	mov	r18,r4
 400b030:	8900402c 	andhi	r4,r17,256
 400b034:	20000426 	beq	r4,zero,400b048 <__muldf3+0x66c>
 400b038:	18810004 	addi	r2,r3,1024
 400b03c:	00ffc034 	movhi	r3,65280
 400b040:	18ffffc4 	addi	r3,r3,-1
 400b044:	88e2703a 	and	r17,r17,r3
 400b048:	00c1ff84 	movi	r3,2046
 400b04c:	18bf1316 	blt	r3,r2,400ac9c <__alt_mem_onchip_memory2_0+0xfc005adc>
 400b050:	882c977a 	slli	r22,r17,29
 400b054:	9024d0fa 	srli	r18,r18,3
 400b058:	8822927a 	slli	r17,r17,9
 400b05c:	1081ffcc 	andi	r2,r2,2047
 400b060:	b4acb03a 	or	r22,r22,r18
 400b064:	8820d33a 	srli	r16,r17,12
 400b068:	3027883a 	mov	r19,r6
 400b06c:	003eba06 	br	400ab58 <__alt_mem_onchip_memory2_0+0xfc005998>
 400b070:	8080022c 	andhi	r2,r16,8
 400b074:	10000926 	beq	r2,zero,400b09c <__muldf3+0x6c0>
 400b078:	8880022c 	andhi	r2,r17,8
 400b07c:	1000071e 	bne	r2,zero,400b09c <__muldf3+0x6c0>
 400b080:	00800434 	movhi	r2,16
 400b084:	8c000234 	orhi	r16,r17,8
 400b088:	10bfffc4 	addi	r2,r2,-1
 400b08c:	e027883a 	mov	r19,fp
 400b090:	80a0703a 	and	r16,r16,r2
 400b094:	902d883a 	mov	r22,r18
 400b098:	003f1706 	br	400acf8 <__alt_mem_onchip_memory2_0+0xfc005b38>
 400b09c:	00800434 	movhi	r2,16
 400b0a0:	84000234 	orhi	r16,r16,8
 400b0a4:	10bfffc4 	addi	r2,r2,-1
 400b0a8:	80a0703a 	and	r16,r16,r2
 400b0ac:	003f1206 	br	400acf8 <__alt_mem_onchip_memory2_0+0xfc005b38>
 400b0b0:	147ff604 	addi	r17,r2,-40
 400b0b4:	3462983a 	sll	r17,r6,r17
 400b0b8:	0025883a 	mov	r18,zero
 400b0bc:	003ef306 	br	400ac8c <__alt_mem_onchip_memory2_0+0xfc005acc>
 400b0c0:	3009883a 	mov	r4,r6
 400b0c4:	d9400215 	stw	r5,8(sp)
 400b0c8:	d9800715 	stw	r6,28(sp)
 400b0cc:	da400415 	stw	r9,16(sp)
 400b0d0:	da800315 	stw	r10,12(sp)
 400b0d4:	400bd480 	call	400bd48 <__clzsi2>
 400b0d8:	10800804 	addi	r2,r2,32
 400b0dc:	da800317 	ldw	r10,12(sp)
 400b0e0:	da400417 	ldw	r9,16(sp)
 400b0e4:	d9800717 	ldw	r6,28(sp)
 400b0e8:	d9400217 	ldw	r5,8(sp)
 400b0ec:	003edd06 	br	400ac64 <__alt_mem_onchip_memory2_0+0xfc005aa4>
 400b0f0:	143ff604 	addi	r16,r2,-40
 400b0f4:	ac20983a 	sll	r16,r21,r16
 400b0f8:	002d883a 	mov	r22,zero
 400b0fc:	003ec106 	br	400ac04 <__alt_mem_onchip_memory2_0+0xfc005a44>
 400b100:	d9800715 	stw	r6,28(sp)
 400b104:	d9c00215 	stw	r7,8(sp)
 400b108:	da400415 	stw	r9,16(sp)
 400b10c:	400bd480 	call	400bd48 <__clzsi2>
 400b110:	10800804 	addi	r2,r2,32
 400b114:	da400417 	ldw	r9,16(sp)
 400b118:	d9c00217 	ldw	r7,8(sp)
 400b11c:	d9800717 	ldw	r6,28(sp)
 400b120:	003eae06 	br	400abdc <__alt_mem_onchip_memory2_0+0xfc005a1c>
 400b124:	00c00044 	movi	r3,1
 400b128:	1887c83a 	sub	r3,r3,r2
 400b12c:	01000e04 	movi	r4,56
 400b130:	20fe8516 	blt	r4,r3,400ab48 <__alt_mem_onchip_memory2_0+0xfc005988>
 400b134:	010007c4 	movi	r4,31
 400b138:	20c01b16 	blt	r4,r3,400b1a8 <__muldf3+0x7cc>
 400b13c:	00800804 	movi	r2,32
 400b140:	10c5c83a 	sub	r2,r2,r3
 400b144:	888a983a 	sll	r5,r17,r2
 400b148:	90c8d83a 	srl	r4,r18,r3
 400b14c:	9084983a 	sll	r2,r18,r2
 400b150:	88e2d83a 	srl	r17,r17,r3
 400b154:	2906b03a 	or	r3,r5,r4
 400b158:	1004c03a 	cmpne	r2,r2,zero
 400b15c:	1886b03a 	or	r3,r3,r2
 400b160:	188001cc 	andi	r2,r3,7
 400b164:	10000726 	beq	r2,zero,400b184 <__muldf3+0x7a8>
 400b168:	188003cc 	andi	r2,r3,15
 400b16c:	01000104 	movi	r4,4
 400b170:	11000426 	beq	r2,r4,400b184 <__muldf3+0x7a8>
 400b174:	1805883a 	mov	r2,r3
 400b178:	10c00104 	addi	r3,r2,4
 400b17c:	1885803a 	cmpltu	r2,r3,r2
 400b180:	88a3883a 	add	r17,r17,r2
 400b184:	8880202c 	andhi	r2,r17,128
 400b188:	10001c26 	beq	r2,zero,400b1fc <__muldf3+0x820>
 400b18c:	3027883a 	mov	r19,r6
 400b190:	00800044 	movi	r2,1
 400b194:	0021883a 	mov	r16,zero
 400b198:	002d883a 	mov	r22,zero
 400b19c:	003e6e06 	br	400ab58 <__alt_mem_onchip_memory2_0+0xfc005998>
 400b1a0:	4007883a 	mov	r3,r8
 400b1a4:	003f9706 	br	400b004 <__alt_mem_onchip_memory2_0+0xfc005e44>
 400b1a8:	017ff844 	movi	r5,-31
 400b1ac:	2885c83a 	sub	r2,r5,r2
 400b1b0:	888ad83a 	srl	r5,r17,r2
 400b1b4:	00800804 	movi	r2,32
 400b1b8:	18801a26 	beq	r3,r2,400b224 <__muldf3+0x848>
 400b1bc:	01001004 	movi	r4,64
 400b1c0:	20c7c83a 	sub	r3,r4,r3
 400b1c4:	88e2983a 	sll	r17,r17,r3
 400b1c8:	8ca4b03a 	or	r18,r17,r18
 400b1cc:	9004c03a 	cmpne	r2,r18,zero
 400b1d0:	2884b03a 	or	r2,r5,r2
 400b1d4:	144001cc 	andi	r17,r2,7
 400b1d8:	88000d1e 	bne	r17,zero,400b210 <__muldf3+0x834>
 400b1dc:	0021883a 	mov	r16,zero
 400b1e0:	102cd0fa 	srli	r22,r2,3
 400b1e4:	3027883a 	mov	r19,r6
 400b1e8:	0005883a 	mov	r2,zero
 400b1ec:	b46cb03a 	or	r22,r22,r17
 400b1f0:	003e5906 	br	400ab58 <__alt_mem_onchip_memory2_0+0xfc005998>
 400b1f4:	1007883a 	mov	r3,r2
 400b1f8:	0023883a 	mov	r17,zero
 400b1fc:	8820927a 	slli	r16,r17,9
 400b200:	1805883a 	mov	r2,r3
 400b204:	8822977a 	slli	r17,r17,29
 400b208:	8020d33a 	srli	r16,r16,12
 400b20c:	003ff406 	br	400b1e0 <__alt_mem_onchip_memory2_0+0xfc006020>
 400b210:	10c003cc 	andi	r3,r2,15
 400b214:	01000104 	movi	r4,4
 400b218:	193ff626 	beq	r3,r4,400b1f4 <__alt_mem_onchip_memory2_0+0xfc006034>
 400b21c:	0023883a 	mov	r17,zero
 400b220:	003fd506 	br	400b178 <__alt_mem_onchip_memory2_0+0xfc005fb8>
 400b224:	0023883a 	mov	r17,zero
 400b228:	003fe706 	br	400b1c8 <__alt_mem_onchip_memory2_0+0xfc006008>
 400b22c:	00800434 	movhi	r2,16
 400b230:	8c000234 	orhi	r16,r17,8
 400b234:	10bfffc4 	addi	r2,r2,-1
 400b238:	3027883a 	mov	r19,r6
 400b23c:	80a0703a 	and	r16,r16,r2
 400b240:	902d883a 	mov	r22,r18
 400b244:	003eac06 	br	400acf8 <__alt_mem_onchip_memory2_0+0xfc005b38>

0400b248 <__subdf3>:
 400b248:	02000434 	movhi	r8,16
 400b24c:	423fffc4 	addi	r8,r8,-1
 400b250:	defffb04 	addi	sp,sp,-20
 400b254:	2a14703a 	and	r10,r5,r8
 400b258:	3812d53a 	srli	r9,r7,20
 400b25c:	3a10703a 	and	r8,r7,r8
 400b260:	2006d77a 	srli	r3,r4,29
 400b264:	3004d77a 	srli	r2,r6,29
 400b268:	dc000015 	stw	r16,0(sp)
 400b26c:	501490fa 	slli	r10,r10,3
 400b270:	2820d53a 	srli	r16,r5,20
 400b274:	401090fa 	slli	r8,r8,3
 400b278:	dc800215 	stw	r18,8(sp)
 400b27c:	dc400115 	stw	r17,4(sp)
 400b280:	dfc00415 	stw	ra,16(sp)
 400b284:	202290fa 	slli	r17,r4,3
 400b288:	dcc00315 	stw	r19,12(sp)
 400b28c:	4a41ffcc 	andi	r9,r9,2047
 400b290:	0101ffc4 	movi	r4,2047
 400b294:	2824d7fa 	srli	r18,r5,31
 400b298:	8401ffcc 	andi	r16,r16,2047
 400b29c:	50c6b03a 	or	r3,r10,r3
 400b2a0:	380ed7fa 	srli	r7,r7,31
 400b2a4:	408ab03a 	or	r5,r8,r2
 400b2a8:	300c90fa 	slli	r6,r6,3
 400b2ac:	49009626 	beq	r9,r4,400b508 <__subdf3+0x2c0>
 400b2b0:	39c0005c 	xori	r7,r7,1
 400b2b4:	8245c83a 	sub	r2,r16,r9
 400b2b8:	3c807426 	beq	r7,r18,400b48c <__subdf3+0x244>
 400b2bc:	0080af0e 	bge	zero,r2,400b57c <__subdf3+0x334>
 400b2c0:	48002a1e 	bne	r9,zero,400b36c <__subdf3+0x124>
 400b2c4:	2988b03a 	or	r4,r5,r6
 400b2c8:	20009a1e 	bne	r4,zero,400b534 <__subdf3+0x2ec>
 400b2cc:	888001cc 	andi	r2,r17,7
 400b2d0:	10000726 	beq	r2,zero,400b2f0 <__subdf3+0xa8>
 400b2d4:	888003cc 	andi	r2,r17,15
 400b2d8:	01000104 	movi	r4,4
 400b2dc:	11000426 	beq	r2,r4,400b2f0 <__subdf3+0xa8>
 400b2e0:	890b883a 	add	r5,r17,r4
 400b2e4:	2c63803a 	cmpltu	r17,r5,r17
 400b2e8:	1c47883a 	add	r3,r3,r17
 400b2ec:	2823883a 	mov	r17,r5
 400b2f0:	1880202c 	andhi	r2,r3,128
 400b2f4:	10005926 	beq	r2,zero,400b45c <__subdf3+0x214>
 400b2f8:	84000044 	addi	r16,r16,1
 400b2fc:	0081ffc4 	movi	r2,2047
 400b300:	8080be26 	beq	r16,r2,400b5fc <__subdf3+0x3b4>
 400b304:	017fe034 	movhi	r5,65408
 400b308:	297fffc4 	addi	r5,r5,-1
 400b30c:	1946703a 	and	r3,r3,r5
 400b310:	1804977a 	slli	r2,r3,29
 400b314:	1806927a 	slli	r3,r3,9
 400b318:	8822d0fa 	srli	r17,r17,3
 400b31c:	8401ffcc 	andi	r16,r16,2047
 400b320:	180ad33a 	srli	r5,r3,12
 400b324:	9100004c 	andi	r4,r18,1
 400b328:	1444b03a 	or	r2,r2,r17
 400b32c:	80c1ffcc 	andi	r3,r16,2047
 400b330:	1820953a 	slli	r16,r3,20
 400b334:	20c03fcc 	andi	r3,r4,255
 400b338:	180897fa 	slli	r4,r3,31
 400b33c:	00c00434 	movhi	r3,16
 400b340:	18ffffc4 	addi	r3,r3,-1
 400b344:	28c6703a 	and	r3,r5,r3
 400b348:	1c06b03a 	or	r3,r3,r16
 400b34c:	1906b03a 	or	r3,r3,r4
 400b350:	dfc00417 	ldw	ra,16(sp)
 400b354:	dcc00317 	ldw	r19,12(sp)
 400b358:	dc800217 	ldw	r18,8(sp)
 400b35c:	dc400117 	ldw	r17,4(sp)
 400b360:	dc000017 	ldw	r16,0(sp)
 400b364:	dec00504 	addi	sp,sp,20
 400b368:	f800283a 	ret
 400b36c:	0101ffc4 	movi	r4,2047
 400b370:	813fd626 	beq	r16,r4,400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b374:	29402034 	orhi	r5,r5,128
 400b378:	01000e04 	movi	r4,56
 400b37c:	2080a316 	blt	r4,r2,400b60c <__subdf3+0x3c4>
 400b380:	010007c4 	movi	r4,31
 400b384:	2080c616 	blt	r4,r2,400b6a0 <__subdf3+0x458>
 400b388:	01000804 	movi	r4,32
 400b38c:	2089c83a 	sub	r4,r4,r2
 400b390:	2910983a 	sll	r8,r5,r4
 400b394:	308ed83a 	srl	r7,r6,r2
 400b398:	3108983a 	sll	r4,r6,r4
 400b39c:	2884d83a 	srl	r2,r5,r2
 400b3a0:	41ccb03a 	or	r6,r8,r7
 400b3a4:	2008c03a 	cmpne	r4,r4,zero
 400b3a8:	310cb03a 	or	r6,r6,r4
 400b3ac:	898dc83a 	sub	r6,r17,r6
 400b3b0:	89a3803a 	cmpltu	r17,r17,r6
 400b3b4:	1887c83a 	sub	r3,r3,r2
 400b3b8:	1c47c83a 	sub	r3,r3,r17
 400b3bc:	3023883a 	mov	r17,r6
 400b3c0:	1880202c 	andhi	r2,r3,128
 400b3c4:	10002326 	beq	r2,zero,400b454 <__subdf3+0x20c>
 400b3c8:	04c02034 	movhi	r19,128
 400b3cc:	9cffffc4 	addi	r19,r19,-1
 400b3d0:	1ce6703a 	and	r19,r3,r19
 400b3d4:	98007a26 	beq	r19,zero,400b5c0 <__subdf3+0x378>
 400b3d8:	9809883a 	mov	r4,r19
 400b3dc:	400bd480 	call	400bd48 <__clzsi2>
 400b3e0:	113ffe04 	addi	r4,r2,-8
 400b3e4:	00c007c4 	movi	r3,31
 400b3e8:	19007b16 	blt	r3,r4,400b5d8 <__subdf3+0x390>
 400b3ec:	00800804 	movi	r2,32
 400b3f0:	1105c83a 	sub	r2,r2,r4
 400b3f4:	8884d83a 	srl	r2,r17,r2
 400b3f8:	9906983a 	sll	r3,r19,r4
 400b3fc:	8922983a 	sll	r17,r17,r4
 400b400:	10c4b03a 	or	r2,r2,r3
 400b404:	24007816 	blt	r4,r16,400b5e8 <__subdf3+0x3a0>
 400b408:	2421c83a 	sub	r16,r4,r16
 400b40c:	80c00044 	addi	r3,r16,1
 400b410:	010007c4 	movi	r4,31
 400b414:	20c09516 	blt	r4,r3,400b66c <__subdf3+0x424>
 400b418:	01400804 	movi	r5,32
 400b41c:	28cbc83a 	sub	r5,r5,r3
 400b420:	88c8d83a 	srl	r4,r17,r3
 400b424:	8962983a 	sll	r17,r17,r5
 400b428:	114a983a 	sll	r5,r2,r5
 400b42c:	10c6d83a 	srl	r3,r2,r3
 400b430:	8804c03a 	cmpne	r2,r17,zero
 400b434:	290ab03a 	or	r5,r5,r4
 400b438:	28a2b03a 	or	r17,r5,r2
 400b43c:	0021883a 	mov	r16,zero
 400b440:	003fa206 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b444:	2090b03a 	or	r8,r4,r2
 400b448:	40018e26 	beq	r8,zero,400ba84 <__subdf3+0x83c>
 400b44c:	1007883a 	mov	r3,r2
 400b450:	2023883a 	mov	r17,r4
 400b454:	888001cc 	andi	r2,r17,7
 400b458:	103f9e1e 	bne	r2,zero,400b2d4 <__alt_mem_onchip_memory2_0+0xfc006114>
 400b45c:	1804977a 	slli	r2,r3,29
 400b460:	8822d0fa 	srli	r17,r17,3
 400b464:	1810d0fa 	srli	r8,r3,3
 400b468:	9100004c 	andi	r4,r18,1
 400b46c:	1444b03a 	or	r2,r2,r17
 400b470:	00c1ffc4 	movi	r3,2047
 400b474:	80c02826 	beq	r16,r3,400b518 <__subdf3+0x2d0>
 400b478:	01400434 	movhi	r5,16
 400b47c:	297fffc4 	addi	r5,r5,-1
 400b480:	80e0703a 	and	r16,r16,r3
 400b484:	414a703a 	and	r5,r8,r5
 400b488:	003fa806 	br	400b32c <__alt_mem_onchip_memory2_0+0xfc00616c>
 400b48c:	0080630e 	bge	zero,r2,400b61c <__subdf3+0x3d4>
 400b490:	48003026 	beq	r9,zero,400b554 <__subdf3+0x30c>
 400b494:	0101ffc4 	movi	r4,2047
 400b498:	813f8c26 	beq	r16,r4,400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b49c:	29402034 	orhi	r5,r5,128
 400b4a0:	01000e04 	movi	r4,56
 400b4a4:	2080a90e 	bge	r4,r2,400b74c <__subdf3+0x504>
 400b4a8:	298cb03a 	or	r6,r5,r6
 400b4ac:	3012c03a 	cmpne	r9,r6,zero
 400b4b0:	0005883a 	mov	r2,zero
 400b4b4:	4c53883a 	add	r9,r9,r17
 400b4b8:	4c63803a 	cmpltu	r17,r9,r17
 400b4bc:	10c7883a 	add	r3,r2,r3
 400b4c0:	88c7883a 	add	r3,r17,r3
 400b4c4:	4823883a 	mov	r17,r9
 400b4c8:	1880202c 	andhi	r2,r3,128
 400b4cc:	1000d026 	beq	r2,zero,400b810 <__subdf3+0x5c8>
 400b4d0:	84000044 	addi	r16,r16,1
 400b4d4:	0081ffc4 	movi	r2,2047
 400b4d8:	8080fe26 	beq	r16,r2,400b8d4 <__subdf3+0x68c>
 400b4dc:	00bfe034 	movhi	r2,65408
 400b4e0:	10bfffc4 	addi	r2,r2,-1
 400b4e4:	1886703a 	and	r3,r3,r2
 400b4e8:	880ad07a 	srli	r5,r17,1
 400b4ec:	180497fa 	slli	r2,r3,31
 400b4f0:	8900004c 	andi	r4,r17,1
 400b4f4:	2922b03a 	or	r17,r5,r4
 400b4f8:	1806d07a 	srli	r3,r3,1
 400b4fc:	1462b03a 	or	r17,r2,r17
 400b500:	3825883a 	mov	r18,r7
 400b504:	003f7106 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b508:	2984b03a 	or	r2,r5,r6
 400b50c:	103f6826 	beq	r2,zero,400b2b0 <__alt_mem_onchip_memory2_0+0xfc0060f0>
 400b510:	39c03fcc 	andi	r7,r7,255
 400b514:	003f6706 	br	400b2b4 <__alt_mem_onchip_memory2_0+0xfc0060f4>
 400b518:	4086b03a 	or	r3,r8,r2
 400b51c:	18015226 	beq	r3,zero,400ba68 <__subdf3+0x820>
 400b520:	00c00434 	movhi	r3,16
 400b524:	41400234 	orhi	r5,r8,8
 400b528:	18ffffc4 	addi	r3,r3,-1
 400b52c:	28ca703a 	and	r5,r5,r3
 400b530:	003f7e06 	br	400b32c <__alt_mem_onchip_memory2_0+0xfc00616c>
 400b534:	10bfffc4 	addi	r2,r2,-1
 400b538:	1000491e 	bne	r2,zero,400b660 <__subdf3+0x418>
 400b53c:	898fc83a 	sub	r7,r17,r6
 400b540:	89e3803a 	cmpltu	r17,r17,r7
 400b544:	1947c83a 	sub	r3,r3,r5
 400b548:	1c47c83a 	sub	r3,r3,r17
 400b54c:	3823883a 	mov	r17,r7
 400b550:	003f9b06 	br	400b3c0 <__alt_mem_onchip_memory2_0+0xfc006200>
 400b554:	2988b03a 	or	r4,r5,r6
 400b558:	203f5c26 	beq	r4,zero,400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b55c:	10bfffc4 	addi	r2,r2,-1
 400b560:	1000931e 	bne	r2,zero,400b7b0 <__subdf3+0x568>
 400b564:	898d883a 	add	r6,r17,r6
 400b568:	3463803a 	cmpltu	r17,r6,r17
 400b56c:	1947883a 	add	r3,r3,r5
 400b570:	88c7883a 	add	r3,r17,r3
 400b574:	3023883a 	mov	r17,r6
 400b578:	003fd306 	br	400b4c8 <__alt_mem_onchip_memory2_0+0xfc006308>
 400b57c:	1000541e 	bne	r2,zero,400b6d0 <__subdf3+0x488>
 400b580:	80800044 	addi	r2,r16,1
 400b584:	1081ffcc 	andi	r2,r2,2047
 400b588:	01000044 	movi	r4,1
 400b58c:	2080a20e 	bge	r4,r2,400b818 <__subdf3+0x5d0>
 400b590:	8989c83a 	sub	r4,r17,r6
 400b594:	8905803a 	cmpltu	r2,r17,r4
 400b598:	1967c83a 	sub	r19,r3,r5
 400b59c:	98a7c83a 	sub	r19,r19,r2
 400b5a0:	9880202c 	andhi	r2,r19,128
 400b5a4:	10006326 	beq	r2,zero,400b734 <__subdf3+0x4ec>
 400b5a8:	3463c83a 	sub	r17,r6,r17
 400b5ac:	28c7c83a 	sub	r3,r5,r3
 400b5b0:	344d803a 	cmpltu	r6,r6,r17
 400b5b4:	19a7c83a 	sub	r19,r3,r6
 400b5b8:	3825883a 	mov	r18,r7
 400b5bc:	983f861e 	bne	r19,zero,400b3d8 <__alt_mem_onchip_memory2_0+0xfc006218>
 400b5c0:	8809883a 	mov	r4,r17
 400b5c4:	400bd480 	call	400bd48 <__clzsi2>
 400b5c8:	10800804 	addi	r2,r2,32
 400b5cc:	113ffe04 	addi	r4,r2,-8
 400b5d0:	00c007c4 	movi	r3,31
 400b5d4:	193f850e 	bge	r3,r4,400b3ec <__alt_mem_onchip_memory2_0+0xfc00622c>
 400b5d8:	10bff604 	addi	r2,r2,-40
 400b5dc:	8884983a 	sll	r2,r17,r2
 400b5e0:	0023883a 	mov	r17,zero
 400b5e4:	243f880e 	bge	r4,r16,400b408 <__alt_mem_onchip_memory2_0+0xfc006248>
 400b5e8:	00ffe034 	movhi	r3,65408
 400b5ec:	18ffffc4 	addi	r3,r3,-1
 400b5f0:	8121c83a 	sub	r16,r16,r4
 400b5f4:	10c6703a 	and	r3,r2,r3
 400b5f8:	003f3406 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b5fc:	9100004c 	andi	r4,r18,1
 400b600:	000b883a 	mov	r5,zero
 400b604:	0005883a 	mov	r2,zero
 400b608:	003f4806 	br	400b32c <__alt_mem_onchip_memory2_0+0xfc00616c>
 400b60c:	298cb03a 	or	r6,r5,r6
 400b610:	300cc03a 	cmpne	r6,r6,zero
 400b614:	0005883a 	mov	r2,zero
 400b618:	003f6406 	br	400b3ac <__alt_mem_onchip_memory2_0+0xfc0061ec>
 400b61c:	10009a1e 	bne	r2,zero,400b888 <__subdf3+0x640>
 400b620:	82400044 	addi	r9,r16,1
 400b624:	4881ffcc 	andi	r2,r9,2047
 400b628:	02800044 	movi	r10,1
 400b62c:	5080670e 	bge	r10,r2,400b7cc <__subdf3+0x584>
 400b630:	0081ffc4 	movi	r2,2047
 400b634:	4880af26 	beq	r9,r2,400b8f4 <__subdf3+0x6ac>
 400b638:	898d883a 	add	r6,r17,r6
 400b63c:	1945883a 	add	r2,r3,r5
 400b640:	3447803a 	cmpltu	r3,r6,r17
 400b644:	1887883a 	add	r3,r3,r2
 400b648:	182297fa 	slli	r17,r3,31
 400b64c:	300cd07a 	srli	r6,r6,1
 400b650:	1806d07a 	srli	r3,r3,1
 400b654:	4821883a 	mov	r16,r9
 400b658:	89a2b03a 	or	r17,r17,r6
 400b65c:	003f1b06 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b660:	0101ffc4 	movi	r4,2047
 400b664:	813f441e 	bne	r16,r4,400b378 <__alt_mem_onchip_memory2_0+0xfc0061b8>
 400b668:	003f1806 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b66c:	843ff844 	addi	r16,r16,-31
 400b670:	01400804 	movi	r5,32
 400b674:	1408d83a 	srl	r4,r2,r16
 400b678:	19405026 	beq	r3,r5,400b7bc <__subdf3+0x574>
 400b67c:	01401004 	movi	r5,64
 400b680:	28c7c83a 	sub	r3,r5,r3
 400b684:	10c4983a 	sll	r2,r2,r3
 400b688:	88a2b03a 	or	r17,r17,r2
 400b68c:	8822c03a 	cmpne	r17,r17,zero
 400b690:	2462b03a 	or	r17,r4,r17
 400b694:	0007883a 	mov	r3,zero
 400b698:	0021883a 	mov	r16,zero
 400b69c:	003f6d06 	br	400b454 <__alt_mem_onchip_memory2_0+0xfc006294>
 400b6a0:	11fff804 	addi	r7,r2,-32
 400b6a4:	01000804 	movi	r4,32
 400b6a8:	29ced83a 	srl	r7,r5,r7
 400b6ac:	11004526 	beq	r2,r4,400b7c4 <__subdf3+0x57c>
 400b6b0:	01001004 	movi	r4,64
 400b6b4:	2089c83a 	sub	r4,r4,r2
 400b6b8:	2904983a 	sll	r2,r5,r4
 400b6bc:	118cb03a 	or	r6,r2,r6
 400b6c0:	300cc03a 	cmpne	r6,r6,zero
 400b6c4:	398cb03a 	or	r6,r7,r6
 400b6c8:	0005883a 	mov	r2,zero
 400b6cc:	003f3706 	br	400b3ac <__alt_mem_onchip_memory2_0+0xfc0061ec>
 400b6d0:	80002a26 	beq	r16,zero,400b77c <__subdf3+0x534>
 400b6d4:	0101ffc4 	movi	r4,2047
 400b6d8:	49006626 	beq	r9,r4,400b874 <__subdf3+0x62c>
 400b6dc:	0085c83a 	sub	r2,zero,r2
 400b6e0:	18c02034 	orhi	r3,r3,128
 400b6e4:	01000e04 	movi	r4,56
 400b6e8:	20807e16 	blt	r4,r2,400b8e4 <__subdf3+0x69c>
 400b6ec:	010007c4 	movi	r4,31
 400b6f0:	2080e716 	blt	r4,r2,400ba90 <__subdf3+0x848>
 400b6f4:	01000804 	movi	r4,32
 400b6f8:	2089c83a 	sub	r4,r4,r2
 400b6fc:	1914983a 	sll	r10,r3,r4
 400b700:	8890d83a 	srl	r8,r17,r2
 400b704:	8908983a 	sll	r4,r17,r4
 400b708:	1884d83a 	srl	r2,r3,r2
 400b70c:	5222b03a 	or	r17,r10,r8
 400b710:	2006c03a 	cmpne	r3,r4,zero
 400b714:	88e2b03a 	or	r17,r17,r3
 400b718:	3463c83a 	sub	r17,r6,r17
 400b71c:	2885c83a 	sub	r2,r5,r2
 400b720:	344d803a 	cmpltu	r6,r6,r17
 400b724:	1187c83a 	sub	r3,r2,r6
 400b728:	4821883a 	mov	r16,r9
 400b72c:	3825883a 	mov	r18,r7
 400b730:	003f2306 	br	400b3c0 <__alt_mem_onchip_memory2_0+0xfc006200>
 400b734:	24d0b03a 	or	r8,r4,r19
 400b738:	40001b1e 	bne	r8,zero,400b7a8 <__subdf3+0x560>
 400b73c:	0005883a 	mov	r2,zero
 400b740:	0009883a 	mov	r4,zero
 400b744:	0021883a 	mov	r16,zero
 400b748:	003f4906 	br	400b470 <__alt_mem_onchip_memory2_0+0xfc0062b0>
 400b74c:	010007c4 	movi	r4,31
 400b750:	20803a16 	blt	r4,r2,400b83c <__subdf3+0x5f4>
 400b754:	01000804 	movi	r4,32
 400b758:	2089c83a 	sub	r4,r4,r2
 400b75c:	2912983a 	sll	r9,r5,r4
 400b760:	3090d83a 	srl	r8,r6,r2
 400b764:	3108983a 	sll	r4,r6,r4
 400b768:	2884d83a 	srl	r2,r5,r2
 400b76c:	4a12b03a 	or	r9,r9,r8
 400b770:	2008c03a 	cmpne	r4,r4,zero
 400b774:	4912b03a 	or	r9,r9,r4
 400b778:	003f4e06 	br	400b4b4 <__alt_mem_onchip_memory2_0+0xfc0062f4>
 400b77c:	1c48b03a 	or	r4,r3,r17
 400b780:	20003c26 	beq	r4,zero,400b874 <__subdf3+0x62c>
 400b784:	0084303a 	nor	r2,zero,r2
 400b788:	1000381e 	bne	r2,zero,400b86c <__subdf3+0x624>
 400b78c:	3463c83a 	sub	r17,r6,r17
 400b790:	28c5c83a 	sub	r2,r5,r3
 400b794:	344d803a 	cmpltu	r6,r6,r17
 400b798:	1187c83a 	sub	r3,r2,r6
 400b79c:	4821883a 	mov	r16,r9
 400b7a0:	3825883a 	mov	r18,r7
 400b7a4:	003f0606 	br	400b3c0 <__alt_mem_onchip_memory2_0+0xfc006200>
 400b7a8:	2023883a 	mov	r17,r4
 400b7ac:	003f0906 	br	400b3d4 <__alt_mem_onchip_memory2_0+0xfc006214>
 400b7b0:	0101ffc4 	movi	r4,2047
 400b7b4:	813f3a1e 	bne	r16,r4,400b4a0 <__alt_mem_onchip_memory2_0+0xfc0062e0>
 400b7b8:	003ec406 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b7bc:	0005883a 	mov	r2,zero
 400b7c0:	003fb106 	br	400b688 <__alt_mem_onchip_memory2_0+0xfc0064c8>
 400b7c4:	0005883a 	mov	r2,zero
 400b7c8:	003fbc06 	br	400b6bc <__alt_mem_onchip_memory2_0+0xfc0064fc>
 400b7cc:	1c44b03a 	or	r2,r3,r17
 400b7d0:	80008e1e 	bne	r16,zero,400ba0c <__subdf3+0x7c4>
 400b7d4:	1000c826 	beq	r2,zero,400baf8 <__subdf3+0x8b0>
 400b7d8:	2984b03a 	or	r2,r5,r6
 400b7dc:	103ebb26 	beq	r2,zero,400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b7e0:	8989883a 	add	r4,r17,r6
 400b7e4:	1945883a 	add	r2,r3,r5
 400b7e8:	2447803a 	cmpltu	r3,r4,r17
 400b7ec:	1887883a 	add	r3,r3,r2
 400b7f0:	1880202c 	andhi	r2,r3,128
 400b7f4:	2023883a 	mov	r17,r4
 400b7f8:	103f1626 	beq	r2,zero,400b454 <__alt_mem_onchip_memory2_0+0xfc006294>
 400b7fc:	00bfe034 	movhi	r2,65408
 400b800:	10bfffc4 	addi	r2,r2,-1
 400b804:	5021883a 	mov	r16,r10
 400b808:	1886703a 	and	r3,r3,r2
 400b80c:	003eaf06 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b810:	3825883a 	mov	r18,r7
 400b814:	003f0f06 	br	400b454 <__alt_mem_onchip_memory2_0+0xfc006294>
 400b818:	1c44b03a 	or	r2,r3,r17
 400b81c:	8000251e 	bne	r16,zero,400b8b4 <__subdf3+0x66c>
 400b820:	1000661e 	bne	r2,zero,400b9bc <__subdf3+0x774>
 400b824:	2990b03a 	or	r8,r5,r6
 400b828:	40009626 	beq	r8,zero,400ba84 <__subdf3+0x83c>
 400b82c:	2807883a 	mov	r3,r5
 400b830:	3023883a 	mov	r17,r6
 400b834:	3825883a 	mov	r18,r7
 400b838:	003ea406 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b83c:	127ff804 	addi	r9,r2,-32
 400b840:	01000804 	movi	r4,32
 400b844:	2a52d83a 	srl	r9,r5,r9
 400b848:	11008c26 	beq	r2,r4,400ba7c <__subdf3+0x834>
 400b84c:	01001004 	movi	r4,64
 400b850:	2085c83a 	sub	r2,r4,r2
 400b854:	2884983a 	sll	r2,r5,r2
 400b858:	118cb03a 	or	r6,r2,r6
 400b85c:	300cc03a 	cmpne	r6,r6,zero
 400b860:	4992b03a 	or	r9,r9,r6
 400b864:	0005883a 	mov	r2,zero
 400b868:	003f1206 	br	400b4b4 <__alt_mem_onchip_memory2_0+0xfc0062f4>
 400b86c:	0101ffc4 	movi	r4,2047
 400b870:	493f9c1e 	bne	r9,r4,400b6e4 <__alt_mem_onchip_memory2_0+0xfc006524>
 400b874:	2807883a 	mov	r3,r5
 400b878:	3023883a 	mov	r17,r6
 400b87c:	4821883a 	mov	r16,r9
 400b880:	3825883a 	mov	r18,r7
 400b884:	003e9106 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b888:	80001f1e 	bne	r16,zero,400b908 <__subdf3+0x6c0>
 400b88c:	1c48b03a 	or	r4,r3,r17
 400b890:	20005a26 	beq	r4,zero,400b9fc <__subdf3+0x7b4>
 400b894:	0084303a 	nor	r2,zero,r2
 400b898:	1000561e 	bne	r2,zero,400b9f4 <__subdf3+0x7ac>
 400b89c:	89a3883a 	add	r17,r17,r6
 400b8a0:	1945883a 	add	r2,r3,r5
 400b8a4:	898d803a 	cmpltu	r6,r17,r6
 400b8a8:	3087883a 	add	r3,r6,r2
 400b8ac:	4821883a 	mov	r16,r9
 400b8b0:	003f0506 	br	400b4c8 <__alt_mem_onchip_memory2_0+0xfc006308>
 400b8b4:	10002b1e 	bne	r2,zero,400b964 <__subdf3+0x71c>
 400b8b8:	2984b03a 	or	r2,r5,r6
 400b8bc:	10008026 	beq	r2,zero,400bac0 <__subdf3+0x878>
 400b8c0:	2807883a 	mov	r3,r5
 400b8c4:	3023883a 	mov	r17,r6
 400b8c8:	3825883a 	mov	r18,r7
 400b8cc:	0401ffc4 	movi	r16,2047
 400b8d0:	003e7e06 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b8d4:	3809883a 	mov	r4,r7
 400b8d8:	0011883a 	mov	r8,zero
 400b8dc:	0005883a 	mov	r2,zero
 400b8e0:	003ee306 	br	400b470 <__alt_mem_onchip_memory2_0+0xfc0062b0>
 400b8e4:	1c62b03a 	or	r17,r3,r17
 400b8e8:	8822c03a 	cmpne	r17,r17,zero
 400b8ec:	0005883a 	mov	r2,zero
 400b8f0:	003f8906 	br	400b718 <__alt_mem_onchip_memory2_0+0xfc006558>
 400b8f4:	3809883a 	mov	r4,r7
 400b8f8:	4821883a 	mov	r16,r9
 400b8fc:	0011883a 	mov	r8,zero
 400b900:	0005883a 	mov	r2,zero
 400b904:	003eda06 	br	400b470 <__alt_mem_onchip_memory2_0+0xfc0062b0>
 400b908:	0101ffc4 	movi	r4,2047
 400b90c:	49003b26 	beq	r9,r4,400b9fc <__subdf3+0x7b4>
 400b910:	0085c83a 	sub	r2,zero,r2
 400b914:	18c02034 	orhi	r3,r3,128
 400b918:	01000e04 	movi	r4,56
 400b91c:	20806e16 	blt	r4,r2,400bad8 <__subdf3+0x890>
 400b920:	010007c4 	movi	r4,31
 400b924:	20807716 	blt	r4,r2,400bb04 <__subdf3+0x8bc>
 400b928:	01000804 	movi	r4,32
 400b92c:	2089c83a 	sub	r4,r4,r2
 400b930:	1914983a 	sll	r10,r3,r4
 400b934:	8890d83a 	srl	r8,r17,r2
 400b938:	8908983a 	sll	r4,r17,r4
 400b93c:	1884d83a 	srl	r2,r3,r2
 400b940:	5222b03a 	or	r17,r10,r8
 400b944:	2006c03a 	cmpne	r3,r4,zero
 400b948:	88e2b03a 	or	r17,r17,r3
 400b94c:	89a3883a 	add	r17,r17,r6
 400b950:	1145883a 	add	r2,r2,r5
 400b954:	898d803a 	cmpltu	r6,r17,r6
 400b958:	3087883a 	add	r3,r6,r2
 400b95c:	4821883a 	mov	r16,r9
 400b960:	003ed906 	br	400b4c8 <__alt_mem_onchip_memory2_0+0xfc006308>
 400b964:	2984b03a 	or	r2,r5,r6
 400b968:	10004226 	beq	r2,zero,400ba74 <__subdf3+0x82c>
 400b96c:	1808d0fa 	srli	r4,r3,3
 400b970:	8822d0fa 	srli	r17,r17,3
 400b974:	1806977a 	slli	r3,r3,29
 400b978:	2080022c 	andhi	r2,r4,8
 400b97c:	1c62b03a 	or	r17,r3,r17
 400b980:	10000826 	beq	r2,zero,400b9a4 <__subdf3+0x75c>
 400b984:	2812d0fa 	srli	r9,r5,3
 400b988:	4880022c 	andhi	r2,r9,8
 400b98c:	1000051e 	bne	r2,zero,400b9a4 <__subdf3+0x75c>
 400b990:	300cd0fa 	srli	r6,r6,3
 400b994:	2804977a 	slli	r2,r5,29
 400b998:	4809883a 	mov	r4,r9
 400b99c:	3825883a 	mov	r18,r7
 400b9a0:	11a2b03a 	or	r17,r2,r6
 400b9a4:	8806d77a 	srli	r3,r17,29
 400b9a8:	200890fa 	slli	r4,r4,3
 400b9ac:	882290fa 	slli	r17,r17,3
 400b9b0:	0401ffc4 	movi	r16,2047
 400b9b4:	1906b03a 	or	r3,r3,r4
 400b9b8:	003e4406 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b9bc:	2984b03a 	or	r2,r5,r6
 400b9c0:	103e4226 	beq	r2,zero,400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b9c4:	8989c83a 	sub	r4,r17,r6
 400b9c8:	8911803a 	cmpltu	r8,r17,r4
 400b9cc:	1945c83a 	sub	r2,r3,r5
 400b9d0:	1205c83a 	sub	r2,r2,r8
 400b9d4:	1200202c 	andhi	r8,r2,128
 400b9d8:	403e9a26 	beq	r8,zero,400b444 <__alt_mem_onchip_memory2_0+0xfc006284>
 400b9dc:	3463c83a 	sub	r17,r6,r17
 400b9e0:	28c5c83a 	sub	r2,r5,r3
 400b9e4:	344d803a 	cmpltu	r6,r6,r17
 400b9e8:	1187c83a 	sub	r3,r2,r6
 400b9ec:	3825883a 	mov	r18,r7
 400b9f0:	003e3606 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400b9f4:	0101ffc4 	movi	r4,2047
 400b9f8:	493fc71e 	bne	r9,r4,400b918 <__alt_mem_onchip_memory2_0+0xfc006758>
 400b9fc:	2807883a 	mov	r3,r5
 400ba00:	3023883a 	mov	r17,r6
 400ba04:	4821883a 	mov	r16,r9
 400ba08:	003e3006 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400ba0c:	10003626 	beq	r2,zero,400bae8 <__subdf3+0x8a0>
 400ba10:	2984b03a 	or	r2,r5,r6
 400ba14:	10001726 	beq	r2,zero,400ba74 <__subdf3+0x82c>
 400ba18:	1808d0fa 	srli	r4,r3,3
 400ba1c:	8822d0fa 	srli	r17,r17,3
 400ba20:	1806977a 	slli	r3,r3,29
 400ba24:	2080022c 	andhi	r2,r4,8
 400ba28:	1c62b03a 	or	r17,r3,r17
 400ba2c:	10000726 	beq	r2,zero,400ba4c <__subdf3+0x804>
 400ba30:	2812d0fa 	srli	r9,r5,3
 400ba34:	4880022c 	andhi	r2,r9,8
 400ba38:	1000041e 	bne	r2,zero,400ba4c <__subdf3+0x804>
 400ba3c:	300cd0fa 	srli	r6,r6,3
 400ba40:	2804977a 	slli	r2,r5,29
 400ba44:	4809883a 	mov	r4,r9
 400ba48:	11a2b03a 	or	r17,r2,r6
 400ba4c:	8806d77a 	srli	r3,r17,29
 400ba50:	200890fa 	slli	r4,r4,3
 400ba54:	882290fa 	slli	r17,r17,3
 400ba58:	3825883a 	mov	r18,r7
 400ba5c:	1906b03a 	or	r3,r3,r4
 400ba60:	0401ffc4 	movi	r16,2047
 400ba64:	003e1906 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400ba68:	000b883a 	mov	r5,zero
 400ba6c:	0005883a 	mov	r2,zero
 400ba70:	003e2e06 	br	400b32c <__alt_mem_onchip_memory2_0+0xfc00616c>
 400ba74:	0401ffc4 	movi	r16,2047
 400ba78:	003e1406 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400ba7c:	0005883a 	mov	r2,zero
 400ba80:	003f7506 	br	400b858 <__alt_mem_onchip_memory2_0+0xfc006698>
 400ba84:	0005883a 	mov	r2,zero
 400ba88:	0009883a 	mov	r4,zero
 400ba8c:	003e7806 	br	400b470 <__alt_mem_onchip_memory2_0+0xfc0062b0>
 400ba90:	123ff804 	addi	r8,r2,-32
 400ba94:	01000804 	movi	r4,32
 400ba98:	1a10d83a 	srl	r8,r3,r8
 400ba9c:	11002526 	beq	r2,r4,400bb34 <__subdf3+0x8ec>
 400baa0:	01001004 	movi	r4,64
 400baa4:	2085c83a 	sub	r2,r4,r2
 400baa8:	1884983a 	sll	r2,r3,r2
 400baac:	1444b03a 	or	r2,r2,r17
 400bab0:	1004c03a 	cmpne	r2,r2,zero
 400bab4:	40a2b03a 	or	r17,r8,r2
 400bab8:	0005883a 	mov	r2,zero
 400babc:	003f1606 	br	400b718 <__alt_mem_onchip_memory2_0+0xfc006558>
 400bac0:	02000434 	movhi	r8,16
 400bac4:	0009883a 	mov	r4,zero
 400bac8:	423fffc4 	addi	r8,r8,-1
 400bacc:	00bfffc4 	movi	r2,-1
 400bad0:	0401ffc4 	movi	r16,2047
 400bad4:	003e6606 	br	400b470 <__alt_mem_onchip_memory2_0+0xfc0062b0>
 400bad8:	1c62b03a 	or	r17,r3,r17
 400badc:	8822c03a 	cmpne	r17,r17,zero
 400bae0:	0005883a 	mov	r2,zero
 400bae4:	003f9906 	br	400b94c <__alt_mem_onchip_memory2_0+0xfc00678c>
 400bae8:	2807883a 	mov	r3,r5
 400baec:	3023883a 	mov	r17,r6
 400baf0:	0401ffc4 	movi	r16,2047
 400baf4:	003df506 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400baf8:	2807883a 	mov	r3,r5
 400bafc:	3023883a 	mov	r17,r6
 400bb00:	003df206 	br	400b2cc <__alt_mem_onchip_memory2_0+0xfc00610c>
 400bb04:	123ff804 	addi	r8,r2,-32
 400bb08:	01000804 	movi	r4,32
 400bb0c:	1a10d83a 	srl	r8,r3,r8
 400bb10:	11000a26 	beq	r2,r4,400bb3c <__subdf3+0x8f4>
 400bb14:	01001004 	movi	r4,64
 400bb18:	2085c83a 	sub	r2,r4,r2
 400bb1c:	1884983a 	sll	r2,r3,r2
 400bb20:	1444b03a 	or	r2,r2,r17
 400bb24:	1004c03a 	cmpne	r2,r2,zero
 400bb28:	40a2b03a 	or	r17,r8,r2
 400bb2c:	0005883a 	mov	r2,zero
 400bb30:	003f8606 	br	400b94c <__alt_mem_onchip_memory2_0+0xfc00678c>
 400bb34:	0005883a 	mov	r2,zero
 400bb38:	003fdc06 	br	400baac <__alt_mem_onchip_memory2_0+0xfc0068ec>
 400bb3c:	0005883a 	mov	r2,zero
 400bb40:	003ff706 	br	400bb20 <__alt_mem_onchip_memory2_0+0xfc006960>

0400bb44 <__fixdfsi>:
 400bb44:	280cd53a 	srli	r6,r5,20
 400bb48:	00c00434 	movhi	r3,16
 400bb4c:	18ffffc4 	addi	r3,r3,-1
 400bb50:	3181ffcc 	andi	r6,r6,2047
 400bb54:	01c0ff84 	movi	r7,1022
 400bb58:	28c6703a 	and	r3,r5,r3
 400bb5c:	280ad7fa 	srli	r5,r5,31
 400bb60:	3980120e 	bge	r7,r6,400bbac <__fixdfsi+0x68>
 400bb64:	00810744 	movi	r2,1053
 400bb68:	11800c16 	blt	r2,r6,400bb9c <__fixdfsi+0x58>
 400bb6c:	00810cc4 	movi	r2,1075
 400bb70:	1185c83a 	sub	r2,r2,r6
 400bb74:	01c007c4 	movi	r7,31
 400bb78:	18c00434 	orhi	r3,r3,16
 400bb7c:	38800d16 	blt	r7,r2,400bbb4 <__fixdfsi+0x70>
 400bb80:	31befb44 	addi	r6,r6,-1043
 400bb84:	2084d83a 	srl	r2,r4,r2
 400bb88:	1986983a 	sll	r3,r3,r6
 400bb8c:	1884b03a 	or	r2,r3,r2
 400bb90:	28000726 	beq	r5,zero,400bbb0 <__fixdfsi+0x6c>
 400bb94:	0085c83a 	sub	r2,zero,r2
 400bb98:	f800283a 	ret
 400bb9c:	00a00034 	movhi	r2,32768
 400bba0:	10bfffc4 	addi	r2,r2,-1
 400bba4:	2885883a 	add	r2,r5,r2
 400bba8:	f800283a 	ret
 400bbac:	0005883a 	mov	r2,zero
 400bbb0:	f800283a 	ret
 400bbb4:	008104c4 	movi	r2,1043
 400bbb8:	1185c83a 	sub	r2,r2,r6
 400bbbc:	1884d83a 	srl	r2,r3,r2
 400bbc0:	003ff306 	br	400bb90 <__alt_mem_onchip_memory2_0+0xfc0069d0>

0400bbc4 <__floatsidf>:
 400bbc4:	defffd04 	addi	sp,sp,-12
 400bbc8:	dfc00215 	stw	ra,8(sp)
 400bbcc:	dc400115 	stw	r17,4(sp)
 400bbd0:	dc000015 	stw	r16,0(sp)
 400bbd4:	20002b26 	beq	r4,zero,400bc84 <__floatsidf+0xc0>
 400bbd8:	2023883a 	mov	r17,r4
 400bbdc:	2020d7fa 	srli	r16,r4,31
 400bbe0:	20002d16 	blt	r4,zero,400bc98 <__floatsidf+0xd4>
 400bbe4:	8809883a 	mov	r4,r17
 400bbe8:	400bd480 	call	400bd48 <__clzsi2>
 400bbec:	01410784 	movi	r5,1054
 400bbf0:	288bc83a 	sub	r5,r5,r2
 400bbf4:	01010cc4 	movi	r4,1075
 400bbf8:	2149c83a 	sub	r4,r4,r5
 400bbfc:	00c007c4 	movi	r3,31
 400bc00:	1900160e 	bge	r3,r4,400bc5c <__floatsidf+0x98>
 400bc04:	00c104c4 	movi	r3,1043
 400bc08:	1947c83a 	sub	r3,r3,r5
 400bc0c:	88c6983a 	sll	r3,r17,r3
 400bc10:	00800434 	movhi	r2,16
 400bc14:	10bfffc4 	addi	r2,r2,-1
 400bc18:	1886703a 	and	r3,r3,r2
 400bc1c:	2941ffcc 	andi	r5,r5,2047
 400bc20:	800d883a 	mov	r6,r16
 400bc24:	0005883a 	mov	r2,zero
 400bc28:	280a953a 	slli	r5,r5,20
 400bc2c:	31803fcc 	andi	r6,r6,255
 400bc30:	01000434 	movhi	r4,16
 400bc34:	300c97fa 	slli	r6,r6,31
 400bc38:	213fffc4 	addi	r4,r4,-1
 400bc3c:	1906703a 	and	r3,r3,r4
 400bc40:	1946b03a 	or	r3,r3,r5
 400bc44:	1986b03a 	or	r3,r3,r6
 400bc48:	dfc00217 	ldw	ra,8(sp)
 400bc4c:	dc400117 	ldw	r17,4(sp)
 400bc50:	dc000017 	ldw	r16,0(sp)
 400bc54:	dec00304 	addi	sp,sp,12
 400bc58:	f800283a 	ret
 400bc5c:	00c002c4 	movi	r3,11
 400bc60:	1887c83a 	sub	r3,r3,r2
 400bc64:	88c6d83a 	srl	r3,r17,r3
 400bc68:	8904983a 	sll	r2,r17,r4
 400bc6c:	01000434 	movhi	r4,16
 400bc70:	213fffc4 	addi	r4,r4,-1
 400bc74:	2941ffcc 	andi	r5,r5,2047
 400bc78:	1906703a 	and	r3,r3,r4
 400bc7c:	800d883a 	mov	r6,r16
 400bc80:	003fe906 	br	400bc28 <__alt_mem_onchip_memory2_0+0xfc006a68>
 400bc84:	000d883a 	mov	r6,zero
 400bc88:	000b883a 	mov	r5,zero
 400bc8c:	0007883a 	mov	r3,zero
 400bc90:	0005883a 	mov	r2,zero
 400bc94:	003fe406 	br	400bc28 <__alt_mem_onchip_memory2_0+0xfc006a68>
 400bc98:	0123c83a 	sub	r17,zero,r4
 400bc9c:	003fd106 	br	400bbe4 <__alt_mem_onchip_memory2_0+0xfc006a24>

0400bca0 <__floatunsidf>:
 400bca0:	defffe04 	addi	sp,sp,-8
 400bca4:	dc000015 	stw	r16,0(sp)
 400bca8:	dfc00115 	stw	ra,4(sp)
 400bcac:	2021883a 	mov	r16,r4
 400bcb0:	20002226 	beq	r4,zero,400bd3c <__floatunsidf+0x9c>
 400bcb4:	400bd480 	call	400bd48 <__clzsi2>
 400bcb8:	01010784 	movi	r4,1054
 400bcbc:	2089c83a 	sub	r4,r4,r2
 400bcc0:	01810cc4 	movi	r6,1075
 400bcc4:	310dc83a 	sub	r6,r6,r4
 400bcc8:	00c007c4 	movi	r3,31
 400bccc:	1980120e 	bge	r3,r6,400bd18 <__floatunsidf+0x78>
 400bcd0:	00c104c4 	movi	r3,1043
 400bcd4:	1907c83a 	sub	r3,r3,r4
 400bcd8:	80ca983a 	sll	r5,r16,r3
 400bcdc:	00800434 	movhi	r2,16
 400bce0:	10bfffc4 	addi	r2,r2,-1
 400bce4:	2101ffcc 	andi	r4,r4,2047
 400bce8:	0021883a 	mov	r16,zero
 400bcec:	288a703a 	and	r5,r5,r2
 400bcf0:	2008953a 	slli	r4,r4,20
 400bcf4:	00c00434 	movhi	r3,16
 400bcf8:	18ffffc4 	addi	r3,r3,-1
 400bcfc:	28c6703a 	and	r3,r5,r3
 400bd00:	8005883a 	mov	r2,r16
 400bd04:	1906b03a 	or	r3,r3,r4
 400bd08:	dfc00117 	ldw	ra,4(sp)
 400bd0c:	dc000017 	ldw	r16,0(sp)
 400bd10:	dec00204 	addi	sp,sp,8
 400bd14:	f800283a 	ret
 400bd18:	00c002c4 	movi	r3,11
 400bd1c:	188bc83a 	sub	r5,r3,r2
 400bd20:	814ad83a 	srl	r5,r16,r5
 400bd24:	00c00434 	movhi	r3,16
 400bd28:	18ffffc4 	addi	r3,r3,-1
 400bd2c:	81a0983a 	sll	r16,r16,r6
 400bd30:	2101ffcc 	andi	r4,r4,2047
 400bd34:	28ca703a 	and	r5,r5,r3
 400bd38:	003fed06 	br	400bcf0 <__alt_mem_onchip_memory2_0+0xfc006b30>
 400bd3c:	0009883a 	mov	r4,zero
 400bd40:	000b883a 	mov	r5,zero
 400bd44:	003fea06 	br	400bcf0 <__alt_mem_onchip_memory2_0+0xfc006b30>

0400bd48 <__clzsi2>:
 400bd48:	00bfffd4 	movui	r2,65535
 400bd4c:	11000536 	bltu	r2,r4,400bd64 <__clzsi2+0x1c>
 400bd50:	00803fc4 	movi	r2,255
 400bd54:	11000f36 	bltu	r2,r4,400bd94 <__clzsi2+0x4c>
 400bd58:	00800804 	movi	r2,32
 400bd5c:	0007883a 	mov	r3,zero
 400bd60:	00000506 	br	400bd78 <__clzsi2+0x30>
 400bd64:	00804034 	movhi	r2,256
 400bd68:	10bfffc4 	addi	r2,r2,-1
 400bd6c:	11000c2e 	bgeu	r2,r4,400bda0 <__clzsi2+0x58>
 400bd70:	00800204 	movi	r2,8
 400bd74:	00c00604 	movi	r3,24
 400bd78:	20c8d83a 	srl	r4,r4,r3
 400bd7c:	00c10074 	movhi	r3,1025
 400bd80:	18f8e204 	addi	r3,r3,-7288
 400bd84:	1909883a 	add	r4,r3,r4
 400bd88:	20c00003 	ldbu	r3,0(r4)
 400bd8c:	10c5c83a 	sub	r2,r2,r3
 400bd90:	f800283a 	ret
 400bd94:	00800604 	movi	r2,24
 400bd98:	00c00204 	movi	r3,8
 400bd9c:	003ff606 	br	400bd78 <__alt_mem_onchip_memory2_0+0xfc006bb8>
 400bda0:	00800404 	movi	r2,16
 400bda4:	1007883a 	mov	r3,r2
 400bda8:	003ff306 	br	400bd78 <__alt_mem_onchip_memory2_0+0xfc006bb8>

0400bdac <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 400bdac:	defffc04 	addi	sp,sp,-16
 400bdb0:	df000315 	stw	fp,12(sp)
 400bdb4:	df000304 	addi	fp,sp,12
 400bdb8:	e13ffd15 	stw	r4,-12(fp)
 400bdbc:	e17ffe15 	stw	r5,-8(fp)
 400bdc0:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 400bdc4:	e0fffe17 	ldw	r3,-8(fp)
 400bdc8:	e0bffd17 	ldw	r2,-12(fp)
 400bdcc:	18800c26 	beq	r3,r2,400be00 <alt_load_section+0x54>
  {
    while( to != end )
 400bdd0:	00000806 	br	400bdf4 <alt_load_section+0x48>
    {
      *to++ = *from++;
 400bdd4:	e0bffe17 	ldw	r2,-8(fp)
 400bdd8:	10c00104 	addi	r3,r2,4
 400bddc:	e0fffe15 	stw	r3,-8(fp)
 400bde0:	e0fffd17 	ldw	r3,-12(fp)
 400bde4:	19000104 	addi	r4,r3,4
 400bde8:	e13ffd15 	stw	r4,-12(fp)
 400bdec:	18c00017 	ldw	r3,0(r3)
 400bdf0:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 400bdf4:	e0fffe17 	ldw	r3,-8(fp)
 400bdf8:	e0bfff17 	ldw	r2,-4(fp)
 400bdfc:	18bff51e 	bne	r3,r2,400bdd4 <__alt_mem_onchip_memory2_0+0xfc006c14>
    {
      *to++ = *from++;
    }
  }
}
 400be00:	0001883a 	nop
 400be04:	e037883a 	mov	sp,fp
 400be08:	df000017 	ldw	fp,0(sp)
 400be0c:	dec00104 	addi	sp,sp,4
 400be10:	f800283a 	ret

0400be14 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 400be14:	defffe04 	addi	sp,sp,-8
 400be18:	dfc00115 	stw	ra,4(sp)
 400be1c:	df000015 	stw	fp,0(sp)
 400be20:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 400be24:	01810074 	movhi	r6,1025
 400be28:	3180a304 	addi	r6,r6,652
 400be2c:	01410074 	movhi	r5,1025
 400be30:	29792f04 	addi	r5,r5,-6980
 400be34:	01010074 	movhi	r4,1025
 400be38:	2100a304 	addi	r4,r4,652
 400be3c:	400bdac0 	call	400bdac <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 400be40:	01810034 	movhi	r6,1024
 400be44:	31808c04 	addi	r6,r6,560
 400be48:	01410034 	movhi	r5,1024
 400be4c:	29400804 	addi	r5,r5,32
 400be50:	01010034 	movhi	r4,1024
 400be54:	21000804 	addi	r4,r4,32
 400be58:	400bdac0 	call	400bdac <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 400be5c:	01810074 	movhi	r6,1025
 400be60:	31b92f04 	addi	r6,r6,-6980
 400be64:	01410074 	movhi	r5,1025
 400be68:	29785b04 	addi	r5,r5,-7828
 400be6c:	01010074 	movhi	r4,1025
 400be70:	21385b04 	addi	r4,r4,-7828
 400be74:	400bdac0 	call	400bdac <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 400be78:	400d0040 	call	400d004 <alt_dcache_flush_all>
  alt_icache_flush_all();
 400be7c:	400d1f00 	call	400d1f0 <alt_icache_flush_all>
}
 400be80:	0001883a 	nop
 400be84:	e037883a 	mov	sp,fp
 400be88:	dfc00117 	ldw	ra,4(sp)
 400be8c:	df000017 	ldw	fp,0(sp)
 400be90:	dec00204 	addi	sp,sp,8
 400be94:	f800283a 	ret

0400be98 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 400be98:	defffd04 	addi	sp,sp,-12
 400be9c:	dfc00215 	stw	ra,8(sp)
 400bea0:	df000115 	stw	fp,4(sp)
 400bea4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 400bea8:	0009883a 	mov	r4,zero
 400beac:	400c0700 	call	400c070 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 400beb0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 400beb4:	400c0a80 	call	400c0a8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 400beb8:	01810074 	movhi	r6,1025
 400bebc:	31b92204 	addi	r6,r6,-7032
 400bec0:	01410074 	movhi	r5,1025
 400bec4:	29792204 	addi	r5,r5,-7032
 400bec8:	01010074 	movhi	r4,1025
 400becc:	21392204 	addi	r4,r4,-7032
 400bed0:	400d5940 	call	400d594 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 400bed4:	400d1300 	call	400d130 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 400bed8:	01010074 	movhi	r4,1025
 400bedc:	21346404 	addi	r4,r4,-11888
 400bee0:	400ddd80 	call	400ddd8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 400bee4:	d0a78c17 	ldw	r2,-25040(gp)
 400bee8:	d0e78d17 	ldw	r3,-25036(gp)
 400beec:	d1278e17 	ldw	r4,-25032(gp)
 400bef0:	200d883a 	mov	r6,r4
 400bef4:	180b883a 	mov	r5,r3
 400bef8:	1009883a 	mov	r4,r2
 400befc:	400026c0 	call	400026c <main>
 400bf00:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 400bf04:	01000044 	movi	r4,1
 400bf08:	400cf2c0 	call	400cf2c <close>
  exit (result);
 400bf0c:	e13fff17 	ldw	r4,-4(fp)
 400bf10:	400ddec0 	call	400ddec <exit>

0400bf14 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 400bf14:	defffe04 	addi	sp,sp,-8
 400bf18:	df000115 	stw	fp,4(sp)
 400bf1c:	df000104 	addi	fp,sp,4
 400bf20:	e13fff15 	stw	r4,-4(fp)
}
 400bf24:	0001883a 	nop
 400bf28:	e037883a 	mov	sp,fp
 400bf2c:	df000017 	ldw	fp,0(sp)
 400bf30:	dec00104 	addi	sp,sp,4
 400bf34:	f800283a 	ret

0400bf38 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 400bf38:	defffe04 	addi	sp,sp,-8
 400bf3c:	df000115 	stw	fp,4(sp)
 400bf40:	df000104 	addi	fp,sp,4
 400bf44:	e13fff15 	stw	r4,-4(fp)
}
 400bf48:	0001883a 	nop
 400bf4c:	e037883a 	mov	sp,fp
 400bf50:	df000017 	ldw	fp,0(sp)
 400bf54:	dec00104 	addi	sp,sp,4
 400bf58:	f800283a 	ret

0400bf5c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 400bf5c:	defff904 	addi	sp,sp,-28
 400bf60:	df000615 	stw	fp,24(sp)
 400bf64:	df000604 	addi	fp,sp,24
 400bf68:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400bf6c:	0005303a 	rdctl	r2,status
 400bf70:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400bf74:	e0fffe17 	ldw	r3,-8(fp)
 400bf78:	00bfff84 	movi	r2,-2
 400bf7c:	1884703a 	and	r2,r3,r2
 400bf80:	1001703a 	wrctl	status,r2
  
  return context;
 400bf84:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 400bf88:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 400bf8c:	d0a00717 	ldw	r2,-32740(gp)
 400bf90:	10c000c4 	addi	r3,r2,3
 400bf94:	00bfff04 	movi	r2,-4
 400bf98:	1884703a 	and	r2,r3,r2
 400bf9c:	d0a00715 	stw	r2,-32740(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 400bfa0:	d0e00717 	ldw	r3,-32740(gp)
 400bfa4:	e0bfff17 	ldw	r2,-4(fp)
 400bfa8:	1887883a 	add	r3,r3,r2
 400bfac:	00820034 	movhi	r2,2048
 400bfb0:	10800004 	addi	r2,r2,0
 400bfb4:	10c0062e 	bgeu	r2,r3,400bfd0 <sbrk+0x74>
 400bfb8:	e0bffb17 	ldw	r2,-20(fp)
 400bfbc:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400bfc0:	e0bffa17 	ldw	r2,-24(fp)
 400bfc4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 400bfc8:	00bfffc4 	movi	r2,-1
 400bfcc:	00000b06 	br	400bffc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 400bfd0:	d0a00717 	ldw	r2,-32740(gp)
 400bfd4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 400bfd8:	d0e00717 	ldw	r3,-32740(gp)
 400bfdc:	e0bfff17 	ldw	r2,-4(fp)
 400bfe0:	1885883a 	add	r2,r3,r2
 400bfe4:	d0a00715 	stw	r2,-32740(gp)
 400bfe8:	e0bffb17 	ldw	r2,-20(fp)
 400bfec:	e0bffc15 	stw	r2,-16(fp)
 400bff0:	e0bffc17 	ldw	r2,-16(fp)
 400bff4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 400bff8:	e0bffd17 	ldw	r2,-12(fp)
} 
 400bffc:	e037883a 	mov	sp,fp
 400c000:	df000017 	ldw	fp,0(sp)
 400c004:	dec00104 	addi	sp,sp,4
 400c008:	f800283a 	ret

0400c00c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 400c00c:	defffd04 	addi	sp,sp,-12
 400c010:	dfc00215 	stw	ra,8(sp)
 400c014:	df000115 	stw	fp,4(sp)
 400c018:	df000104 	addi	fp,sp,4
 400c01c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 400c020:	e13fff17 	ldw	r4,-4(fp)
 400c024:	400cd980 	call	400cd98 <alt_busy_sleep>
}
 400c028:	e037883a 	mov	sp,fp
 400c02c:	dfc00117 	ldw	ra,4(sp)
 400c030:	df000017 	ldw	fp,0(sp)
 400c034:	dec00204 	addi	sp,sp,8
 400c038:	f800283a 	ret

0400c03c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 400c03c:	defffd04 	addi	sp,sp,-12
 400c040:	dfc00215 	stw	ra,8(sp)
 400c044:	df000115 	stw	fp,4(sp)
 400c048:	df000104 	addi	fp,sp,4
 400c04c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 400c050:	d1600a04 	addi	r5,gp,-32728
 400c054:	e13fff17 	ldw	r4,-4(fp)
 400c058:	400d08c0 	call	400d08c <alt_dev_llist_insert>
}
 400c05c:	e037883a 	mov	sp,fp
 400c060:	dfc00117 	ldw	ra,4(sp)
 400c064:	df000017 	ldw	fp,0(sp)
 400c068:	dec00204 	addi	sp,sp,8
 400c06c:	f800283a 	ret

0400c070 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 400c070:	defffd04 	addi	sp,sp,-12
 400c074:	dfc00215 	stw	ra,8(sp)
 400c078:	df000115 	stw	fp,4(sp)
 400c07c:	df000104 	addi	fp,sp,4
 400c080:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 400c084:	400dabc0 	call	400dabc <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 400c088:	00800044 	movi	r2,1
 400c08c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 400c090:	0001883a 	nop
 400c094:	e037883a 	mov	sp,fp
 400c098:	dfc00117 	ldw	ra,4(sp)
 400c09c:	df000017 	ldw	fp,0(sp)
 400c0a0:	dec00204 	addi	sp,sp,8
 400c0a4:	f800283a 	ret

0400c0a8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 400c0a8:	defffe04 	addi	sp,sp,-8
 400c0ac:	dfc00115 	stw	ra,4(sp)
 400c0b0:	df000015 	stw	fp,0(sp)
 400c0b4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 400c0b8:	01c0fa04 	movi	r7,1000
 400c0bc:	01800084 	movi	r6,2
 400c0c0:	000b883a 	mov	r5,zero
 400c0c4:	01020034 	movhi	r4,2048
 400c0c8:	21141004 	addi	r4,r4,20544
 400c0cc:	400cbf00 	call	400cbf0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 400c0d0:	01800044 	movi	r6,1
 400c0d4:	000b883a 	mov	r5,zero
 400c0d8:	01010074 	movhi	r4,1025
 400c0dc:	213c1a04 	addi	r4,r4,-3992
 400c0e0:	400c2740 	call	400c274 <altera_avalon_jtag_uart_init>
 400c0e4:	01010074 	movhi	r4,1025
 400c0e8:	213c1004 	addi	r4,r4,-4032
 400c0ec:	400c03c0 	call	400c03c <alt_dev_reg>
    ALTERA_AVALON_SPI_INIT ( SPI_0, spi_0);
 400c0f0:	0001883a 	nop
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 400c0f4:	0001883a 	nop
}
 400c0f8:	0001883a 	nop
 400c0fc:	e037883a 	mov	sp,fp
 400c100:	dfc00117 	ldw	ra,4(sp)
 400c104:	df000017 	ldw	fp,0(sp)
 400c108:	dec00204 	addi	sp,sp,8
 400c10c:	f800283a 	ret

0400c110 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 400c110:	defffa04 	addi	sp,sp,-24
 400c114:	dfc00515 	stw	ra,20(sp)
 400c118:	df000415 	stw	fp,16(sp)
 400c11c:	df000404 	addi	fp,sp,16
 400c120:	e13ffd15 	stw	r4,-12(fp)
 400c124:	e17ffe15 	stw	r5,-8(fp)
 400c128:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400c12c:	e0bffd17 	ldw	r2,-12(fp)
 400c130:	10800017 	ldw	r2,0(r2)
 400c134:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 400c138:	e0bffc17 	ldw	r2,-16(fp)
 400c13c:	10c00a04 	addi	r3,r2,40
 400c140:	e0bffd17 	ldw	r2,-12(fp)
 400c144:	10800217 	ldw	r2,8(r2)
 400c148:	100f883a 	mov	r7,r2
 400c14c:	e1bfff17 	ldw	r6,-4(fp)
 400c150:	e17ffe17 	ldw	r5,-8(fp)
 400c154:	1809883a 	mov	r4,r3
 400c158:	400c7380 	call	400c738 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 400c15c:	e037883a 	mov	sp,fp
 400c160:	dfc00117 	ldw	ra,4(sp)
 400c164:	df000017 	ldw	fp,0(sp)
 400c168:	dec00204 	addi	sp,sp,8
 400c16c:	f800283a 	ret

0400c170 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 400c170:	defffa04 	addi	sp,sp,-24
 400c174:	dfc00515 	stw	ra,20(sp)
 400c178:	df000415 	stw	fp,16(sp)
 400c17c:	df000404 	addi	fp,sp,16
 400c180:	e13ffd15 	stw	r4,-12(fp)
 400c184:	e17ffe15 	stw	r5,-8(fp)
 400c188:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400c18c:	e0bffd17 	ldw	r2,-12(fp)
 400c190:	10800017 	ldw	r2,0(r2)
 400c194:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 400c198:	e0bffc17 	ldw	r2,-16(fp)
 400c19c:	10c00a04 	addi	r3,r2,40
 400c1a0:	e0bffd17 	ldw	r2,-12(fp)
 400c1a4:	10800217 	ldw	r2,8(r2)
 400c1a8:	100f883a 	mov	r7,r2
 400c1ac:	e1bfff17 	ldw	r6,-4(fp)
 400c1b0:	e17ffe17 	ldw	r5,-8(fp)
 400c1b4:	1809883a 	mov	r4,r3
 400c1b8:	400c9540 	call	400c954 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 400c1bc:	e037883a 	mov	sp,fp
 400c1c0:	dfc00117 	ldw	ra,4(sp)
 400c1c4:	df000017 	ldw	fp,0(sp)
 400c1c8:	dec00204 	addi	sp,sp,8
 400c1cc:	f800283a 	ret

0400c1d0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 400c1d0:	defffc04 	addi	sp,sp,-16
 400c1d4:	dfc00315 	stw	ra,12(sp)
 400c1d8:	df000215 	stw	fp,8(sp)
 400c1dc:	df000204 	addi	fp,sp,8
 400c1e0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400c1e4:	e0bfff17 	ldw	r2,-4(fp)
 400c1e8:	10800017 	ldw	r2,0(r2)
 400c1ec:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 400c1f0:	e0bffe17 	ldw	r2,-8(fp)
 400c1f4:	10c00a04 	addi	r3,r2,40
 400c1f8:	e0bfff17 	ldw	r2,-4(fp)
 400c1fc:	10800217 	ldw	r2,8(r2)
 400c200:	100b883a 	mov	r5,r2
 400c204:	1809883a 	mov	r4,r3
 400c208:	400c5e00 	call	400c5e0 <altera_avalon_jtag_uart_close>
}
 400c20c:	e037883a 	mov	sp,fp
 400c210:	dfc00117 	ldw	ra,4(sp)
 400c214:	df000017 	ldw	fp,0(sp)
 400c218:	dec00204 	addi	sp,sp,8
 400c21c:	f800283a 	ret

0400c220 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 400c220:	defffa04 	addi	sp,sp,-24
 400c224:	dfc00515 	stw	ra,20(sp)
 400c228:	df000415 	stw	fp,16(sp)
 400c22c:	df000404 	addi	fp,sp,16
 400c230:	e13ffd15 	stw	r4,-12(fp)
 400c234:	e17ffe15 	stw	r5,-8(fp)
 400c238:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 400c23c:	e0bffd17 	ldw	r2,-12(fp)
 400c240:	10800017 	ldw	r2,0(r2)
 400c244:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 400c248:	e0bffc17 	ldw	r2,-16(fp)
 400c24c:	10800a04 	addi	r2,r2,40
 400c250:	e1bfff17 	ldw	r6,-4(fp)
 400c254:	e17ffe17 	ldw	r5,-8(fp)
 400c258:	1009883a 	mov	r4,r2
 400c25c:	400c6480 	call	400c648 <altera_avalon_jtag_uart_ioctl>
}
 400c260:	e037883a 	mov	sp,fp
 400c264:	dfc00117 	ldw	ra,4(sp)
 400c268:	df000017 	ldw	fp,0(sp)
 400c26c:	dec00204 	addi	sp,sp,8
 400c270:	f800283a 	ret

0400c274 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 400c274:	defffa04 	addi	sp,sp,-24
 400c278:	dfc00515 	stw	ra,20(sp)
 400c27c:	df000415 	stw	fp,16(sp)
 400c280:	df000404 	addi	fp,sp,16
 400c284:	e13ffd15 	stw	r4,-12(fp)
 400c288:	e17ffe15 	stw	r5,-8(fp)
 400c28c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400c290:	e0bffd17 	ldw	r2,-12(fp)
 400c294:	00c00044 	movi	r3,1
 400c298:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 400c29c:	e0bffd17 	ldw	r2,-12(fp)
 400c2a0:	10800017 	ldw	r2,0(r2)
 400c2a4:	10800104 	addi	r2,r2,4
 400c2a8:	1007883a 	mov	r3,r2
 400c2ac:	e0bffd17 	ldw	r2,-12(fp)
 400c2b0:	10800817 	ldw	r2,32(r2)
 400c2b4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 400c2b8:	e0bffe17 	ldw	r2,-8(fp)
 400c2bc:	e0ffff17 	ldw	r3,-4(fp)
 400c2c0:	d8000015 	stw	zero,0(sp)
 400c2c4:	e1fffd17 	ldw	r7,-12(fp)
 400c2c8:	01810074 	movhi	r6,1025
 400c2cc:	31b0cd04 	addi	r6,r6,-15564
 400c2d0:	180b883a 	mov	r5,r3
 400c2d4:	1009883a 	mov	r4,r2
 400c2d8:	400d2100 	call	400d210 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 400c2dc:	e0bffd17 	ldw	r2,-12(fp)
 400c2e0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 400c2e4:	e0bffd17 	ldw	r2,-12(fp)
 400c2e8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 400c2ec:	d0e79017 	ldw	r3,-25024(gp)
 400c2f0:	e1fffd17 	ldw	r7,-12(fp)
 400c2f4:	01810074 	movhi	r6,1025
 400c2f8:	31b15004 	addi	r6,r6,-15040
 400c2fc:	180b883a 	mov	r5,r3
 400c300:	1009883a 	mov	r4,r2
 400c304:	400cc6c0 	call	400cc6c <alt_alarm_start>
 400c308:	1000040e 	bge	r2,zero,400c31c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 400c30c:	e0fffd17 	ldw	r3,-12(fp)
 400c310:	00a00034 	movhi	r2,32768
 400c314:	10bfffc4 	addi	r2,r2,-1
 400c318:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 400c31c:	0001883a 	nop
 400c320:	e037883a 	mov	sp,fp
 400c324:	dfc00117 	ldw	ra,4(sp)
 400c328:	df000017 	ldw	fp,0(sp)
 400c32c:	dec00204 	addi	sp,sp,8
 400c330:	f800283a 	ret

0400c334 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 400c334:	defff804 	addi	sp,sp,-32
 400c338:	df000715 	stw	fp,28(sp)
 400c33c:	df000704 	addi	fp,sp,28
 400c340:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 400c344:	e0bfff17 	ldw	r2,-4(fp)
 400c348:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 400c34c:	e0bffb17 	ldw	r2,-20(fp)
 400c350:	10800017 	ldw	r2,0(r2)
 400c354:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400c358:	e0bffc17 	ldw	r2,-16(fp)
 400c35c:	10800104 	addi	r2,r2,4
 400c360:	10800037 	ldwio	r2,0(r2)
 400c364:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 400c368:	e0bffd17 	ldw	r2,-12(fp)
 400c36c:	1080c00c 	andi	r2,r2,768
 400c370:	10006d26 	beq	r2,zero,400c528 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 400c374:	e0bffd17 	ldw	r2,-12(fp)
 400c378:	1080400c 	andi	r2,r2,256
 400c37c:	10003526 	beq	r2,zero,400c454 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 400c380:	00800074 	movhi	r2,1
 400c384:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400c388:	e0bffb17 	ldw	r2,-20(fp)
 400c38c:	10800a17 	ldw	r2,40(r2)
 400c390:	10800044 	addi	r2,r2,1
 400c394:	1081ffcc 	andi	r2,r2,2047
 400c398:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 400c39c:	e0bffb17 	ldw	r2,-20(fp)
 400c3a0:	10c00b17 	ldw	r3,44(r2)
 400c3a4:	e0bffe17 	ldw	r2,-8(fp)
 400c3a8:	18801526 	beq	r3,r2,400c400 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 400c3ac:	e0bffc17 	ldw	r2,-16(fp)
 400c3b0:	10800037 	ldwio	r2,0(r2)
 400c3b4:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 400c3b8:	e0bff917 	ldw	r2,-28(fp)
 400c3bc:	10a0000c 	andi	r2,r2,32768
 400c3c0:	10001126 	beq	r2,zero,400c408 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 400c3c4:	e0bffb17 	ldw	r2,-20(fp)
 400c3c8:	10800a17 	ldw	r2,40(r2)
 400c3cc:	e0fff917 	ldw	r3,-28(fp)
 400c3d0:	1809883a 	mov	r4,r3
 400c3d4:	e0fffb17 	ldw	r3,-20(fp)
 400c3d8:	1885883a 	add	r2,r3,r2
 400c3dc:	10800e04 	addi	r2,r2,56
 400c3e0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400c3e4:	e0bffb17 	ldw	r2,-20(fp)
 400c3e8:	10800a17 	ldw	r2,40(r2)
 400c3ec:	10800044 	addi	r2,r2,1
 400c3f0:	10c1ffcc 	andi	r3,r2,2047
 400c3f4:	e0bffb17 	ldw	r2,-20(fp)
 400c3f8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 400c3fc:	003fe206 	br	400c388 <__alt_mem_onchip_memory2_0+0xfc0071c8>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 400c400:	0001883a 	nop
 400c404:	00000106 	br	400c40c <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 400c408:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 400c40c:	e0bff917 	ldw	r2,-28(fp)
 400c410:	10bfffec 	andhi	r2,r2,65535
 400c414:	10000f26 	beq	r2,zero,400c454 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400c418:	e0bffb17 	ldw	r2,-20(fp)
 400c41c:	10c00817 	ldw	r3,32(r2)
 400c420:	00bfff84 	movi	r2,-2
 400c424:	1886703a 	and	r3,r3,r2
 400c428:	e0bffb17 	ldw	r2,-20(fp)
 400c42c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 400c430:	e0bffc17 	ldw	r2,-16(fp)
 400c434:	10800104 	addi	r2,r2,4
 400c438:	1007883a 	mov	r3,r2
 400c43c:	e0bffb17 	ldw	r2,-20(fp)
 400c440:	10800817 	ldw	r2,32(r2)
 400c444:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400c448:	e0bffc17 	ldw	r2,-16(fp)
 400c44c:	10800104 	addi	r2,r2,4
 400c450:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 400c454:	e0bffd17 	ldw	r2,-12(fp)
 400c458:	1080800c 	andi	r2,r2,512
 400c45c:	103fbe26 	beq	r2,zero,400c358 <__alt_mem_onchip_memory2_0+0xfc007198>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 400c460:	e0bffd17 	ldw	r2,-12(fp)
 400c464:	1004d43a 	srli	r2,r2,16
 400c468:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 400c46c:	00001406 	br	400c4c0 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 400c470:	e0bffc17 	ldw	r2,-16(fp)
 400c474:	e0fffb17 	ldw	r3,-20(fp)
 400c478:	18c00d17 	ldw	r3,52(r3)
 400c47c:	e13ffb17 	ldw	r4,-20(fp)
 400c480:	20c7883a 	add	r3,r4,r3
 400c484:	18c20e04 	addi	r3,r3,2104
 400c488:	18c00003 	ldbu	r3,0(r3)
 400c48c:	18c03fcc 	andi	r3,r3,255
 400c490:	18c0201c 	xori	r3,r3,128
 400c494:	18ffe004 	addi	r3,r3,-128
 400c498:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400c49c:	e0bffb17 	ldw	r2,-20(fp)
 400c4a0:	10800d17 	ldw	r2,52(r2)
 400c4a4:	10800044 	addi	r2,r2,1
 400c4a8:	10c1ffcc 	andi	r3,r2,2047
 400c4ac:	e0bffb17 	ldw	r2,-20(fp)
 400c4b0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 400c4b4:	e0bffa17 	ldw	r2,-24(fp)
 400c4b8:	10bfffc4 	addi	r2,r2,-1
 400c4bc:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 400c4c0:	e0bffa17 	ldw	r2,-24(fp)
 400c4c4:	10000526 	beq	r2,zero,400c4dc <altera_avalon_jtag_uart_irq+0x1a8>
 400c4c8:	e0bffb17 	ldw	r2,-20(fp)
 400c4cc:	10c00d17 	ldw	r3,52(r2)
 400c4d0:	e0bffb17 	ldw	r2,-20(fp)
 400c4d4:	10800c17 	ldw	r2,48(r2)
 400c4d8:	18bfe51e 	bne	r3,r2,400c470 <__alt_mem_onchip_memory2_0+0xfc0072b0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 400c4dc:	e0bffa17 	ldw	r2,-24(fp)
 400c4e0:	103f9d26 	beq	r2,zero,400c358 <__alt_mem_onchip_memory2_0+0xfc007198>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400c4e4:	e0bffb17 	ldw	r2,-20(fp)
 400c4e8:	10c00817 	ldw	r3,32(r2)
 400c4ec:	00bfff44 	movi	r2,-3
 400c4f0:	1886703a 	and	r3,r3,r2
 400c4f4:	e0bffb17 	ldw	r2,-20(fp)
 400c4f8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400c4fc:	e0bffb17 	ldw	r2,-20(fp)
 400c500:	10800017 	ldw	r2,0(r2)
 400c504:	10800104 	addi	r2,r2,4
 400c508:	1007883a 	mov	r3,r2
 400c50c:	e0bffb17 	ldw	r2,-20(fp)
 400c510:	10800817 	ldw	r2,32(r2)
 400c514:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400c518:	e0bffc17 	ldw	r2,-16(fp)
 400c51c:	10800104 	addi	r2,r2,4
 400c520:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 400c524:	003f8c06 	br	400c358 <__alt_mem_onchip_memory2_0+0xfc007198>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 400c528:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 400c52c:	0001883a 	nop
 400c530:	e037883a 	mov	sp,fp
 400c534:	df000017 	ldw	fp,0(sp)
 400c538:	dec00104 	addi	sp,sp,4
 400c53c:	f800283a 	ret

0400c540 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 400c540:	defff804 	addi	sp,sp,-32
 400c544:	df000715 	stw	fp,28(sp)
 400c548:	df000704 	addi	fp,sp,28
 400c54c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 400c550:	e0bffb17 	ldw	r2,-20(fp)
 400c554:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 400c558:	e0bff917 	ldw	r2,-28(fp)
 400c55c:	10800017 	ldw	r2,0(r2)
 400c560:	10800104 	addi	r2,r2,4
 400c564:	10800037 	ldwio	r2,0(r2)
 400c568:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 400c56c:	e0bffa17 	ldw	r2,-24(fp)
 400c570:	1081000c 	andi	r2,r2,1024
 400c574:	10000b26 	beq	r2,zero,400c5a4 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 400c578:	e0bff917 	ldw	r2,-28(fp)
 400c57c:	10800017 	ldw	r2,0(r2)
 400c580:	10800104 	addi	r2,r2,4
 400c584:	1007883a 	mov	r3,r2
 400c588:	e0bff917 	ldw	r2,-28(fp)
 400c58c:	10800817 	ldw	r2,32(r2)
 400c590:	10810014 	ori	r2,r2,1024
 400c594:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 400c598:	e0bff917 	ldw	r2,-28(fp)
 400c59c:	10000915 	stw	zero,36(r2)
 400c5a0:	00000a06 	br	400c5cc <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 400c5a4:	e0bff917 	ldw	r2,-28(fp)
 400c5a8:	10c00917 	ldw	r3,36(r2)
 400c5ac:	00a00034 	movhi	r2,32768
 400c5b0:	10bfff04 	addi	r2,r2,-4
 400c5b4:	10c00536 	bltu	r2,r3,400c5cc <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 400c5b8:	e0bff917 	ldw	r2,-28(fp)
 400c5bc:	10800917 	ldw	r2,36(r2)
 400c5c0:	10c00044 	addi	r3,r2,1
 400c5c4:	e0bff917 	ldw	r2,-28(fp)
 400c5c8:	10c00915 	stw	r3,36(r2)
 400c5cc:	d0a79017 	ldw	r2,-25024(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 400c5d0:	e037883a 	mov	sp,fp
 400c5d4:	df000017 	ldw	fp,0(sp)
 400c5d8:	dec00104 	addi	sp,sp,4
 400c5dc:	f800283a 	ret

0400c5e0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 400c5e0:	defffd04 	addi	sp,sp,-12
 400c5e4:	df000215 	stw	fp,8(sp)
 400c5e8:	df000204 	addi	fp,sp,8
 400c5ec:	e13ffe15 	stw	r4,-8(fp)
 400c5f0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400c5f4:	00000506 	br	400c60c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 400c5f8:	e0bfff17 	ldw	r2,-4(fp)
 400c5fc:	1090000c 	andi	r2,r2,16384
 400c600:	10000226 	beq	r2,zero,400c60c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 400c604:	00bffd44 	movi	r2,-11
 400c608:	00000b06 	br	400c638 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400c60c:	e0bffe17 	ldw	r2,-8(fp)
 400c610:	10c00d17 	ldw	r3,52(r2)
 400c614:	e0bffe17 	ldw	r2,-8(fp)
 400c618:	10800c17 	ldw	r2,48(r2)
 400c61c:	18800526 	beq	r3,r2,400c634 <altera_avalon_jtag_uart_close+0x54>
 400c620:	e0bffe17 	ldw	r2,-8(fp)
 400c624:	10c00917 	ldw	r3,36(r2)
 400c628:	e0bffe17 	ldw	r2,-8(fp)
 400c62c:	10800117 	ldw	r2,4(r2)
 400c630:	18bff136 	bltu	r3,r2,400c5f8 <__alt_mem_onchip_memory2_0+0xfc007438>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 400c634:	0005883a 	mov	r2,zero
}
 400c638:	e037883a 	mov	sp,fp
 400c63c:	df000017 	ldw	fp,0(sp)
 400c640:	dec00104 	addi	sp,sp,4
 400c644:	f800283a 	ret

0400c648 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 400c648:	defffa04 	addi	sp,sp,-24
 400c64c:	df000515 	stw	fp,20(sp)
 400c650:	df000504 	addi	fp,sp,20
 400c654:	e13ffd15 	stw	r4,-12(fp)
 400c658:	e17ffe15 	stw	r5,-8(fp)
 400c65c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 400c660:	00bff9c4 	movi	r2,-25
 400c664:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 400c668:	e0bffe17 	ldw	r2,-8(fp)
 400c66c:	10da8060 	cmpeqi	r3,r2,27137
 400c670:	1800031e 	bne	r3,zero,400c680 <altera_avalon_jtag_uart_ioctl+0x38>
 400c674:	109a80a0 	cmpeqi	r2,r2,27138
 400c678:	1000181e 	bne	r2,zero,400c6dc <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 400c67c:	00002906 	br	400c724 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 400c680:	e0bffd17 	ldw	r2,-12(fp)
 400c684:	10c00117 	ldw	r3,4(r2)
 400c688:	00a00034 	movhi	r2,32768
 400c68c:	10bfffc4 	addi	r2,r2,-1
 400c690:	18802126 	beq	r3,r2,400c718 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 400c694:	e0bfff17 	ldw	r2,-4(fp)
 400c698:	10800017 	ldw	r2,0(r2)
 400c69c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 400c6a0:	e0bffc17 	ldw	r2,-16(fp)
 400c6a4:	10800090 	cmplti	r2,r2,2
 400c6a8:	1000061e 	bne	r2,zero,400c6c4 <altera_avalon_jtag_uart_ioctl+0x7c>
 400c6ac:	e0fffc17 	ldw	r3,-16(fp)
 400c6b0:	00a00034 	movhi	r2,32768
 400c6b4:	10bfffc4 	addi	r2,r2,-1
 400c6b8:	18800226 	beq	r3,r2,400c6c4 <altera_avalon_jtag_uart_ioctl+0x7c>
 400c6bc:	e0bffc17 	ldw	r2,-16(fp)
 400c6c0:	00000206 	br	400c6cc <altera_avalon_jtag_uart_ioctl+0x84>
 400c6c4:	00a00034 	movhi	r2,32768
 400c6c8:	10bfff84 	addi	r2,r2,-2
 400c6cc:	e0fffd17 	ldw	r3,-12(fp)
 400c6d0:	18800115 	stw	r2,4(r3)
      rc = 0;
 400c6d4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 400c6d8:	00000f06 	br	400c718 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 400c6dc:	e0bffd17 	ldw	r2,-12(fp)
 400c6e0:	10c00117 	ldw	r3,4(r2)
 400c6e4:	00a00034 	movhi	r2,32768
 400c6e8:	10bfffc4 	addi	r2,r2,-1
 400c6ec:	18800c26 	beq	r3,r2,400c720 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 400c6f0:	e0bffd17 	ldw	r2,-12(fp)
 400c6f4:	10c00917 	ldw	r3,36(r2)
 400c6f8:	e0bffd17 	ldw	r2,-12(fp)
 400c6fc:	10800117 	ldw	r2,4(r2)
 400c700:	1885803a 	cmpltu	r2,r3,r2
 400c704:	10c03fcc 	andi	r3,r2,255
 400c708:	e0bfff17 	ldw	r2,-4(fp)
 400c70c:	10c00015 	stw	r3,0(r2)
      rc = 0;
 400c710:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 400c714:	00000206 	br	400c720 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 400c718:	0001883a 	nop
 400c71c:	00000106 	br	400c724 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 400c720:	0001883a 	nop

  default:
    break;
  }

  return rc;
 400c724:	e0bffb17 	ldw	r2,-20(fp)
}
 400c728:	e037883a 	mov	sp,fp
 400c72c:	df000017 	ldw	fp,0(sp)
 400c730:	dec00104 	addi	sp,sp,4
 400c734:	f800283a 	ret

0400c738 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 400c738:	defff304 	addi	sp,sp,-52
 400c73c:	dfc00c15 	stw	ra,48(sp)
 400c740:	df000b15 	stw	fp,44(sp)
 400c744:	df000b04 	addi	fp,sp,44
 400c748:	e13ffc15 	stw	r4,-16(fp)
 400c74c:	e17ffd15 	stw	r5,-12(fp)
 400c750:	e1bffe15 	stw	r6,-8(fp)
 400c754:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 400c758:	e0bffd17 	ldw	r2,-12(fp)
 400c75c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400c760:	00004706 	br	400c880 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 400c764:	e0bffc17 	ldw	r2,-16(fp)
 400c768:	10800a17 	ldw	r2,40(r2)
 400c76c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 400c770:	e0bffc17 	ldw	r2,-16(fp)
 400c774:	10800b17 	ldw	r2,44(r2)
 400c778:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 400c77c:	e0fff717 	ldw	r3,-36(fp)
 400c780:	e0bff817 	ldw	r2,-32(fp)
 400c784:	18800536 	bltu	r3,r2,400c79c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 400c788:	e0fff717 	ldw	r3,-36(fp)
 400c78c:	e0bff817 	ldw	r2,-32(fp)
 400c790:	1885c83a 	sub	r2,r3,r2
 400c794:	e0bff615 	stw	r2,-40(fp)
 400c798:	00000406 	br	400c7ac <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 400c79c:	00c20004 	movi	r3,2048
 400c7a0:	e0bff817 	ldw	r2,-32(fp)
 400c7a4:	1885c83a 	sub	r2,r3,r2
 400c7a8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 400c7ac:	e0bff617 	ldw	r2,-40(fp)
 400c7b0:	10001e26 	beq	r2,zero,400c82c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 400c7b4:	e0fffe17 	ldw	r3,-8(fp)
 400c7b8:	e0bff617 	ldw	r2,-40(fp)
 400c7bc:	1880022e 	bgeu	r3,r2,400c7c8 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 400c7c0:	e0bffe17 	ldw	r2,-8(fp)
 400c7c4:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 400c7c8:	e0bffc17 	ldw	r2,-16(fp)
 400c7cc:	10c00e04 	addi	r3,r2,56
 400c7d0:	e0bff817 	ldw	r2,-32(fp)
 400c7d4:	1885883a 	add	r2,r3,r2
 400c7d8:	e1bff617 	ldw	r6,-40(fp)
 400c7dc:	100b883a 	mov	r5,r2
 400c7e0:	e13ff517 	ldw	r4,-44(fp)
 400c7e4:	40052300 	call	4005230 <memcpy>
      ptr   += n;
 400c7e8:	e0fff517 	ldw	r3,-44(fp)
 400c7ec:	e0bff617 	ldw	r2,-40(fp)
 400c7f0:	1885883a 	add	r2,r3,r2
 400c7f4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 400c7f8:	e0fffe17 	ldw	r3,-8(fp)
 400c7fc:	e0bff617 	ldw	r2,-40(fp)
 400c800:	1885c83a 	sub	r2,r3,r2
 400c804:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400c808:	e0fff817 	ldw	r3,-32(fp)
 400c80c:	e0bff617 	ldw	r2,-40(fp)
 400c810:	1885883a 	add	r2,r3,r2
 400c814:	10c1ffcc 	andi	r3,r2,2047
 400c818:	e0bffc17 	ldw	r2,-16(fp)
 400c81c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 400c820:	e0bffe17 	ldw	r2,-8(fp)
 400c824:	00bfcf16 	blt	zero,r2,400c764 <__alt_mem_onchip_memory2_0+0xfc0075a4>
 400c828:	00000106 	br	400c830 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 400c82c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 400c830:	e0fff517 	ldw	r3,-44(fp)
 400c834:	e0bffd17 	ldw	r2,-12(fp)
 400c838:	1880141e 	bne	r3,r2,400c88c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 400c83c:	e0bfff17 	ldw	r2,-4(fp)
 400c840:	1090000c 	andi	r2,r2,16384
 400c844:	1000131e 	bne	r2,zero,400c894 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 400c848:	0001883a 	nop
 400c84c:	e0bffc17 	ldw	r2,-16(fp)
 400c850:	10c00a17 	ldw	r3,40(r2)
 400c854:	e0bff717 	ldw	r2,-36(fp)
 400c858:	1880051e 	bne	r3,r2,400c870 <altera_avalon_jtag_uart_read+0x138>
 400c85c:	e0bffc17 	ldw	r2,-16(fp)
 400c860:	10c00917 	ldw	r3,36(r2)
 400c864:	e0bffc17 	ldw	r2,-16(fp)
 400c868:	10800117 	ldw	r2,4(r2)
 400c86c:	18bff736 	bltu	r3,r2,400c84c <__alt_mem_onchip_memory2_0+0xfc00768c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 400c870:	e0bffc17 	ldw	r2,-16(fp)
 400c874:	10c00a17 	ldw	r3,40(r2)
 400c878:	e0bff717 	ldw	r2,-36(fp)
 400c87c:	18800726 	beq	r3,r2,400c89c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400c880:	e0bffe17 	ldw	r2,-8(fp)
 400c884:	00bfb716 	blt	zero,r2,400c764 <__alt_mem_onchip_memory2_0+0xfc0075a4>
 400c888:	00000506 	br	400c8a0 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 400c88c:	0001883a 	nop
 400c890:	00000306 	br	400c8a0 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 400c894:	0001883a 	nop
 400c898:	00000106 	br	400c8a0 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 400c89c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 400c8a0:	e0fff517 	ldw	r3,-44(fp)
 400c8a4:	e0bffd17 	ldw	r2,-12(fp)
 400c8a8:	18801826 	beq	r3,r2,400c90c <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400c8ac:	0005303a 	rdctl	r2,status
 400c8b0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400c8b4:	e0fffb17 	ldw	r3,-20(fp)
 400c8b8:	00bfff84 	movi	r2,-2
 400c8bc:	1884703a 	and	r2,r3,r2
 400c8c0:	1001703a 	wrctl	status,r2
  
  return context;
 400c8c4:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 400c8c8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400c8cc:	e0bffc17 	ldw	r2,-16(fp)
 400c8d0:	10800817 	ldw	r2,32(r2)
 400c8d4:	10c00054 	ori	r3,r2,1
 400c8d8:	e0bffc17 	ldw	r2,-16(fp)
 400c8dc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400c8e0:	e0bffc17 	ldw	r2,-16(fp)
 400c8e4:	10800017 	ldw	r2,0(r2)
 400c8e8:	10800104 	addi	r2,r2,4
 400c8ec:	1007883a 	mov	r3,r2
 400c8f0:	e0bffc17 	ldw	r2,-16(fp)
 400c8f4:	10800817 	ldw	r2,32(r2)
 400c8f8:	18800035 	stwio	r2,0(r3)
 400c8fc:	e0bffa17 	ldw	r2,-24(fp)
 400c900:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400c904:	e0bff917 	ldw	r2,-28(fp)
 400c908:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 400c90c:	e0fff517 	ldw	r3,-44(fp)
 400c910:	e0bffd17 	ldw	r2,-12(fp)
 400c914:	18800426 	beq	r3,r2,400c928 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 400c918:	e0fff517 	ldw	r3,-44(fp)
 400c91c:	e0bffd17 	ldw	r2,-12(fp)
 400c920:	1885c83a 	sub	r2,r3,r2
 400c924:	00000606 	br	400c940 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 400c928:	e0bfff17 	ldw	r2,-4(fp)
 400c92c:	1090000c 	andi	r2,r2,16384
 400c930:	10000226 	beq	r2,zero,400c93c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 400c934:	00bffd44 	movi	r2,-11
 400c938:	00000106 	br	400c940 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 400c93c:	00bffec4 	movi	r2,-5
}
 400c940:	e037883a 	mov	sp,fp
 400c944:	dfc00117 	ldw	ra,4(sp)
 400c948:	df000017 	ldw	fp,0(sp)
 400c94c:	dec00204 	addi	sp,sp,8
 400c950:	f800283a 	ret

0400c954 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 400c954:	defff304 	addi	sp,sp,-52
 400c958:	dfc00c15 	stw	ra,48(sp)
 400c95c:	df000b15 	stw	fp,44(sp)
 400c960:	df000b04 	addi	fp,sp,44
 400c964:	e13ffc15 	stw	r4,-16(fp)
 400c968:	e17ffd15 	stw	r5,-12(fp)
 400c96c:	e1bffe15 	stw	r6,-8(fp)
 400c970:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 400c974:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 400c978:	e0bffd17 	ldw	r2,-12(fp)
 400c97c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400c980:	00003706 	br	400ca60 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 400c984:	e0bffc17 	ldw	r2,-16(fp)
 400c988:	10800c17 	ldw	r2,48(r2)
 400c98c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 400c990:	e0bffc17 	ldw	r2,-16(fp)
 400c994:	10800d17 	ldw	r2,52(r2)
 400c998:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 400c99c:	e0fff917 	ldw	r3,-28(fp)
 400c9a0:	e0bff517 	ldw	r2,-44(fp)
 400c9a4:	1880062e 	bgeu	r3,r2,400c9c0 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 400c9a8:	e0fff517 	ldw	r3,-44(fp)
 400c9ac:	e0bff917 	ldw	r2,-28(fp)
 400c9b0:	1885c83a 	sub	r2,r3,r2
 400c9b4:	10bfffc4 	addi	r2,r2,-1
 400c9b8:	e0bff615 	stw	r2,-40(fp)
 400c9bc:	00000b06 	br	400c9ec <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 400c9c0:	e0bff517 	ldw	r2,-44(fp)
 400c9c4:	10000526 	beq	r2,zero,400c9dc <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 400c9c8:	00c20004 	movi	r3,2048
 400c9cc:	e0bff917 	ldw	r2,-28(fp)
 400c9d0:	1885c83a 	sub	r2,r3,r2
 400c9d4:	e0bff615 	stw	r2,-40(fp)
 400c9d8:	00000406 	br	400c9ec <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 400c9dc:	00c1ffc4 	movi	r3,2047
 400c9e0:	e0bff917 	ldw	r2,-28(fp)
 400c9e4:	1885c83a 	sub	r2,r3,r2
 400c9e8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 400c9ec:	e0bff617 	ldw	r2,-40(fp)
 400c9f0:	10001e26 	beq	r2,zero,400ca6c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 400c9f4:	e0fffe17 	ldw	r3,-8(fp)
 400c9f8:	e0bff617 	ldw	r2,-40(fp)
 400c9fc:	1880022e 	bgeu	r3,r2,400ca08 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 400ca00:	e0bffe17 	ldw	r2,-8(fp)
 400ca04:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 400ca08:	e0bffc17 	ldw	r2,-16(fp)
 400ca0c:	10c20e04 	addi	r3,r2,2104
 400ca10:	e0bff917 	ldw	r2,-28(fp)
 400ca14:	1885883a 	add	r2,r3,r2
 400ca18:	e1bff617 	ldw	r6,-40(fp)
 400ca1c:	e17ffd17 	ldw	r5,-12(fp)
 400ca20:	1009883a 	mov	r4,r2
 400ca24:	40052300 	call	4005230 <memcpy>
      ptr   += n;
 400ca28:	e0fffd17 	ldw	r3,-12(fp)
 400ca2c:	e0bff617 	ldw	r2,-40(fp)
 400ca30:	1885883a 	add	r2,r3,r2
 400ca34:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 400ca38:	e0fffe17 	ldw	r3,-8(fp)
 400ca3c:	e0bff617 	ldw	r2,-40(fp)
 400ca40:	1885c83a 	sub	r2,r3,r2
 400ca44:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400ca48:	e0fff917 	ldw	r3,-28(fp)
 400ca4c:	e0bff617 	ldw	r2,-40(fp)
 400ca50:	1885883a 	add	r2,r3,r2
 400ca54:	10c1ffcc 	andi	r3,r2,2047
 400ca58:	e0bffc17 	ldw	r2,-16(fp)
 400ca5c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400ca60:	e0bffe17 	ldw	r2,-8(fp)
 400ca64:	00bfc716 	blt	zero,r2,400c984 <__alt_mem_onchip_memory2_0+0xfc0077c4>
 400ca68:	00000106 	br	400ca70 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 400ca6c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400ca70:	0005303a 	rdctl	r2,status
 400ca74:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400ca78:	e0fffb17 	ldw	r3,-20(fp)
 400ca7c:	00bfff84 	movi	r2,-2
 400ca80:	1884703a 	and	r2,r3,r2
 400ca84:	1001703a 	wrctl	status,r2
  
  return context;
 400ca88:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 400ca8c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400ca90:	e0bffc17 	ldw	r2,-16(fp)
 400ca94:	10800817 	ldw	r2,32(r2)
 400ca98:	10c00094 	ori	r3,r2,2
 400ca9c:	e0bffc17 	ldw	r2,-16(fp)
 400caa0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400caa4:	e0bffc17 	ldw	r2,-16(fp)
 400caa8:	10800017 	ldw	r2,0(r2)
 400caac:	10800104 	addi	r2,r2,4
 400cab0:	1007883a 	mov	r3,r2
 400cab4:	e0bffc17 	ldw	r2,-16(fp)
 400cab8:	10800817 	ldw	r2,32(r2)
 400cabc:	18800035 	stwio	r2,0(r3)
 400cac0:	e0bffa17 	ldw	r2,-24(fp)
 400cac4:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400cac8:	e0bff817 	ldw	r2,-32(fp)
 400cacc:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 400cad0:	e0bffe17 	ldw	r2,-8(fp)
 400cad4:	0080100e 	bge	zero,r2,400cb18 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 400cad8:	e0bfff17 	ldw	r2,-4(fp)
 400cadc:	1090000c 	andi	r2,r2,16384
 400cae0:	1000101e 	bne	r2,zero,400cb24 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 400cae4:	0001883a 	nop
 400cae8:	e0bffc17 	ldw	r2,-16(fp)
 400caec:	10c00d17 	ldw	r3,52(r2)
 400caf0:	e0bff517 	ldw	r2,-44(fp)
 400caf4:	1880051e 	bne	r3,r2,400cb0c <altera_avalon_jtag_uart_write+0x1b8>
 400caf8:	e0bffc17 	ldw	r2,-16(fp)
 400cafc:	10c00917 	ldw	r3,36(r2)
 400cb00:	e0bffc17 	ldw	r2,-16(fp)
 400cb04:	10800117 	ldw	r2,4(r2)
 400cb08:	18bff736 	bltu	r3,r2,400cae8 <__alt_mem_onchip_memory2_0+0xfc007928>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 400cb0c:	e0bffc17 	ldw	r2,-16(fp)
 400cb10:	10800917 	ldw	r2,36(r2)
 400cb14:	1000051e 	bne	r2,zero,400cb2c <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 400cb18:	e0bffe17 	ldw	r2,-8(fp)
 400cb1c:	00bfd016 	blt	zero,r2,400ca60 <__alt_mem_onchip_memory2_0+0xfc0078a0>
 400cb20:	00000306 	br	400cb30 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 400cb24:	0001883a 	nop
 400cb28:	00000106 	br	400cb30 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 400cb2c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 400cb30:	e0fffd17 	ldw	r3,-12(fp)
 400cb34:	e0bff717 	ldw	r2,-36(fp)
 400cb38:	18800426 	beq	r3,r2,400cb4c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 400cb3c:	e0fffd17 	ldw	r3,-12(fp)
 400cb40:	e0bff717 	ldw	r2,-36(fp)
 400cb44:	1885c83a 	sub	r2,r3,r2
 400cb48:	00000606 	br	400cb64 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 400cb4c:	e0bfff17 	ldw	r2,-4(fp)
 400cb50:	1090000c 	andi	r2,r2,16384
 400cb54:	10000226 	beq	r2,zero,400cb60 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 400cb58:	00bffd44 	movi	r2,-11
 400cb5c:	00000106 	br	400cb64 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 400cb60:	00bffec4 	movi	r2,-5
}
 400cb64:	e037883a 	mov	sp,fp
 400cb68:	dfc00117 	ldw	ra,4(sp)
 400cb6c:	df000017 	ldw	fp,0(sp)
 400cb70:	dec00204 	addi	sp,sp,8
 400cb74:	f800283a 	ret

0400cb78 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 400cb78:	defffa04 	addi	sp,sp,-24
 400cb7c:	dfc00515 	stw	ra,20(sp)
 400cb80:	df000415 	stw	fp,16(sp)
 400cb84:	df000404 	addi	fp,sp,16
 400cb88:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 400cb8c:	0007883a 	mov	r3,zero
 400cb90:	e0bfff17 	ldw	r2,-4(fp)
 400cb94:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 400cb98:	e0bfff17 	ldw	r2,-4(fp)
 400cb9c:	10800104 	addi	r2,r2,4
 400cba0:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400cba4:	0005303a 	rdctl	r2,status
 400cba8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400cbac:	e0fffd17 	ldw	r3,-12(fp)
 400cbb0:	00bfff84 	movi	r2,-2
 400cbb4:	1884703a 	and	r2,r3,r2
 400cbb8:	1001703a 	wrctl	status,r2
  
  return context;
 400cbbc:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 400cbc0:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 400cbc4:	400d9b40 	call	400d9b4 <alt_tick>
 400cbc8:	e0bffc17 	ldw	r2,-16(fp)
 400cbcc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400cbd0:	e0bffe17 	ldw	r2,-8(fp)
 400cbd4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 400cbd8:	0001883a 	nop
 400cbdc:	e037883a 	mov	sp,fp
 400cbe0:	dfc00117 	ldw	ra,4(sp)
 400cbe4:	df000017 	ldw	fp,0(sp)
 400cbe8:	dec00204 	addi	sp,sp,8
 400cbec:	f800283a 	ret

0400cbf0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 400cbf0:	defff804 	addi	sp,sp,-32
 400cbf4:	dfc00715 	stw	ra,28(sp)
 400cbf8:	df000615 	stw	fp,24(sp)
 400cbfc:	df000604 	addi	fp,sp,24
 400cc00:	e13ffc15 	stw	r4,-16(fp)
 400cc04:	e17ffd15 	stw	r5,-12(fp)
 400cc08:	e1bffe15 	stw	r6,-8(fp)
 400cc0c:	e1ffff15 	stw	r7,-4(fp)
 400cc10:	e0bfff17 	ldw	r2,-4(fp)
 400cc14:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 400cc18:	d0a79017 	ldw	r2,-25024(gp)
 400cc1c:	1000021e 	bne	r2,zero,400cc28 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 400cc20:	e0bffb17 	ldw	r2,-20(fp)
 400cc24:	d0a79015 	stw	r2,-25024(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 400cc28:	e0bffc17 	ldw	r2,-16(fp)
 400cc2c:	10800104 	addi	r2,r2,4
 400cc30:	00c001c4 	movi	r3,7
 400cc34:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 400cc38:	d8000015 	stw	zero,0(sp)
 400cc3c:	e1fffc17 	ldw	r7,-16(fp)
 400cc40:	01810074 	movhi	r6,1025
 400cc44:	31b2de04 	addi	r6,r6,-13448
 400cc48:	e17ffe17 	ldw	r5,-8(fp)
 400cc4c:	e13ffd17 	ldw	r4,-12(fp)
 400cc50:	400d2100 	call	400d210 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 400cc54:	0001883a 	nop
 400cc58:	e037883a 	mov	sp,fp
 400cc5c:	dfc00117 	ldw	ra,4(sp)
 400cc60:	df000017 	ldw	fp,0(sp)
 400cc64:	dec00204 	addi	sp,sp,8
 400cc68:	f800283a 	ret

0400cc6c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 400cc6c:	defff504 	addi	sp,sp,-44
 400cc70:	df000a15 	stw	fp,40(sp)
 400cc74:	df000a04 	addi	fp,sp,40
 400cc78:	e13ffc15 	stw	r4,-16(fp)
 400cc7c:	e17ffd15 	stw	r5,-12(fp)
 400cc80:	e1bffe15 	stw	r6,-8(fp)
 400cc84:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 400cc88:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 400cc8c:	d0a79017 	ldw	r2,-25024(gp)
  
  if (alt_ticks_per_second ())
 400cc90:	10003c26 	beq	r2,zero,400cd84 <alt_alarm_start+0x118>
  {
    if (alarm)
 400cc94:	e0bffc17 	ldw	r2,-16(fp)
 400cc98:	10003826 	beq	r2,zero,400cd7c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 400cc9c:	e0bffc17 	ldw	r2,-16(fp)
 400cca0:	e0fffe17 	ldw	r3,-8(fp)
 400cca4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 400cca8:	e0bffc17 	ldw	r2,-16(fp)
 400ccac:	e0ffff17 	ldw	r3,-4(fp)
 400ccb0:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400ccb4:	0005303a 	rdctl	r2,status
 400ccb8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400ccbc:	e0fff917 	ldw	r3,-28(fp)
 400ccc0:	00bfff84 	movi	r2,-2
 400ccc4:	1884703a 	and	r2,r3,r2
 400ccc8:	1001703a 	wrctl	status,r2
  
  return context;
 400cccc:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 400ccd0:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 400ccd4:	d0a79117 	ldw	r2,-25020(gp)
      
      current_nticks = alt_nticks();
 400ccd8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 400ccdc:	e0fffd17 	ldw	r3,-12(fp)
 400cce0:	e0bff617 	ldw	r2,-40(fp)
 400cce4:	1885883a 	add	r2,r3,r2
 400cce8:	10c00044 	addi	r3,r2,1
 400ccec:	e0bffc17 	ldw	r2,-16(fp)
 400ccf0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 400ccf4:	e0bffc17 	ldw	r2,-16(fp)
 400ccf8:	10c00217 	ldw	r3,8(r2)
 400ccfc:	e0bff617 	ldw	r2,-40(fp)
 400cd00:	1880042e 	bgeu	r3,r2,400cd14 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 400cd04:	e0bffc17 	ldw	r2,-16(fp)
 400cd08:	00c00044 	movi	r3,1
 400cd0c:	10c00405 	stb	r3,16(r2)
 400cd10:	00000206 	br	400cd1c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 400cd14:	e0bffc17 	ldw	r2,-16(fp)
 400cd18:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 400cd1c:	e0bffc17 	ldw	r2,-16(fp)
 400cd20:	d0e00f04 	addi	r3,gp,-32708
 400cd24:	e0fffa15 	stw	r3,-24(fp)
 400cd28:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400cd2c:	e0bffb17 	ldw	r2,-20(fp)
 400cd30:	e0fffa17 	ldw	r3,-24(fp)
 400cd34:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400cd38:	e0bffa17 	ldw	r2,-24(fp)
 400cd3c:	10c00017 	ldw	r3,0(r2)
 400cd40:	e0bffb17 	ldw	r2,-20(fp)
 400cd44:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400cd48:	e0bffa17 	ldw	r2,-24(fp)
 400cd4c:	10800017 	ldw	r2,0(r2)
 400cd50:	e0fffb17 	ldw	r3,-20(fp)
 400cd54:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400cd58:	e0bffa17 	ldw	r2,-24(fp)
 400cd5c:	e0fffb17 	ldw	r3,-20(fp)
 400cd60:	10c00015 	stw	r3,0(r2)
 400cd64:	e0bff817 	ldw	r2,-32(fp)
 400cd68:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400cd6c:	e0bff717 	ldw	r2,-36(fp)
 400cd70:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 400cd74:	0005883a 	mov	r2,zero
 400cd78:	00000306 	br	400cd88 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 400cd7c:	00bffa84 	movi	r2,-22
 400cd80:	00000106 	br	400cd88 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 400cd84:	00bfde84 	movi	r2,-134
  }
}
 400cd88:	e037883a 	mov	sp,fp
 400cd8c:	df000017 	ldw	fp,0(sp)
 400cd90:	dec00104 	addi	sp,sp,4
 400cd94:	f800283a 	ret

0400cd98 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 400cd98:	defffa04 	addi	sp,sp,-24
 400cd9c:	dfc00515 	stw	ra,20(sp)
 400cda0:	df000415 	stw	fp,16(sp)
 400cda4:	df000404 	addi	fp,sp,16
 400cda8:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
 400cdac:	00800244 	movi	r2,9
 400cdb0:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 400cdb4:	014003f4 	movhi	r5,15
 400cdb8:	29509004 	addi	r5,r5,16960
 400cdbc:	e13ffd17 	ldw	r4,-12(fp)
 400cdc0:	4000af80 	call	4000af8 <__mulsi3>
 400cdc4:	100b883a 	mov	r5,r2
 400cdc8:	0100bef4 	movhi	r4,763
 400cdcc:	213c2004 	addi	r4,r4,-3968
 400cdd0:	4000a3c0 	call	4000a3c <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 400cdd4:	100b883a 	mov	r5,r2
 400cdd8:	01200034 	movhi	r4,32768
 400cddc:	213fffc4 	addi	r4,r4,-1
 400cde0:	4000a3c0 	call	4000a3c <__udivsi3>
 400cde4:	100b883a 	mov	r5,r2
 400cde8:	e13fff17 	ldw	r4,-4(fp)
 400cdec:	4000a3c0 	call	4000a3c <__udivsi3>
 400cdf0:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 400cdf4:	e0bffe17 	ldw	r2,-8(fp)
 400cdf8:	10002a26 	beq	r2,zero,400cea4 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 400cdfc:	e03ffc15 	stw	zero,-16(fp)
 400ce00:	00001706 	br	400ce60 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 400ce04:	00a00034 	movhi	r2,32768
 400ce08:	10bfffc4 	addi	r2,r2,-1
 400ce0c:	10bfffc4 	addi	r2,r2,-1
 400ce10:	103ffe1e 	bne	r2,zero,400ce0c <__alt_mem_onchip_memory2_0+0xfc007c4c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 400ce14:	014003f4 	movhi	r5,15
 400ce18:	29509004 	addi	r5,r5,16960
 400ce1c:	e13ffd17 	ldw	r4,-12(fp)
 400ce20:	4000af80 	call	4000af8 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 400ce24:	100b883a 	mov	r5,r2
 400ce28:	0100bef4 	movhi	r4,763
 400ce2c:	213c2004 	addi	r4,r4,-3968
 400ce30:	4000a3c0 	call	4000a3c <__udivsi3>
 400ce34:	100b883a 	mov	r5,r2
 400ce38:	01200034 	movhi	r4,32768
 400ce3c:	213fffc4 	addi	r4,r4,-1
 400ce40:	4000a3c0 	call	4000a3c <__udivsi3>
 400ce44:	1007883a 	mov	r3,r2
 400ce48:	e0bfff17 	ldw	r2,-4(fp)
 400ce4c:	10c5c83a 	sub	r2,r2,r3
 400ce50:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 400ce54:	e0bffc17 	ldw	r2,-16(fp)
 400ce58:	10800044 	addi	r2,r2,1
 400ce5c:	e0bffc15 	stw	r2,-16(fp)
 400ce60:	e0fffc17 	ldw	r3,-16(fp)
 400ce64:	e0bffe17 	ldw	r2,-8(fp)
 400ce68:	18bfe616 	blt	r3,r2,400ce04 <__alt_mem_onchip_memory2_0+0xfc007c44>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 400ce6c:	014003f4 	movhi	r5,15
 400ce70:	29509004 	addi	r5,r5,16960
 400ce74:	e13ffd17 	ldw	r4,-12(fp)
 400ce78:	4000af80 	call	4000af8 <__mulsi3>
 400ce7c:	100b883a 	mov	r5,r2
 400ce80:	0100bef4 	movhi	r4,763
 400ce84:	213c2004 	addi	r4,r4,-3968
 400ce88:	4000a3c0 	call	4000a3c <__udivsi3>
 400ce8c:	e17fff17 	ldw	r5,-4(fp)
 400ce90:	1009883a 	mov	r4,r2
 400ce94:	4000af80 	call	4000af8 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 400ce98:	10bfffc4 	addi	r2,r2,-1
 400ce9c:	103ffe1e 	bne	r2,zero,400ce98 <__alt_mem_onchip_memory2_0+0xfc007cd8>
 400cea0:	00000d06 	br	400ced8 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 400cea4:	014003f4 	movhi	r5,15
 400cea8:	29509004 	addi	r5,r5,16960
 400ceac:	e13ffd17 	ldw	r4,-12(fp)
 400ceb0:	4000af80 	call	4000af8 <__mulsi3>
 400ceb4:	100b883a 	mov	r5,r2
 400ceb8:	0100bef4 	movhi	r4,763
 400cebc:	213c2004 	addi	r4,r4,-3968
 400cec0:	4000a3c0 	call	4000a3c <__udivsi3>
 400cec4:	e17fff17 	ldw	r5,-4(fp)
 400cec8:	1009883a 	mov	r4,r2
 400cecc:	4000af80 	call	4000af8 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 400ced0:	10bfffc4 	addi	r2,r2,-1
 400ced4:	00bffe16 	blt	zero,r2,400ced0 <__alt_mem_onchip_memory2_0+0xfc007d10>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 400ced8:	0005883a 	mov	r2,zero
}
 400cedc:	e037883a 	mov	sp,fp
 400cee0:	dfc00117 	ldw	ra,4(sp)
 400cee4:	df000017 	ldw	fp,0(sp)
 400cee8:	dec00204 	addi	sp,sp,8
 400ceec:	f800283a 	ret

0400cef0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400cef0:	defffe04 	addi	sp,sp,-8
 400cef4:	dfc00115 	stw	ra,4(sp)
 400cef8:	df000015 	stw	fp,0(sp)
 400cefc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400cf00:	d0a00d17 	ldw	r2,-32716(gp)
 400cf04:	10000326 	beq	r2,zero,400cf14 <alt_get_errno+0x24>
 400cf08:	d0a00d17 	ldw	r2,-32716(gp)
 400cf0c:	103ee83a 	callr	r2
 400cf10:	00000106 	br	400cf18 <alt_get_errno+0x28>
 400cf14:	d0a78b04 	addi	r2,gp,-25044
}
 400cf18:	e037883a 	mov	sp,fp
 400cf1c:	dfc00117 	ldw	ra,4(sp)
 400cf20:	df000017 	ldw	fp,0(sp)
 400cf24:	dec00204 	addi	sp,sp,8
 400cf28:	f800283a 	ret

0400cf2c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 400cf2c:	defffb04 	addi	sp,sp,-20
 400cf30:	dfc00415 	stw	ra,16(sp)
 400cf34:	df000315 	stw	fp,12(sp)
 400cf38:	df000304 	addi	fp,sp,12
 400cf3c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 400cf40:	e0bfff17 	ldw	r2,-4(fp)
 400cf44:	10000816 	blt	r2,zero,400cf68 <close+0x3c>
 400cf48:	01400304 	movi	r5,12
 400cf4c:	e13fff17 	ldw	r4,-4(fp)
 400cf50:	4000af80 	call	4000af8 <__mulsi3>
 400cf54:	1007883a 	mov	r3,r2
 400cf58:	00810074 	movhi	r2,1025
 400cf5c:	10803204 	addi	r2,r2,200
 400cf60:	1885883a 	add	r2,r3,r2
 400cf64:	00000106 	br	400cf6c <close+0x40>
 400cf68:	0005883a 	mov	r2,zero
 400cf6c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 400cf70:	e0bffd17 	ldw	r2,-12(fp)
 400cf74:	10001926 	beq	r2,zero,400cfdc <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 400cf78:	e0bffd17 	ldw	r2,-12(fp)
 400cf7c:	10800017 	ldw	r2,0(r2)
 400cf80:	10800417 	ldw	r2,16(r2)
 400cf84:	10000626 	beq	r2,zero,400cfa0 <close+0x74>
 400cf88:	e0bffd17 	ldw	r2,-12(fp)
 400cf8c:	10800017 	ldw	r2,0(r2)
 400cf90:	10800417 	ldw	r2,16(r2)
 400cf94:	e13ffd17 	ldw	r4,-12(fp)
 400cf98:	103ee83a 	callr	r2
 400cf9c:	00000106 	br	400cfa4 <close+0x78>
 400cfa0:	0005883a 	mov	r2,zero
 400cfa4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 400cfa8:	e13fff17 	ldw	r4,-4(fp)
 400cfac:	400d8940 	call	400d894 <alt_release_fd>
    if (rval < 0)
 400cfb0:	e0bffe17 	ldw	r2,-8(fp)
 400cfb4:	1000070e 	bge	r2,zero,400cfd4 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 400cfb8:	400cef00 	call	400cef0 <alt_get_errno>
 400cfbc:	1007883a 	mov	r3,r2
 400cfc0:	e0bffe17 	ldw	r2,-8(fp)
 400cfc4:	0085c83a 	sub	r2,zero,r2
 400cfc8:	18800015 	stw	r2,0(r3)
      return -1;
 400cfcc:	00bfffc4 	movi	r2,-1
 400cfd0:	00000706 	br	400cff0 <close+0xc4>
    }
    return 0;
 400cfd4:	0005883a 	mov	r2,zero
 400cfd8:	00000506 	br	400cff0 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400cfdc:	400cef00 	call	400cef0 <alt_get_errno>
 400cfe0:	1007883a 	mov	r3,r2
 400cfe4:	00801444 	movi	r2,81
 400cfe8:	18800015 	stw	r2,0(r3)
    return -1;
 400cfec:	00bfffc4 	movi	r2,-1
  }
}
 400cff0:	e037883a 	mov	sp,fp
 400cff4:	dfc00117 	ldw	ra,4(sp)
 400cff8:	df000017 	ldw	fp,0(sp)
 400cffc:	dec00204 	addi	sp,sp,8
 400d000:	f800283a 	ret

0400d004 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 400d004:	deffff04 	addi	sp,sp,-4
 400d008:	df000015 	stw	fp,0(sp)
 400d00c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 400d010:	0001883a 	nop
 400d014:	e037883a 	mov	sp,fp
 400d018:	df000017 	ldw	fp,0(sp)
 400d01c:	dec00104 	addi	sp,sp,4
 400d020:	f800283a 	ret

0400d024 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 400d024:	defffc04 	addi	sp,sp,-16
 400d028:	df000315 	stw	fp,12(sp)
 400d02c:	df000304 	addi	fp,sp,12
 400d030:	e13ffd15 	stw	r4,-12(fp)
 400d034:	e17ffe15 	stw	r5,-8(fp)
 400d038:	e1bfff15 	stw	r6,-4(fp)
  return len;
 400d03c:	e0bfff17 	ldw	r2,-4(fp)
}
 400d040:	e037883a 	mov	sp,fp
 400d044:	df000017 	ldw	fp,0(sp)
 400d048:	dec00104 	addi	sp,sp,4
 400d04c:	f800283a 	ret

0400d050 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d050:	defffe04 	addi	sp,sp,-8
 400d054:	dfc00115 	stw	ra,4(sp)
 400d058:	df000015 	stw	fp,0(sp)
 400d05c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d060:	d0a00d17 	ldw	r2,-32716(gp)
 400d064:	10000326 	beq	r2,zero,400d074 <alt_get_errno+0x24>
 400d068:	d0a00d17 	ldw	r2,-32716(gp)
 400d06c:	103ee83a 	callr	r2
 400d070:	00000106 	br	400d078 <alt_get_errno+0x28>
 400d074:	d0a78b04 	addi	r2,gp,-25044
}
 400d078:	e037883a 	mov	sp,fp
 400d07c:	dfc00117 	ldw	ra,4(sp)
 400d080:	df000017 	ldw	fp,0(sp)
 400d084:	dec00204 	addi	sp,sp,8
 400d088:	f800283a 	ret

0400d08c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 400d08c:	defffa04 	addi	sp,sp,-24
 400d090:	dfc00515 	stw	ra,20(sp)
 400d094:	df000415 	stw	fp,16(sp)
 400d098:	df000404 	addi	fp,sp,16
 400d09c:	e13ffe15 	stw	r4,-8(fp)
 400d0a0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 400d0a4:	e0bffe17 	ldw	r2,-8(fp)
 400d0a8:	10000326 	beq	r2,zero,400d0b8 <alt_dev_llist_insert+0x2c>
 400d0ac:	e0bffe17 	ldw	r2,-8(fp)
 400d0b0:	10800217 	ldw	r2,8(r2)
 400d0b4:	1000061e 	bne	r2,zero,400d0d0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 400d0b8:	400d0500 	call	400d050 <alt_get_errno>
 400d0bc:	1007883a 	mov	r3,r2
 400d0c0:	00800584 	movi	r2,22
 400d0c4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 400d0c8:	00bffa84 	movi	r2,-22
 400d0cc:	00001306 	br	400d11c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 400d0d0:	e0bffe17 	ldw	r2,-8(fp)
 400d0d4:	e0ffff17 	ldw	r3,-4(fp)
 400d0d8:	e0fffc15 	stw	r3,-16(fp)
 400d0dc:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400d0e0:	e0bffd17 	ldw	r2,-12(fp)
 400d0e4:	e0fffc17 	ldw	r3,-16(fp)
 400d0e8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400d0ec:	e0bffc17 	ldw	r2,-16(fp)
 400d0f0:	10c00017 	ldw	r3,0(r2)
 400d0f4:	e0bffd17 	ldw	r2,-12(fp)
 400d0f8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400d0fc:	e0bffc17 	ldw	r2,-16(fp)
 400d100:	10800017 	ldw	r2,0(r2)
 400d104:	e0fffd17 	ldw	r3,-12(fp)
 400d108:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400d10c:	e0bffc17 	ldw	r2,-16(fp)
 400d110:	e0fffd17 	ldw	r3,-12(fp)
 400d114:	10c00015 	stw	r3,0(r2)

  return 0;  
 400d118:	0005883a 	mov	r2,zero
}
 400d11c:	e037883a 	mov	sp,fp
 400d120:	dfc00117 	ldw	ra,4(sp)
 400d124:	df000017 	ldw	fp,0(sp)
 400d128:	dec00204 	addi	sp,sp,8
 400d12c:	f800283a 	ret

0400d130 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 400d130:	defffd04 	addi	sp,sp,-12
 400d134:	dfc00215 	stw	ra,8(sp)
 400d138:	df000115 	stw	fp,4(sp)
 400d13c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400d140:	00810074 	movhi	r2,1025
 400d144:	10b85a04 	addi	r2,r2,-7832
 400d148:	e0bfff15 	stw	r2,-4(fp)
 400d14c:	00000606 	br	400d168 <_do_ctors+0x38>
        (*ctor) (); 
 400d150:	e0bfff17 	ldw	r2,-4(fp)
 400d154:	10800017 	ldw	r2,0(r2)
 400d158:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400d15c:	e0bfff17 	ldw	r2,-4(fp)
 400d160:	10bfff04 	addi	r2,r2,-4
 400d164:	e0bfff15 	stw	r2,-4(fp)
 400d168:	e0ffff17 	ldw	r3,-4(fp)
 400d16c:	00810074 	movhi	r2,1025
 400d170:	10b85b04 	addi	r2,r2,-7828
 400d174:	18bff62e 	bgeu	r3,r2,400d150 <__alt_mem_onchip_memory2_0+0xfc007f90>
        (*ctor) (); 
}
 400d178:	0001883a 	nop
 400d17c:	e037883a 	mov	sp,fp
 400d180:	dfc00117 	ldw	ra,4(sp)
 400d184:	df000017 	ldw	fp,0(sp)
 400d188:	dec00204 	addi	sp,sp,8
 400d18c:	f800283a 	ret

0400d190 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 400d190:	defffd04 	addi	sp,sp,-12
 400d194:	dfc00215 	stw	ra,8(sp)
 400d198:	df000115 	stw	fp,4(sp)
 400d19c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400d1a0:	00810074 	movhi	r2,1025
 400d1a4:	10b85a04 	addi	r2,r2,-7832
 400d1a8:	e0bfff15 	stw	r2,-4(fp)
 400d1ac:	00000606 	br	400d1c8 <_do_dtors+0x38>
        (*dtor) (); 
 400d1b0:	e0bfff17 	ldw	r2,-4(fp)
 400d1b4:	10800017 	ldw	r2,0(r2)
 400d1b8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400d1bc:	e0bfff17 	ldw	r2,-4(fp)
 400d1c0:	10bfff04 	addi	r2,r2,-4
 400d1c4:	e0bfff15 	stw	r2,-4(fp)
 400d1c8:	e0ffff17 	ldw	r3,-4(fp)
 400d1cc:	00810074 	movhi	r2,1025
 400d1d0:	10b85b04 	addi	r2,r2,-7828
 400d1d4:	18bff62e 	bgeu	r3,r2,400d1b0 <__alt_mem_onchip_memory2_0+0xfc007ff0>
        (*dtor) (); 
}
 400d1d8:	0001883a 	nop
 400d1dc:	e037883a 	mov	sp,fp
 400d1e0:	dfc00117 	ldw	ra,4(sp)
 400d1e4:	df000017 	ldw	fp,0(sp)
 400d1e8:	dec00204 	addi	sp,sp,8
 400d1ec:	f800283a 	ret

0400d1f0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 400d1f0:	deffff04 	addi	sp,sp,-4
 400d1f4:	df000015 	stw	fp,0(sp)
 400d1f8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 400d1fc:	0001883a 	nop
 400d200:	e037883a 	mov	sp,fp
 400d204:	df000017 	ldw	fp,0(sp)
 400d208:	dec00104 	addi	sp,sp,4
 400d20c:	f800283a 	ret

0400d210 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 400d210:	defff904 	addi	sp,sp,-28
 400d214:	dfc00615 	stw	ra,24(sp)
 400d218:	df000515 	stw	fp,20(sp)
 400d21c:	df000504 	addi	fp,sp,20
 400d220:	e13ffc15 	stw	r4,-16(fp)
 400d224:	e17ffd15 	stw	r5,-12(fp)
 400d228:	e1bffe15 	stw	r6,-8(fp)
 400d22c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 400d230:	e0800217 	ldw	r2,8(fp)
 400d234:	d8800015 	stw	r2,0(sp)
 400d238:	e1ffff17 	ldw	r7,-4(fp)
 400d23c:	e1bffe17 	ldw	r6,-8(fp)
 400d240:	e17ffd17 	ldw	r5,-12(fp)
 400d244:	e13ffc17 	ldw	r4,-16(fp)
 400d248:	400d3c00 	call	400d3c0 <alt_iic_isr_register>
}  
 400d24c:	e037883a 	mov	sp,fp
 400d250:	dfc00117 	ldw	ra,4(sp)
 400d254:	df000017 	ldw	fp,0(sp)
 400d258:	dec00204 	addi	sp,sp,8
 400d25c:	f800283a 	ret

0400d260 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 400d260:	defff904 	addi	sp,sp,-28
 400d264:	df000615 	stw	fp,24(sp)
 400d268:	df000604 	addi	fp,sp,24
 400d26c:	e13ffe15 	stw	r4,-8(fp)
 400d270:	e17fff15 	stw	r5,-4(fp)
 400d274:	e0bfff17 	ldw	r2,-4(fp)
 400d278:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400d27c:	0005303a 	rdctl	r2,status
 400d280:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400d284:	e0fffb17 	ldw	r3,-20(fp)
 400d288:	00bfff84 	movi	r2,-2
 400d28c:	1884703a 	and	r2,r3,r2
 400d290:	1001703a 	wrctl	status,r2
  
  return context;
 400d294:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400d298:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 400d29c:	00c00044 	movi	r3,1
 400d2a0:	e0bffa17 	ldw	r2,-24(fp)
 400d2a4:	1884983a 	sll	r2,r3,r2
 400d2a8:	1007883a 	mov	r3,r2
 400d2ac:	d0a78f17 	ldw	r2,-25028(gp)
 400d2b0:	1884b03a 	or	r2,r3,r2
 400d2b4:	d0a78f15 	stw	r2,-25028(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400d2b8:	d0a78f17 	ldw	r2,-25028(gp)
 400d2bc:	100170fa 	wrctl	ienable,r2
 400d2c0:	e0bffc17 	ldw	r2,-16(fp)
 400d2c4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400d2c8:	e0bffd17 	ldw	r2,-12(fp)
 400d2cc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 400d2d0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 400d2d4:	0001883a 	nop
}
 400d2d8:	e037883a 	mov	sp,fp
 400d2dc:	df000017 	ldw	fp,0(sp)
 400d2e0:	dec00104 	addi	sp,sp,4
 400d2e4:	f800283a 	ret

0400d2e8 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 400d2e8:	defff904 	addi	sp,sp,-28
 400d2ec:	df000615 	stw	fp,24(sp)
 400d2f0:	df000604 	addi	fp,sp,24
 400d2f4:	e13ffe15 	stw	r4,-8(fp)
 400d2f8:	e17fff15 	stw	r5,-4(fp)
 400d2fc:	e0bfff17 	ldw	r2,-4(fp)
 400d300:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400d304:	0005303a 	rdctl	r2,status
 400d308:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400d30c:	e0fffb17 	ldw	r3,-20(fp)
 400d310:	00bfff84 	movi	r2,-2
 400d314:	1884703a 	and	r2,r3,r2
 400d318:	1001703a 	wrctl	status,r2
  
  return context;
 400d31c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400d320:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 400d324:	00c00044 	movi	r3,1
 400d328:	e0bffa17 	ldw	r2,-24(fp)
 400d32c:	1884983a 	sll	r2,r3,r2
 400d330:	0084303a 	nor	r2,zero,r2
 400d334:	1007883a 	mov	r3,r2
 400d338:	d0a78f17 	ldw	r2,-25028(gp)
 400d33c:	1884703a 	and	r2,r3,r2
 400d340:	d0a78f15 	stw	r2,-25028(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400d344:	d0a78f17 	ldw	r2,-25028(gp)
 400d348:	100170fa 	wrctl	ienable,r2
 400d34c:	e0bffc17 	ldw	r2,-16(fp)
 400d350:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400d354:	e0bffd17 	ldw	r2,-12(fp)
 400d358:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 400d35c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 400d360:	0001883a 	nop
}
 400d364:	e037883a 	mov	sp,fp
 400d368:	df000017 	ldw	fp,0(sp)
 400d36c:	dec00104 	addi	sp,sp,4
 400d370:	f800283a 	ret

0400d374 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 400d374:	defffc04 	addi	sp,sp,-16
 400d378:	df000315 	stw	fp,12(sp)
 400d37c:	df000304 	addi	fp,sp,12
 400d380:	e13ffe15 	stw	r4,-8(fp)
 400d384:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 400d388:	000530fa 	rdctl	r2,ienable
 400d38c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 400d390:	00c00044 	movi	r3,1
 400d394:	e0bfff17 	ldw	r2,-4(fp)
 400d398:	1884983a 	sll	r2,r3,r2
 400d39c:	1007883a 	mov	r3,r2
 400d3a0:	e0bffd17 	ldw	r2,-12(fp)
 400d3a4:	1884703a 	and	r2,r3,r2
 400d3a8:	1004c03a 	cmpne	r2,r2,zero
 400d3ac:	10803fcc 	andi	r2,r2,255
}
 400d3b0:	e037883a 	mov	sp,fp
 400d3b4:	df000017 	ldw	fp,0(sp)
 400d3b8:	dec00104 	addi	sp,sp,4
 400d3bc:	f800283a 	ret

0400d3c0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 400d3c0:	defff504 	addi	sp,sp,-44
 400d3c4:	dfc00a15 	stw	ra,40(sp)
 400d3c8:	df000915 	stw	fp,36(sp)
 400d3cc:	df000904 	addi	fp,sp,36
 400d3d0:	e13ffc15 	stw	r4,-16(fp)
 400d3d4:	e17ffd15 	stw	r5,-12(fp)
 400d3d8:	e1bffe15 	stw	r6,-8(fp)
 400d3dc:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 400d3e0:	00bffa84 	movi	r2,-22
 400d3e4:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 400d3e8:	e0bffd17 	ldw	r2,-12(fp)
 400d3ec:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 400d3f0:	e0bff817 	ldw	r2,-32(fp)
 400d3f4:	10800808 	cmpgei	r2,r2,32
 400d3f8:	1000271e 	bne	r2,zero,400d498 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400d3fc:	0005303a 	rdctl	r2,status
 400d400:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400d404:	e0fffb17 	ldw	r3,-20(fp)
 400d408:	00bfff84 	movi	r2,-2
 400d40c:	1884703a 	and	r2,r3,r2
 400d410:	1001703a 	wrctl	status,r2
  
  return context;
 400d414:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 400d418:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 400d41c:	00810074 	movhi	r2,1025
 400d420:	10882f04 	addi	r2,r2,8380
 400d424:	e0fff817 	ldw	r3,-32(fp)
 400d428:	180690fa 	slli	r3,r3,3
 400d42c:	10c5883a 	add	r2,r2,r3
 400d430:	e0fffe17 	ldw	r3,-8(fp)
 400d434:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 400d438:	00810074 	movhi	r2,1025
 400d43c:	10882f04 	addi	r2,r2,8380
 400d440:	e0fff817 	ldw	r3,-32(fp)
 400d444:	180690fa 	slli	r3,r3,3
 400d448:	10c5883a 	add	r2,r2,r3
 400d44c:	10800104 	addi	r2,r2,4
 400d450:	e0ffff17 	ldw	r3,-4(fp)
 400d454:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 400d458:	e0bffe17 	ldw	r2,-8(fp)
 400d45c:	10000526 	beq	r2,zero,400d474 <alt_iic_isr_register+0xb4>
 400d460:	e0bff817 	ldw	r2,-32(fp)
 400d464:	100b883a 	mov	r5,r2
 400d468:	e13ffc17 	ldw	r4,-16(fp)
 400d46c:	400d2600 	call	400d260 <alt_ic_irq_enable>
 400d470:	00000406 	br	400d484 <alt_iic_isr_register+0xc4>
 400d474:	e0bff817 	ldw	r2,-32(fp)
 400d478:	100b883a 	mov	r5,r2
 400d47c:	e13ffc17 	ldw	r4,-16(fp)
 400d480:	400d2e80 	call	400d2e8 <alt_ic_irq_disable>
 400d484:	e0bff715 	stw	r2,-36(fp)
 400d488:	e0bffa17 	ldw	r2,-24(fp)
 400d48c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400d490:	e0bff917 	ldw	r2,-28(fp)
 400d494:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 400d498:	e0bff717 	ldw	r2,-36(fp)
}
 400d49c:	e037883a 	mov	sp,fp
 400d4a0:	dfc00117 	ldw	ra,4(sp)
 400d4a4:	df000017 	ldw	fp,0(sp)
 400d4a8:	dec00204 	addi	sp,sp,8
 400d4ac:	f800283a 	ret

0400d4b0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 400d4b0:	defff804 	addi	sp,sp,-32
 400d4b4:	dfc00715 	stw	ra,28(sp)
 400d4b8:	df000615 	stw	fp,24(sp)
 400d4bc:	dc000515 	stw	r16,20(sp)
 400d4c0:	df000604 	addi	fp,sp,24
 400d4c4:	e13ffb15 	stw	r4,-20(fp)
 400d4c8:	e17ffc15 	stw	r5,-16(fp)
 400d4cc:	e1bffd15 	stw	r6,-12(fp)
 400d4d0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 400d4d4:	e1bffe17 	ldw	r6,-8(fp)
 400d4d8:	e17ffd17 	ldw	r5,-12(fp)
 400d4dc:	e13ffc17 	ldw	r4,-16(fp)
 400d4e0:	400d7380 	call	400d738 <open>
 400d4e4:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 400d4e8:	e0bffa17 	ldw	r2,-24(fp)
 400d4ec:	10002216 	blt	r2,zero,400d578 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 400d4f0:	04010074 	movhi	r16,1025
 400d4f4:	84003204 	addi	r16,r16,200
 400d4f8:	e0bffa17 	ldw	r2,-24(fp)
 400d4fc:	01400304 	movi	r5,12
 400d500:	1009883a 	mov	r4,r2
 400d504:	4000af80 	call	4000af8 <__mulsi3>
 400d508:	8085883a 	add	r2,r16,r2
 400d50c:	10c00017 	ldw	r3,0(r2)
 400d510:	e0bffb17 	ldw	r2,-20(fp)
 400d514:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 400d518:	04010074 	movhi	r16,1025
 400d51c:	84003204 	addi	r16,r16,200
 400d520:	e0bffa17 	ldw	r2,-24(fp)
 400d524:	01400304 	movi	r5,12
 400d528:	1009883a 	mov	r4,r2
 400d52c:	4000af80 	call	4000af8 <__mulsi3>
 400d530:	8085883a 	add	r2,r16,r2
 400d534:	10800104 	addi	r2,r2,4
 400d538:	10c00017 	ldw	r3,0(r2)
 400d53c:	e0bffb17 	ldw	r2,-20(fp)
 400d540:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 400d544:	04010074 	movhi	r16,1025
 400d548:	84003204 	addi	r16,r16,200
 400d54c:	e0bffa17 	ldw	r2,-24(fp)
 400d550:	01400304 	movi	r5,12
 400d554:	1009883a 	mov	r4,r2
 400d558:	4000af80 	call	4000af8 <__mulsi3>
 400d55c:	8085883a 	add	r2,r16,r2
 400d560:	10800204 	addi	r2,r2,8
 400d564:	10c00017 	ldw	r3,0(r2)
 400d568:	e0bffb17 	ldw	r2,-20(fp)
 400d56c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 400d570:	e13ffa17 	ldw	r4,-24(fp)
 400d574:	400d8940 	call	400d894 <alt_release_fd>
  }
} 
 400d578:	0001883a 	nop
 400d57c:	e6ffff04 	addi	sp,fp,-4
 400d580:	dfc00217 	ldw	ra,8(sp)
 400d584:	df000117 	ldw	fp,4(sp)
 400d588:	dc000017 	ldw	r16,0(sp)
 400d58c:	dec00304 	addi	sp,sp,12
 400d590:	f800283a 	ret

0400d594 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 400d594:	defffb04 	addi	sp,sp,-20
 400d598:	dfc00415 	stw	ra,16(sp)
 400d59c:	df000315 	stw	fp,12(sp)
 400d5a0:	df000304 	addi	fp,sp,12
 400d5a4:	e13ffd15 	stw	r4,-12(fp)
 400d5a8:	e17ffe15 	stw	r5,-8(fp)
 400d5ac:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 400d5b0:	01c07fc4 	movi	r7,511
 400d5b4:	01800044 	movi	r6,1
 400d5b8:	e17ffd17 	ldw	r5,-12(fp)
 400d5bc:	01010074 	movhi	r4,1025
 400d5c0:	21003504 	addi	r4,r4,212
 400d5c4:	400d4b00 	call	400d4b0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 400d5c8:	01c07fc4 	movi	r7,511
 400d5cc:	000d883a 	mov	r6,zero
 400d5d0:	e17ffe17 	ldw	r5,-8(fp)
 400d5d4:	01010074 	movhi	r4,1025
 400d5d8:	21003204 	addi	r4,r4,200
 400d5dc:	400d4b00 	call	400d4b0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 400d5e0:	01c07fc4 	movi	r7,511
 400d5e4:	01800044 	movi	r6,1
 400d5e8:	e17fff17 	ldw	r5,-4(fp)
 400d5ec:	01010074 	movhi	r4,1025
 400d5f0:	21003804 	addi	r4,r4,224
 400d5f4:	400d4b00 	call	400d4b0 <alt_open_fd>
}  
 400d5f8:	0001883a 	nop
 400d5fc:	e037883a 	mov	sp,fp
 400d600:	dfc00117 	ldw	ra,4(sp)
 400d604:	df000017 	ldw	fp,0(sp)
 400d608:	dec00204 	addi	sp,sp,8
 400d60c:	f800283a 	ret

0400d610 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d610:	defffe04 	addi	sp,sp,-8
 400d614:	dfc00115 	stw	ra,4(sp)
 400d618:	df000015 	stw	fp,0(sp)
 400d61c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d620:	d0a00d17 	ldw	r2,-32716(gp)
 400d624:	10000326 	beq	r2,zero,400d634 <alt_get_errno+0x24>
 400d628:	d0a00d17 	ldw	r2,-32716(gp)
 400d62c:	103ee83a 	callr	r2
 400d630:	00000106 	br	400d638 <alt_get_errno+0x28>
 400d634:	d0a78b04 	addi	r2,gp,-25044
}
 400d638:	e037883a 	mov	sp,fp
 400d63c:	dfc00117 	ldw	ra,4(sp)
 400d640:	df000017 	ldw	fp,0(sp)
 400d644:	dec00204 	addi	sp,sp,8
 400d648:	f800283a 	ret

0400d64c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 400d64c:	defffb04 	addi	sp,sp,-20
 400d650:	dfc00415 	stw	ra,16(sp)
 400d654:	df000315 	stw	fp,12(sp)
 400d658:	dc000215 	stw	r16,8(sp)
 400d65c:	df000304 	addi	fp,sp,12
 400d660:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 400d664:	e0bffe17 	ldw	r2,-8(fp)
 400d668:	10800217 	ldw	r2,8(r2)
 400d66c:	10d00034 	orhi	r3,r2,16384
 400d670:	e0bffe17 	ldw	r2,-8(fp)
 400d674:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400d678:	e03ffd15 	stw	zero,-12(fp)
 400d67c:	00002306 	br	400d70c <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400d680:	04010074 	movhi	r16,1025
 400d684:	84003204 	addi	r16,r16,200
 400d688:	e0bffd17 	ldw	r2,-12(fp)
 400d68c:	01400304 	movi	r5,12
 400d690:	1009883a 	mov	r4,r2
 400d694:	4000af80 	call	4000af8 <__mulsi3>
 400d698:	8085883a 	add	r2,r16,r2
 400d69c:	10c00017 	ldw	r3,0(r2)
 400d6a0:	e0bffe17 	ldw	r2,-8(fp)
 400d6a4:	10800017 	ldw	r2,0(r2)
 400d6a8:	1880151e 	bne	r3,r2,400d700 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400d6ac:	04010074 	movhi	r16,1025
 400d6b0:	84003204 	addi	r16,r16,200
 400d6b4:	e0bffd17 	ldw	r2,-12(fp)
 400d6b8:	01400304 	movi	r5,12
 400d6bc:	1009883a 	mov	r4,r2
 400d6c0:	4000af80 	call	4000af8 <__mulsi3>
 400d6c4:	8085883a 	add	r2,r16,r2
 400d6c8:	10800204 	addi	r2,r2,8
 400d6cc:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400d6d0:	10000b0e 	bge	r2,zero,400d700 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 400d6d4:	01400304 	movi	r5,12
 400d6d8:	e13ffd17 	ldw	r4,-12(fp)
 400d6dc:	4000af80 	call	4000af8 <__mulsi3>
 400d6e0:	1007883a 	mov	r3,r2
 400d6e4:	00810074 	movhi	r2,1025
 400d6e8:	10803204 	addi	r2,r2,200
 400d6ec:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400d6f0:	e0bffe17 	ldw	r2,-8(fp)
 400d6f4:	18800226 	beq	r3,r2,400d700 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 400d6f8:	00bffcc4 	movi	r2,-13
 400d6fc:	00000806 	br	400d720 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400d700:	e0bffd17 	ldw	r2,-12(fp)
 400d704:	10800044 	addi	r2,r2,1
 400d708:	e0bffd15 	stw	r2,-12(fp)
 400d70c:	d0a00c17 	ldw	r2,-32720(gp)
 400d710:	1007883a 	mov	r3,r2
 400d714:	e0bffd17 	ldw	r2,-12(fp)
 400d718:	18bfd92e 	bgeu	r3,r2,400d680 <__alt_mem_onchip_memory2_0+0xfc0084c0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 400d71c:	0005883a 	mov	r2,zero
}
 400d720:	e6ffff04 	addi	sp,fp,-4
 400d724:	dfc00217 	ldw	ra,8(sp)
 400d728:	df000117 	ldw	fp,4(sp)
 400d72c:	dc000017 	ldw	r16,0(sp)
 400d730:	dec00304 	addi	sp,sp,12
 400d734:	f800283a 	ret

0400d738 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 400d738:	defff604 	addi	sp,sp,-40
 400d73c:	dfc00915 	stw	ra,36(sp)
 400d740:	df000815 	stw	fp,32(sp)
 400d744:	df000804 	addi	fp,sp,32
 400d748:	e13ffd15 	stw	r4,-12(fp)
 400d74c:	e17ffe15 	stw	r5,-8(fp)
 400d750:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 400d754:	00bfffc4 	movi	r2,-1
 400d758:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 400d75c:	00bffb44 	movi	r2,-19
 400d760:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 400d764:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 400d768:	d1600a04 	addi	r5,gp,-32728
 400d76c:	e13ffd17 	ldw	r4,-12(fp)
 400d770:	400dae00 	call	400dae0 <alt_find_dev>
 400d774:	e0bff815 	stw	r2,-32(fp)
 400d778:	e0bff817 	ldw	r2,-32(fp)
 400d77c:	1000051e 	bne	r2,zero,400d794 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 400d780:	e13ffd17 	ldw	r4,-12(fp)
 400d784:	400db700 	call	400db70 <alt_find_file>
 400d788:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 400d78c:	00800044 	movi	r2,1
 400d790:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 400d794:	e0bff817 	ldw	r2,-32(fp)
 400d798:	10002b26 	beq	r2,zero,400d848 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 400d79c:	e13ff817 	ldw	r4,-32(fp)
 400d7a0:	400dc780 	call	400dc78 <alt_get_fd>
 400d7a4:	e0bff915 	stw	r2,-28(fp)
 400d7a8:	e0bff917 	ldw	r2,-28(fp)
 400d7ac:	1000030e 	bge	r2,zero,400d7bc <open+0x84>
    {
      status = index;
 400d7b0:	e0bff917 	ldw	r2,-28(fp)
 400d7b4:	e0bffa15 	stw	r2,-24(fp)
 400d7b8:	00002506 	br	400d850 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 400d7bc:	01400304 	movi	r5,12
 400d7c0:	e13ff917 	ldw	r4,-28(fp)
 400d7c4:	4000af80 	call	4000af8 <__mulsi3>
 400d7c8:	1007883a 	mov	r3,r2
 400d7cc:	00810074 	movhi	r2,1025
 400d7d0:	10803204 	addi	r2,r2,200
 400d7d4:	1885883a 	add	r2,r3,r2
 400d7d8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 400d7dc:	e0fffe17 	ldw	r3,-8(fp)
 400d7e0:	00900034 	movhi	r2,16384
 400d7e4:	10bfffc4 	addi	r2,r2,-1
 400d7e8:	1886703a 	and	r3,r3,r2
 400d7ec:	e0bffc17 	ldw	r2,-16(fp)
 400d7f0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 400d7f4:	e0bffb17 	ldw	r2,-20(fp)
 400d7f8:	1000051e 	bne	r2,zero,400d810 <open+0xd8>
 400d7fc:	e13ffc17 	ldw	r4,-16(fp)
 400d800:	400d64c0 	call	400d64c <alt_file_locked>
 400d804:	e0bffa15 	stw	r2,-24(fp)
 400d808:	e0bffa17 	ldw	r2,-24(fp)
 400d80c:	10001016 	blt	r2,zero,400d850 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 400d810:	e0bff817 	ldw	r2,-32(fp)
 400d814:	10800317 	ldw	r2,12(r2)
 400d818:	10000826 	beq	r2,zero,400d83c <open+0x104>
 400d81c:	e0bff817 	ldw	r2,-32(fp)
 400d820:	10800317 	ldw	r2,12(r2)
 400d824:	e1ffff17 	ldw	r7,-4(fp)
 400d828:	e1bffe17 	ldw	r6,-8(fp)
 400d82c:	e17ffd17 	ldw	r5,-12(fp)
 400d830:	e13ffc17 	ldw	r4,-16(fp)
 400d834:	103ee83a 	callr	r2
 400d838:	00000106 	br	400d840 <open+0x108>
 400d83c:	0005883a 	mov	r2,zero
 400d840:	e0bffa15 	stw	r2,-24(fp)
 400d844:	00000206 	br	400d850 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 400d848:	00bffb44 	movi	r2,-19
 400d84c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 400d850:	e0bffa17 	ldw	r2,-24(fp)
 400d854:	1000090e 	bge	r2,zero,400d87c <open+0x144>
  {
    alt_release_fd (index);  
 400d858:	e13ff917 	ldw	r4,-28(fp)
 400d85c:	400d8940 	call	400d894 <alt_release_fd>
    ALT_ERRNO = -status;
 400d860:	400d6100 	call	400d610 <alt_get_errno>
 400d864:	1007883a 	mov	r3,r2
 400d868:	e0bffa17 	ldw	r2,-24(fp)
 400d86c:	0085c83a 	sub	r2,zero,r2
 400d870:	18800015 	stw	r2,0(r3)
    return -1;
 400d874:	00bfffc4 	movi	r2,-1
 400d878:	00000106 	br	400d880 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
 400d87c:	e0bff917 	ldw	r2,-28(fp)
}
 400d880:	e037883a 	mov	sp,fp
 400d884:	dfc00117 	ldw	ra,4(sp)
 400d888:	df000017 	ldw	fp,0(sp)
 400d88c:	dec00204 	addi	sp,sp,8
 400d890:	f800283a 	ret

0400d894 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 400d894:	defffc04 	addi	sp,sp,-16
 400d898:	dfc00315 	stw	ra,12(sp)
 400d89c:	df000215 	stw	fp,8(sp)
 400d8a0:	dc000115 	stw	r16,4(sp)
 400d8a4:	df000204 	addi	fp,sp,8
 400d8a8:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 400d8ac:	e0bffe17 	ldw	r2,-8(fp)
 400d8b0:	108000d0 	cmplti	r2,r2,3
 400d8b4:	1000111e 	bne	r2,zero,400d8fc <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 400d8b8:	04010074 	movhi	r16,1025
 400d8bc:	84003204 	addi	r16,r16,200
 400d8c0:	e0bffe17 	ldw	r2,-8(fp)
 400d8c4:	01400304 	movi	r5,12
 400d8c8:	1009883a 	mov	r4,r2
 400d8cc:	4000af80 	call	4000af8 <__mulsi3>
 400d8d0:	8085883a 	add	r2,r16,r2
 400d8d4:	10800204 	addi	r2,r2,8
 400d8d8:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 400d8dc:	04010074 	movhi	r16,1025
 400d8e0:	84003204 	addi	r16,r16,200
 400d8e4:	e0bffe17 	ldw	r2,-8(fp)
 400d8e8:	01400304 	movi	r5,12
 400d8ec:	1009883a 	mov	r4,r2
 400d8f0:	4000af80 	call	4000af8 <__mulsi3>
 400d8f4:	8085883a 	add	r2,r16,r2
 400d8f8:	10000015 	stw	zero,0(r2)
  }
}
 400d8fc:	0001883a 	nop
 400d900:	e6ffff04 	addi	sp,fp,-4
 400d904:	dfc00217 	ldw	ra,8(sp)
 400d908:	df000117 	ldw	fp,4(sp)
 400d90c:	dc000017 	ldw	r16,0(sp)
 400d910:	dec00304 	addi	sp,sp,12
 400d914:	f800283a 	ret

0400d918 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 400d918:	defffa04 	addi	sp,sp,-24
 400d91c:	df000515 	stw	fp,20(sp)
 400d920:	df000504 	addi	fp,sp,20
 400d924:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400d928:	0005303a 	rdctl	r2,status
 400d92c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400d930:	e0fffc17 	ldw	r3,-16(fp)
 400d934:	00bfff84 	movi	r2,-2
 400d938:	1884703a 	and	r2,r3,r2
 400d93c:	1001703a 	wrctl	status,r2
  
  return context;
 400d940:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 400d944:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 400d948:	e0bfff17 	ldw	r2,-4(fp)
 400d94c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 400d950:	e0bffd17 	ldw	r2,-12(fp)
 400d954:	10800017 	ldw	r2,0(r2)
 400d958:	e0fffd17 	ldw	r3,-12(fp)
 400d95c:	18c00117 	ldw	r3,4(r3)
 400d960:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 400d964:	e0bffd17 	ldw	r2,-12(fp)
 400d968:	10800117 	ldw	r2,4(r2)
 400d96c:	e0fffd17 	ldw	r3,-12(fp)
 400d970:	18c00017 	ldw	r3,0(r3)
 400d974:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 400d978:	e0bffd17 	ldw	r2,-12(fp)
 400d97c:	e0fffd17 	ldw	r3,-12(fp)
 400d980:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 400d984:	e0bffd17 	ldw	r2,-12(fp)
 400d988:	e0fffd17 	ldw	r3,-12(fp)
 400d98c:	10c00015 	stw	r3,0(r2)
 400d990:	e0bffb17 	ldw	r2,-20(fp)
 400d994:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400d998:	e0bffe17 	ldw	r2,-8(fp)
 400d99c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 400d9a0:	0001883a 	nop
 400d9a4:	e037883a 	mov	sp,fp
 400d9a8:	df000017 	ldw	fp,0(sp)
 400d9ac:	dec00104 	addi	sp,sp,4
 400d9b0:	f800283a 	ret

0400d9b4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 400d9b4:	defffb04 	addi	sp,sp,-20
 400d9b8:	dfc00415 	stw	ra,16(sp)
 400d9bc:	df000315 	stw	fp,12(sp)
 400d9c0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 400d9c4:	d0a00f17 	ldw	r2,-32708(gp)
 400d9c8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 400d9cc:	d0a79117 	ldw	r2,-25020(gp)
 400d9d0:	10800044 	addi	r2,r2,1
 400d9d4:	d0a79115 	stw	r2,-25020(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 400d9d8:	00002e06 	br	400da94 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 400d9dc:	e0bffd17 	ldw	r2,-12(fp)
 400d9e0:	10800017 	ldw	r2,0(r2)
 400d9e4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 400d9e8:	e0bffd17 	ldw	r2,-12(fp)
 400d9ec:	10800403 	ldbu	r2,16(r2)
 400d9f0:	10803fcc 	andi	r2,r2,255
 400d9f4:	10000426 	beq	r2,zero,400da08 <alt_tick+0x54>
 400d9f8:	d0a79117 	ldw	r2,-25020(gp)
 400d9fc:	1000021e 	bne	r2,zero,400da08 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 400da00:	e0bffd17 	ldw	r2,-12(fp)
 400da04:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 400da08:	e0bffd17 	ldw	r2,-12(fp)
 400da0c:	10800217 	ldw	r2,8(r2)
 400da10:	d0e79117 	ldw	r3,-25020(gp)
 400da14:	18801d36 	bltu	r3,r2,400da8c <alt_tick+0xd8>
 400da18:	e0bffd17 	ldw	r2,-12(fp)
 400da1c:	10800403 	ldbu	r2,16(r2)
 400da20:	10803fcc 	andi	r2,r2,255
 400da24:	1000191e 	bne	r2,zero,400da8c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 400da28:	e0bffd17 	ldw	r2,-12(fp)
 400da2c:	10800317 	ldw	r2,12(r2)
 400da30:	e0fffd17 	ldw	r3,-12(fp)
 400da34:	18c00517 	ldw	r3,20(r3)
 400da38:	1809883a 	mov	r4,r3
 400da3c:	103ee83a 	callr	r2
 400da40:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 400da44:	e0bfff17 	ldw	r2,-4(fp)
 400da48:	1000031e 	bne	r2,zero,400da58 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 400da4c:	e13ffd17 	ldw	r4,-12(fp)
 400da50:	400d9180 	call	400d918 <alt_alarm_stop>
 400da54:	00000d06 	br	400da8c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 400da58:	e0bffd17 	ldw	r2,-12(fp)
 400da5c:	10c00217 	ldw	r3,8(r2)
 400da60:	e0bfff17 	ldw	r2,-4(fp)
 400da64:	1887883a 	add	r3,r3,r2
 400da68:	e0bffd17 	ldw	r2,-12(fp)
 400da6c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 400da70:	e0bffd17 	ldw	r2,-12(fp)
 400da74:	10c00217 	ldw	r3,8(r2)
 400da78:	d0a79117 	ldw	r2,-25020(gp)
 400da7c:	1880032e 	bgeu	r3,r2,400da8c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 400da80:	e0bffd17 	ldw	r2,-12(fp)
 400da84:	00c00044 	movi	r3,1
 400da88:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 400da8c:	e0bffe17 	ldw	r2,-8(fp)
 400da90:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 400da94:	e0fffd17 	ldw	r3,-12(fp)
 400da98:	d0a00f04 	addi	r2,gp,-32708
 400da9c:	18bfcf1e 	bne	r3,r2,400d9dc <__alt_mem_onchip_memory2_0+0xfc00881c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 400daa0:	0001883a 	nop
}
 400daa4:	0001883a 	nop
 400daa8:	e037883a 	mov	sp,fp
 400daac:	dfc00117 	ldw	ra,4(sp)
 400dab0:	df000017 	ldw	fp,0(sp)
 400dab4:	dec00204 	addi	sp,sp,8
 400dab8:	f800283a 	ret

0400dabc <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 400dabc:	deffff04 	addi	sp,sp,-4
 400dac0:	df000015 	stw	fp,0(sp)
 400dac4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 400dac8:	000170fa 	wrctl	ienable,zero
}
 400dacc:	0001883a 	nop
 400dad0:	e037883a 	mov	sp,fp
 400dad4:	df000017 	ldw	fp,0(sp)
 400dad8:	dec00104 	addi	sp,sp,4
 400dadc:	f800283a 	ret

0400dae0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 400dae0:	defffa04 	addi	sp,sp,-24
 400dae4:	dfc00515 	stw	ra,20(sp)
 400dae8:	df000415 	stw	fp,16(sp)
 400daec:	df000404 	addi	fp,sp,16
 400daf0:	e13ffe15 	stw	r4,-8(fp)
 400daf4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 400daf8:	e0bfff17 	ldw	r2,-4(fp)
 400dafc:	10800017 	ldw	r2,0(r2)
 400db00:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 400db04:	e13ffe17 	ldw	r4,-8(fp)
 400db08:	4000c600 	call	4000c60 <strlen>
 400db0c:	10800044 	addi	r2,r2,1
 400db10:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 400db14:	00000d06 	br	400db4c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 400db18:	e0bffc17 	ldw	r2,-16(fp)
 400db1c:	10800217 	ldw	r2,8(r2)
 400db20:	e0fffd17 	ldw	r3,-12(fp)
 400db24:	180d883a 	mov	r6,r3
 400db28:	e17ffe17 	ldw	r5,-8(fp)
 400db2c:	1009883a 	mov	r4,r2
 400db30:	400de240 	call	400de24 <memcmp>
 400db34:	1000021e 	bne	r2,zero,400db40 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 400db38:	e0bffc17 	ldw	r2,-16(fp)
 400db3c:	00000706 	br	400db5c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 400db40:	e0bffc17 	ldw	r2,-16(fp)
 400db44:	10800017 	ldw	r2,0(r2)
 400db48:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 400db4c:	e0fffc17 	ldw	r3,-16(fp)
 400db50:	e0bfff17 	ldw	r2,-4(fp)
 400db54:	18bff01e 	bne	r3,r2,400db18 <__alt_mem_onchip_memory2_0+0xfc008958>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 400db58:	0005883a 	mov	r2,zero
}
 400db5c:	e037883a 	mov	sp,fp
 400db60:	dfc00117 	ldw	ra,4(sp)
 400db64:	df000017 	ldw	fp,0(sp)
 400db68:	dec00204 	addi	sp,sp,8
 400db6c:	f800283a 	ret

0400db70 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 400db70:	defffb04 	addi	sp,sp,-20
 400db74:	dfc00415 	stw	ra,16(sp)
 400db78:	df000315 	stw	fp,12(sp)
 400db7c:	df000304 	addi	fp,sp,12
 400db80:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 400db84:	d0a00817 	ldw	r2,-32736(gp)
 400db88:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 400db8c:	00003106 	br	400dc54 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 400db90:	e0bffd17 	ldw	r2,-12(fp)
 400db94:	10800217 	ldw	r2,8(r2)
 400db98:	1009883a 	mov	r4,r2
 400db9c:	4000c600 	call	4000c60 <strlen>
 400dba0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 400dba4:	e0bffd17 	ldw	r2,-12(fp)
 400dba8:	10c00217 	ldw	r3,8(r2)
 400dbac:	e0bffe17 	ldw	r2,-8(fp)
 400dbb0:	10bfffc4 	addi	r2,r2,-1
 400dbb4:	1885883a 	add	r2,r3,r2
 400dbb8:	10800003 	ldbu	r2,0(r2)
 400dbbc:	10803fcc 	andi	r2,r2,255
 400dbc0:	1080201c 	xori	r2,r2,128
 400dbc4:	10bfe004 	addi	r2,r2,-128
 400dbc8:	10800bd8 	cmpnei	r2,r2,47
 400dbcc:	1000031e 	bne	r2,zero,400dbdc <alt_find_file+0x6c>
    {
      len -= 1;
 400dbd0:	e0bffe17 	ldw	r2,-8(fp)
 400dbd4:	10bfffc4 	addi	r2,r2,-1
 400dbd8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 400dbdc:	e0bffe17 	ldw	r2,-8(fp)
 400dbe0:	e0ffff17 	ldw	r3,-4(fp)
 400dbe4:	1885883a 	add	r2,r3,r2
 400dbe8:	10800003 	ldbu	r2,0(r2)
 400dbec:	10803fcc 	andi	r2,r2,255
 400dbf0:	1080201c 	xori	r2,r2,128
 400dbf4:	10bfe004 	addi	r2,r2,-128
 400dbf8:	10800be0 	cmpeqi	r2,r2,47
 400dbfc:	1000081e 	bne	r2,zero,400dc20 <alt_find_file+0xb0>
 400dc00:	e0bffe17 	ldw	r2,-8(fp)
 400dc04:	e0ffff17 	ldw	r3,-4(fp)
 400dc08:	1885883a 	add	r2,r3,r2
 400dc0c:	10800003 	ldbu	r2,0(r2)
 400dc10:	10803fcc 	andi	r2,r2,255
 400dc14:	1080201c 	xori	r2,r2,128
 400dc18:	10bfe004 	addi	r2,r2,-128
 400dc1c:	10000a1e 	bne	r2,zero,400dc48 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 400dc20:	e0bffd17 	ldw	r2,-12(fp)
 400dc24:	10800217 	ldw	r2,8(r2)
 400dc28:	e0fffe17 	ldw	r3,-8(fp)
 400dc2c:	180d883a 	mov	r6,r3
 400dc30:	e17fff17 	ldw	r5,-4(fp)
 400dc34:	1009883a 	mov	r4,r2
 400dc38:	400de240 	call	400de24 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 400dc3c:	1000021e 	bne	r2,zero,400dc48 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 400dc40:	e0bffd17 	ldw	r2,-12(fp)
 400dc44:	00000706 	br	400dc64 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 400dc48:	e0bffd17 	ldw	r2,-12(fp)
 400dc4c:	10800017 	ldw	r2,0(r2)
 400dc50:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 400dc54:	e0fffd17 	ldw	r3,-12(fp)
 400dc58:	d0a00804 	addi	r2,gp,-32736
 400dc5c:	18bfcc1e 	bne	r3,r2,400db90 <__alt_mem_onchip_memory2_0+0xfc0089d0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 400dc60:	0005883a 	mov	r2,zero
}
 400dc64:	e037883a 	mov	sp,fp
 400dc68:	dfc00117 	ldw	ra,4(sp)
 400dc6c:	df000017 	ldw	fp,0(sp)
 400dc70:	dec00204 	addi	sp,sp,8
 400dc74:	f800283a 	ret

0400dc78 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 400dc78:	defffa04 	addi	sp,sp,-24
 400dc7c:	dfc00515 	stw	ra,20(sp)
 400dc80:	df000415 	stw	fp,16(sp)
 400dc84:	dc000315 	stw	r16,12(sp)
 400dc88:	df000404 	addi	fp,sp,16
 400dc8c:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 400dc90:	00bffa04 	movi	r2,-24
 400dc94:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 400dc98:	e03ffc15 	stw	zero,-16(fp)
 400dc9c:	00001d06 	br	400dd14 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
 400dca0:	04010074 	movhi	r16,1025
 400dca4:	84003204 	addi	r16,r16,200
 400dca8:	e0bffc17 	ldw	r2,-16(fp)
 400dcac:	01400304 	movi	r5,12
 400dcb0:	1009883a 	mov	r4,r2
 400dcb4:	4000af80 	call	4000af8 <__mulsi3>
 400dcb8:	8085883a 	add	r2,r16,r2
 400dcbc:	10800017 	ldw	r2,0(r2)
 400dcc0:	1000111e 	bne	r2,zero,400dd08 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
 400dcc4:	04010074 	movhi	r16,1025
 400dcc8:	84003204 	addi	r16,r16,200
 400dccc:	e0bffc17 	ldw	r2,-16(fp)
 400dcd0:	01400304 	movi	r5,12
 400dcd4:	1009883a 	mov	r4,r2
 400dcd8:	4000af80 	call	4000af8 <__mulsi3>
 400dcdc:	8085883a 	add	r2,r16,r2
 400dce0:	e0fffe17 	ldw	r3,-8(fp)
 400dce4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 400dce8:	d0e00c17 	ldw	r3,-32720(gp)
 400dcec:	e0bffc17 	ldw	r2,-16(fp)
 400dcf0:	1880020e 	bge	r3,r2,400dcfc <alt_get_fd+0x84>
      {
        alt_max_fd = i;
 400dcf4:	e0bffc17 	ldw	r2,-16(fp)
 400dcf8:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
 400dcfc:	e0bffc17 	ldw	r2,-16(fp)
 400dd00:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 400dd04:	00000606 	br	400dd20 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 400dd08:	e0bffc17 	ldw	r2,-16(fp)
 400dd0c:	10800044 	addi	r2,r2,1
 400dd10:	e0bffc15 	stw	r2,-16(fp)
 400dd14:	e0bffc17 	ldw	r2,-16(fp)
 400dd18:	10800810 	cmplti	r2,r2,32
 400dd1c:	103fe01e 	bne	r2,zero,400dca0 <__alt_mem_onchip_memory2_0+0xfc008ae0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 400dd20:	e0bffd17 	ldw	r2,-12(fp)
}
 400dd24:	e6ffff04 	addi	sp,fp,-4
 400dd28:	dfc00217 	ldw	ra,8(sp)
 400dd2c:	df000117 	ldw	fp,4(sp)
 400dd30:	dc000017 	ldw	r16,0(sp)
 400dd34:	dec00304 	addi	sp,sp,12
 400dd38:	f800283a 	ret

0400dd3c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 400dd3c:	defffe04 	addi	sp,sp,-8
 400dd40:	df000115 	stw	fp,4(sp)
 400dd44:	df000104 	addi	fp,sp,4
 400dd48:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 400dd4c:	e0bfff17 	ldw	r2,-4(fp)
 400dd50:	10bffe84 	addi	r2,r2,-6
 400dd54:	10c00428 	cmpgeui	r3,r2,16
 400dd58:	18001a1e 	bne	r3,zero,400ddc4 <alt_exception_cause_generated_bad_addr+0x88>
 400dd5c:	100690ba 	slli	r3,r2,2
 400dd60:	00810074 	movhi	r2,1025
 400dd64:	10b75d04 	addi	r2,r2,-8844
 400dd68:	1885883a 	add	r2,r3,r2
 400dd6c:	10800017 	ldw	r2,0(r2)
 400dd70:	1000683a 	jmp	r2
 400dd74:	0400ddb4 	movhi	r16,886
 400dd78:	0400ddb4 	movhi	r16,886
 400dd7c:	0400ddc4 	movi	r16,887
 400dd80:	0400ddc4 	movi	r16,887
 400dd84:	0400ddc4 	movi	r16,887
 400dd88:	0400ddb4 	movhi	r16,886
 400dd8c:	0400ddbc 	xorhi	r16,zero,886
 400dd90:	0400ddc4 	movi	r16,887
 400dd94:	0400ddb4 	movhi	r16,886
 400dd98:	0400ddb4 	movhi	r16,886
 400dd9c:	0400ddc4 	movi	r16,887
 400dda0:	0400ddb4 	movhi	r16,886
 400dda4:	0400ddbc 	xorhi	r16,zero,886
 400dda8:	0400ddc4 	movi	r16,887
 400ddac:	0400ddc4 	movi	r16,887
 400ddb0:	0400ddb4 	movhi	r16,886
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 400ddb4:	00800044 	movi	r2,1
 400ddb8:	00000306 	br	400ddc8 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 400ddbc:	0005883a 	mov	r2,zero
 400ddc0:	00000106 	br	400ddc8 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 400ddc4:	0005883a 	mov	r2,zero
  }
}
 400ddc8:	e037883a 	mov	sp,fp
 400ddcc:	df000017 	ldw	fp,0(sp)
 400ddd0:	dec00104 	addi	sp,sp,4
 400ddd4:	f800283a 	ret

0400ddd8 <atexit>:
 400ddd8:	200b883a 	mov	r5,r4
 400dddc:	000f883a 	mov	r7,zero
 400dde0:	000d883a 	mov	r6,zero
 400dde4:	0009883a 	mov	r4,zero
 400dde8:	400dea01 	jmpi	400dea0 <__register_exitproc>

0400ddec <exit>:
 400ddec:	defffe04 	addi	sp,sp,-8
 400ddf0:	000b883a 	mov	r5,zero
 400ddf4:	dc000015 	stw	r16,0(sp)
 400ddf8:	dfc00115 	stw	ra,4(sp)
 400ddfc:	2021883a 	mov	r16,r4
 400de00:	400dfb80 	call	400dfb8 <__call_exitprocs>
 400de04:	00810074 	movhi	r2,1025
 400de08:	10809404 	addi	r2,r2,592
 400de0c:	11000017 	ldw	r4,0(r2)
 400de10:	20800f17 	ldw	r2,60(r4)
 400de14:	10000126 	beq	r2,zero,400de1c <exit+0x30>
 400de18:	103ee83a 	callr	r2
 400de1c:	8009883a 	mov	r4,r16
 400de20:	400e1380 	call	400e138 <_exit>

0400de24 <memcmp>:
 400de24:	01c000c4 	movi	r7,3
 400de28:	3980192e 	bgeu	r7,r6,400de90 <memcmp+0x6c>
 400de2c:	2144b03a 	or	r2,r4,r5
 400de30:	11c4703a 	and	r2,r2,r7
 400de34:	10000f26 	beq	r2,zero,400de74 <memcmp+0x50>
 400de38:	20800003 	ldbu	r2,0(r4)
 400de3c:	28c00003 	ldbu	r3,0(r5)
 400de40:	10c0151e 	bne	r2,r3,400de98 <memcmp+0x74>
 400de44:	31bfff84 	addi	r6,r6,-2
 400de48:	01ffffc4 	movi	r7,-1
 400de4c:	00000406 	br	400de60 <memcmp+0x3c>
 400de50:	20800003 	ldbu	r2,0(r4)
 400de54:	28c00003 	ldbu	r3,0(r5)
 400de58:	31bfffc4 	addi	r6,r6,-1
 400de5c:	10c00e1e 	bne	r2,r3,400de98 <memcmp+0x74>
 400de60:	21000044 	addi	r4,r4,1
 400de64:	29400044 	addi	r5,r5,1
 400de68:	31fff91e 	bne	r6,r7,400de50 <__alt_mem_onchip_memory2_0+0xfc008c90>
 400de6c:	0005883a 	mov	r2,zero
 400de70:	f800283a 	ret
 400de74:	20c00017 	ldw	r3,0(r4)
 400de78:	28800017 	ldw	r2,0(r5)
 400de7c:	18bfee1e 	bne	r3,r2,400de38 <__alt_mem_onchip_memory2_0+0xfc008c78>
 400de80:	31bfff04 	addi	r6,r6,-4
 400de84:	21000104 	addi	r4,r4,4
 400de88:	29400104 	addi	r5,r5,4
 400de8c:	39bff936 	bltu	r7,r6,400de74 <__alt_mem_onchip_memory2_0+0xfc008cb4>
 400de90:	303fe91e 	bne	r6,zero,400de38 <__alt_mem_onchip_memory2_0+0xfc008c78>
 400de94:	003ff506 	br	400de6c <__alt_mem_onchip_memory2_0+0xfc008cac>
 400de98:	10c5c83a 	sub	r2,r2,r3
 400de9c:	f800283a 	ret

0400dea0 <__register_exitproc>:
 400dea0:	defffa04 	addi	sp,sp,-24
 400dea4:	dc000315 	stw	r16,12(sp)
 400dea8:	04010074 	movhi	r16,1025
 400deac:	84009404 	addi	r16,r16,592
 400deb0:	80c00017 	ldw	r3,0(r16)
 400deb4:	dc400415 	stw	r17,16(sp)
 400deb8:	dfc00515 	stw	ra,20(sp)
 400debc:	18805217 	ldw	r2,328(r3)
 400dec0:	2023883a 	mov	r17,r4
 400dec4:	10003726 	beq	r2,zero,400dfa4 <__register_exitproc+0x104>
 400dec8:	10c00117 	ldw	r3,4(r2)
 400decc:	010007c4 	movi	r4,31
 400ded0:	20c00e16 	blt	r4,r3,400df0c <__register_exitproc+0x6c>
 400ded4:	1a000044 	addi	r8,r3,1
 400ded8:	8800221e 	bne	r17,zero,400df64 <__register_exitproc+0xc4>
 400dedc:	18c00084 	addi	r3,r3,2
 400dee0:	18c7883a 	add	r3,r3,r3
 400dee4:	18c7883a 	add	r3,r3,r3
 400dee8:	12000115 	stw	r8,4(r2)
 400deec:	10c7883a 	add	r3,r2,r3
 400def0:	19400015 	stw	r5,0(r3)
 400def4:	0005883a 	mov	r2,zero
 400def8:	dfc00517 	ldw	ra,20(sp)
 400defc:	dc400417 	ldw	r17,16(sp)
 400df00:	dc000317 	ldw	r16,12(sp)
 400df04:	dec00604 	addi	sp,sp,24
 400df08:	f800283a 	ret
 400df0c:	00800034 	movhi	r2,0
 400df10:	10800004 	addi	r2,r2,0
 400df14:	10002626 	beq	r2,zero,400dfb0 <__register_exitproc+0x110>
 400df18:	01006404 	movi	r4,400
 400df1c:	d9400015 	stw	r5,0(sp)
 400df20:	d9800115 	stw	r6,4(sp)
 400df24:	d9c00215 	stw	r7,8(sp)
 400df28:	00000000 	call	0 <__reset-0x4000000>
 400df2c:	d9400017 	ldw	r5,0(sp)
 400df30:	d9800117 	ldw	r6,4(sp)
 400df34:	d9c00217 	ldw	r7,8(sp)
 400df38:	10001d26 	beq	r2,zero,400dfb0 <__register_exitproc+0x110>
 400df3c:	81000017 	ldw	r4,0(r16)
 400df40:	10000115 	stw	zero,4(r2)
 400df44:	02000044 	movi	r8,1
 400df48:	22405217 	ldw	r9,328(r4)
 400df4c:	0007883a 	mov	r3,zero
 400df50:	12400015 	stw	r9,0(r2)
 400df54:	20805215 	stw	r2,328(r4)
 400df58:	10006215 	stw	zero,392(r2)
 400df5c:	10006315 	stw	zero,396(r2)
 400df60:	883fde26 	beq	r17,zero,400dedc <__alt_mem_onchip_memory2_0+0xfc008d1c>
 400df64:	18c9883a 	add	r4,r3,r3
 400df68:	2109883a 	add	r4,r4,r4
 400df6c:	1109883a 	add	r4,r2,r4
 400df70:	21802215 	stw	r6,136(r4)
 400df74:	01800044 	movi	r6,1
 400df78:	12406217 	ldw	r9,392(r2)
 400df7c:	30cc983a 	sll	r6,r6,r3
 400df80:	4992b03a 	or	r9,r9,r6
 400df84:	12406215 	stw	r9,392(r2)
 400df88:	21c04215 	stw	r7,264(r4)
 400df8c:	01000084 	movi	r4,2
 400df90:	893fd21e 	bne	r17,r4,400dedc <__alt_mem_onchip_memory2_0+0xfc008d1c>
 400df94:	11006317 	ldw	r4,396(r2)
 400df98:	218cb03a 	or	r6,r4,r6
 400df9c:	11806315 	stw	r6,396(r2)
 400dfa0:	003fce06 	br	400dedc <__alt_mem_onchip_memory2_0+0xfc008d1c>
 400dfa4:	18805304 	addi	r2,r3,332
 400dfa8:	18805215 	stw	r2,328(r3)
 400dfac:	003fc606 	br	400dec8 <__alt_mem_onchip_memory2_0+0xfc008d08>
 400dfb0:	00bfffc4 	movi	r2,-1
 400dfb4:	003fd006 	br	400def8 <__alt_mem_onchip_memory2_0+0xfc008d38>

0400dfb8 <__call_exitprocs>:
 400dfb8:	defff504 	addi	sp,sp,-44
 400dfbc:	df000915 	stw	fp,36(sp)
 400dfc0:	dd400615 	stw	r21,24(sp)
 400dfc4:	dc800315 	stw	r18,12(sp)
 400dfc8:	dfc00a15 	stw	ra,40(sp)
 400dfcc:	ddc00815 	stw	r23,32(sp)
 400dfd0:	dd800715 	stw	r22,28(sp)
 400dfd4:	dd000515 	stw	r20,20(sp)
 400dfd8:	dcc00415 	stw	r19,16(sp)
 400dfdc:	dc400215 	stw	r17,8(sp)
 400dfe0:	dc000115 	stw	r16,4(sp)
 400dfe4:	d9000015 	stw	r4,0(sp)
 400dfe8:	2839883a 	mov	fp,r5
 400dfec:	04800044 	movi	r18,1
 400dff0:	057fffc4 	movi	r21,-1
 400dff4:	00810074 	movhi	r2,1025
 400dff8:	10809404 	addi	r2,r2,592
 400dffc:	12000017 	ldw	r8,0(r2)
 400e000:	45005217 	ldw	r20,328(r8)
 400e004:	44c05204 	addi	r19,r8,328
 400e008:	a0001c26 	beq	r20,zero,400e07c <__call_exitprocs+0xc4>
 400e00c:	a0800117 	ldw	r2,4(r20)
 400e010:	15ffffc4 	addi	r23,r2,-1
 400e014:	b8000d16 	blt	r23,zero,400e04c <__call_exitprocs+0x94>
 400e018:	14000044 	addi	r16,r2,1
 400e01c:	8421883a 	add	r16,r16,r16
 400e020:	8421883a 	add	r16,r16,r16
 400e024:	84402004 	addi	r17,r16,128
 400e028:	a463883a 	add	r17,r20,r17
 400e02c:	a421883a 	add	r16,r20,r16
 400e030:	e0001e26 	beq	fp,zero,400e0ac <__call_exitprocs+0xf4>
 400e034:	80804017 	ldw	r2,256(r16)
 400e038:	e0801c26 	beq	fp,r2,400e0ac <__call_exitprocs+0xf4>
 400e03c:	bdffffc4 	addi	r23,r23,-1
 400e040:	843fff04 	addi	r16,r16,-4
 400e044:	8c7fff04 	addi	r17,r17,-4
 400e048:	bd7ff91e 	bne	r23,r21,400e030 <__alt_mem_onchip_memory2_0+0xfc008e70>
 400e04c:	00800034 	movhi	r2,0
 400e050:	10800004 	addi	r2,r2,0
 400e054:	10000926 	beq	r2,zero,400e07c <__call_exitprocs+0xc4>
 400e058:	a0800117 	ldw	r2,4(r20)
 400e05c:	1000301e 	bne	r2,zero,400e120 <__call_exitprocs+0x168>
 400e060:	a0800017 	ldw	r2,0(r20)
 400e064:	10003226 	beq	r2,zero,400e130 <__call_exitprocs+0x178>
 400e068:	a009883a 	mov	r4,r20
 400e06c:	98800015 	stw	r2,0(r19)
 400e070:	00000000 	call	0 <__reset-0x4000000>
 400e074:	9d000017 	ldw	r20,0(r19)
 400e078:	a03fe41e 	bne	r20,zero,400e00c <__alt_mem_onchip_memory2_0+0xfc008e4c>
 400e07c:	dfc00a17 	ldw	ra,40(sp)
 400e080:	df000917 	ldw	fp,36(sp)
 400e084:	ddc00817 	ldw	r23,32(sp)
 400e088:	dd800717 	ldw	r22,28(sp)
 400e08c:	dd400617 	ldw	r21,24(sp)
 400e090:	dd000517 	ldw	r20,20(sp)
 400e094:	dcc00417 	ldw	r19,16(sp)
 400e098:	dc800317 	ldw	r18,12(sp)
 400e09c:	dc400217 	ldw	r17,8(sp)
 400e0a0:	dc000117 	ldw	r16,4(sp)
 400e0a4:	dec00b04 	addi	sp,sp,44
 400e0a8:	f800283a 	ret
 400e0ac:	a0800117 	ldw	r2,4(r20)
 400e0b0:	80c00017 	ldw	r3,0(r16)
 400e0b4:	10bfffc4 	addi	r2,r2,-1
 400e0b8:	15c01426 	beq	r2,r23,400e10c <__call_exitprocs+0x154>
 400e0bc:	80000015 	stw	zero,0(r16)
 400e0c0:	183fde26 	beq	r3,zero,400e03c <__alt_mem_onchip_memory2_0+0xfc008e7c>
 400e0c4:	95c8983a 	sll	r4,r18,r23
 400e0c8:	a0806217 	ldw	r2,392(r20)
 400e0cc:	a5800117 	ldw	r22,4(r20)
 400e0d0:	2084703a 	and	r2,r4,r2
 400e0d4:	10000b26 	beq	r2,zero,400e104 <__call_exitprocs+0x14c>
 400e0d8:	a0806317 	ldw	r2,396(r20)
 400e0dc:	2088703a 	and	r4,r4,r2
 400e0e0:	20000c1e 	bne	r4,zero,400e114 <__call_exitprocs+0x15c>
 400e0e4:	89400017 	ldw	r5,0(r17)
 400e0e8:	d9000017 	ldw	r4,0(sp)
 400e0ec:	183ee83a 	callr	r3
 400e0f0:	a0800117 	ldw	r2,4(r20)
 400e0f4:	15bfbf1e 	bne	r2,r22,400dff4 <__alt_mem_onchip_memory2_0+0xfc008e34>
 400e0f8:	98800017 	ldw	r2,0(r19)
 400e0fc:	153fcf26 	beq	r2,r20,400e03c <__alt_mem_onchip_memory2_0+0xfc008e7c>
 400e100:	003fbc06 	br	400dff4 <__alt_mem_onchip_memory2_0+0xfc008e34>
 400e104:	183ee83a 	callr	r3
 400e108:	003ff906 	br	400e0f0 <__alt_mem_onchip_memory2_0+0xfc008f30>
 400e10c:	a5c00115 	stw	r23,4(r20)
 400e110:	003feb06 	br	400e0c0 <__alt_mem_onchip_memory2_0+0xfc008f00>
 400e114:	89000017 	ldw	r4,0(r17)
 400e118:	183ee83a 	callr	r3
 400e11c:	003ff406 	br	400e0f0 <__alt_mem_onchip_memory2_0+0xfc008f30>
 400e120:	a0800017 	ldw	r2,0(r20)
 400e124:	a027883a 	mov	r19,r20
 400e128:	1029883a 	mov	r20,r2
 400e12c:	003fb606 	br	400e008 <__alt_mem_onchip_memory2_0+0xfc008e48>
 400e130:	0005883a 	mov	r2,zero
 400e134:	003ffb06 	br	400e124 <__alt_mem_onchip_memory2_0+0xfc008f64>

0400e138 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 400e138:	defffd04 	addi	sp,sp,-12
 400e13c:	df000215 	stw	fp,8(sp)
 400e140:	df000204 	addi	fp,sp,8
 400e144:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 400e148:	0001883a 	nop
 400e14c:	e0bfff17 	ldw	r2,-4(fp)
 400e150:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 400e154:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 400e158:	10000226 	beq	r2,zero,400e164 <_exit+0x2c>
    ALT_SIM_FAIL();
 400e15c:	002af070 	cmpltui	zero,zero,43969
 400e160:	00000106 	br	400e168 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 400e164:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 400e168:	003fff06 	br	400e168 <__alt_mem_onchip_memory2_0+0xfc008fa8>
